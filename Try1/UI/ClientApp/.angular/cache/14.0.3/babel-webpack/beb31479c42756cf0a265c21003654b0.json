{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { EventEmitter, Component, ViewEncapsulation, Input, Output, ViewChildren, HostListener, Pipe, ViewChild, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { __awaiter } from 'tslib';\nimport { map } from 'rxjs/operators';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/platform-browser';\nimport * as ɵngcc4 from '@angular/forms';\nconst _c0 = [\"chatWindow\"];\n\nfunction NgChat_link_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"link\", 2);\n    ɵngcc0.ɵɵpipe(1, \"sanitize\");\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"href\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r0.customTheme), ɵngcc0.ɵɵsanitizeResourceUrl);\n  }\n}\n\nconst _c1 = function (a2) {\n  return {\n    \"ng-chat-window\": true,\n    \"primary-outline-color\": true,\n    \"ng-chat-window-collapsed\": a2\n  };\n};\n\nconst _c2 = function (a0) {\n  return {\n    \"right\": a0\n  };\n};\n\nfunction NgChat_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6)(1, \"ng-chat-window\", 7, 8);\n    ɵngcc0.ɵɵlistener(\"onMessagesSeen\", function NgChat_div_1_div_2_Template_ng_chat_window_onMessagesSeen_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r6.onWindowMessagesSeen($event));\n    })(\"onMessageSent\", function NgChat_div_1_div_2_Template_ng_chat_window_onMessageSent_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r8.onWindowMessageSent($event));\n    })(\"onTabTriggered\", function NgChat_div_1_div_2_Template_ng_chat_window_onTabTriggered_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r9.onWindowTabTriggered($event));\n    })(\"onChatWindowClosed\", function NgChat_div_1_div_2_Template_ng_chat_window_onChatWindowClosed_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r10.onWindowChatClosed($event));\n    })(\"onOptionTriggered\", function NgChat_div_1_div_2_Template_ng_chat_window_onOptionTriggered_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      const ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r11.onWindowOptionTriggered($event));\n    })(\"onLoadHistoryTriggered\", function NgChat_div_1_div_2_Template_ng_chat_window_onLoadHistoryTriggered_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      const ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r12.fetchMessageHistory($event));\n    });\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const window_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(12, _c1, window_r3.isCollapsed))(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(14, _c2, (!ctx_r2.hideFriendsList ? ctx_r2.friendsListWidth : 0) + 20 + ctx_r2.windowSizeFactor * i_r4 + \"px\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"fileUploadAdapter\", ctx_r2.fileUploadAdapter)(\"localization\", ctx_r2.localization)(\"userId\", ctx_r2.userId)(\"window\", window_r3)(\"showOptions\", ctx_r2.groupAdapter)(\"emojisEnabled\", ctx_r2.emojisEnabled)(\"linkfyEnabled\", ctx_r2.linkfyEnabled)(\"showMessageDate\", ctx_r2.showMessageDate)(\"messageDatePipeFormat\", ctx_r2.messageDatePipeFormat)(\"hasPagedHistory\", ctx_r2.hasPagedHistory);\n  }\n}\n\nfunction NgChat_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3)(1, \"ng-chat-friends-list\", 4);\n    ɵngcc0.ɵɵlistener(\"onParticipantClicked\", function NgChat_div_1_Template_ng_chat_friends_list_onParticipantClicked_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      const ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r13.onParticipantClickedFromFriendsList($event));\n    })(\"onOptionPromptCanceled\", function NgChat_div_1_Template_ng_chat_friends_list_onOptionPromptCanceled_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      const ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r15.onOptionPromptCanceled());\n    })(\"onOptionPromptConfirmed\", function NgChat_div_1_Template_ng_chat_friends_list_onOptionPromptConfirmed_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      const ctx_r16 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r16.onOptionPromptConfirmed($event));\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(2, NgChat_div_1_div_2_Template, 3, 16, \"div\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1.theme);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"localization\", ctx_r1.localization)(\"shouldDisplay\", !ctx_r1.hideFriendsList)(\"userId\", ctx_r1.userId)(\"isCollapsed\", ctx_r1.isCollapsed)(\"searchEnabled\", ctx_r1.searchEnabled)(\"participants\", ctx_r1.participants)(\"participantsResponse\", ctx_r1.participantsResponse)(\"participantsInteractedWith\", ctx_r1.participantsInteractedWith)(\"windows\", ctx_r1.windows)(\"currentActiveOption\", ctx_r1.currentActiveOption);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.windows);\n  }\n}\n\nfunction NgChatOptionsComponent_div_0_a_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatOptionsComponent_div_0_a_5_Template_a_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5);\n      const option_r2 = restoredCtx.$implicit;\n      const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r4.onOptionClicked(option_r2));\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"primary-text\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", option_r2.displayLabel, \" \");\n  }\n}\n\nfunction NgChatOptionsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1)(1, \"button\", 2)(2, \"span\", 3);\n    ɵngcc0.ɵɵtext(3, \"...\");\n    ɵngcc0.ɵɵelementEnd()();\n    ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(5, NgChatOptionsComponent_div_0_a_5_Template, 2, 2, \"a\", 5);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.options);\n  }\n}\n\nfunction NgChatFriendsListComponent_div_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_div_4_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r4.onFriendsListActionCancelClicked());\n    });\n    ɵngcc0.ɵɵelementStart(1, \"a\", 7);\n    ɵngcc0.ɵɵelement(2, \"i\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"a\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_div_4_Template_a_click_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r6.onFriendsListActionConfirmClicked());\n    });\n    ɵngcc0.ɵɵelement(4, \"i\", 10);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n}\n\nfunction NgChatFriendsListComponent_div_0_input_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"input\", 11);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function NgChatFriendsListComponent_div_0_input_5_Template_input_ngModelChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r7.searchInput = $event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"placeholder\", ctx_r2.localization.searchPlaceholder)(\"ngModel\", ctx_r2.searchInput);\n  }\n}\n\nfunction NgChatFriendsListComponent_div_0_ul_6_li_1_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"input\", 21);\n    ɵngcc0.ɵɵlistener(\"change\", function NgChatFriendsListComponent_div_0_ul_6_li_1_input_1_Template_input_change_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r17);\n      const user_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n      const ctx_r15 = ɵngcc0.ɵɵnextContext(3);\n      return ɵngcc0.ɵɵresetView(ctx_r15.onFriendsListCheckboxChange(user_r10, $event.target.checked));\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r11 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r11.isUserSelectedFromFriendsList(user_r10));\n  }\n}\n\nfunction NgChatFriendsListComponent_div_0_ul_6_li_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 22);\n    ɵngcc0.ɵɵelement(1, \"i\", 23);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgChatFriendsListComponent_div_0_ul_6_li_1_img_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"img\", 24);\n    ɵngcc0.ɵɵpipe(1, \"sanitize\");\n  }\n\n  if (rf & 2) {\n    const user_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"src\", ɵngcc0.ɵɵpipeBind1(1, 1, user_r10.avatar), ɵngcc0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction NgChatFriendsListComponent_div_0_ul_6_li_1_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 25);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r14.unreadMessagesTotalByParticipant(user_r10));\n  }\n}\n\nconst _c3 = function (a0) {\n  return {\n    \"ng-chat-friends-list-selectable-offset\": a0,\n    \"ng-chat-friends-list-container\": true\n  };\n};\n\nconst _c4 = function (a1, a2, a3, a4) {\n  return {\n    \"ng-chat-participant-status\": true,\n    \"online\": a1,\n    \"busy\": a2,\n    \"away\": a3,\n    \"offline\": a4\n  };\n};\n\nfunction NgChatFriendsListComponent_div_0_ul_6_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵtemplate(1, NgChatFriendsListComponent_div_0_ul_6_li_1_input_1_Template, 1, 1, \"input\", 14);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 15);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_ul_6_li_1_Template_div_click_2_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r22);\n      const user_r10 = restoredCtx.$implicit;\n      const ctx_r21 = ɵngcc0.ɵɵnextContext(3);\n      return ɵngcc0.ɵɵresetView(ctx_r21.onUserClick(user_r10));\n    });\n    ɵngcc0.ɵɵtemplate(3, NgChatFriendsListComponent_div_0_ul_6_li_1_div_3_Template, 2, 0, \"div\", 16);\n    ɵngcc0.ɵɵtemplate(4, NgChatFriendsListComponent_div_0_ul_6_li_1_img_4_Template, 2, 3, \"img\", 17);\n    ɵngcc0.ɵɵelementStart(5, \"strong\", 18);\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(7, \"span\", 19);\n    ɵngcc0.ɵɵtemplate(8, NgChatFriendsListComponent_div_0_ul_6_li_1_span_8_Template, 2, 1, \"span\", 20);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const user_r10 = ctx.$implicit;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.currentActiveOption && ctx_r9.currentActiveOption.validateContext(user_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(9, _c3, ctx_r9.currentActiveOption));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !user_r10.avatar);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", user_r10.avatar);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", user_r10.displayName);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(user_r10.displayName);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r9.chatParticipantStatusDescriptor(user_r10.status, ctx_r9.localization));\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(11, _c4, user_r10.status == ctx_r9.ChatParticipantStatus.Online, user_r10.status == ctx_r9.ChatParticipantStatus.Busy, user_r10.status == ctx_r9.ChatParticipantStatus.Away, user_r10.status == ctx_r9.ChatParticipantStatus.Offline));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.unreadMessagesTotalByParticipant(user_r10).length > 0);\n  }\n}\n\nconst _c5 = function (a0) {\n  return {\n    \"offset-search\": a0\n  };\n};\n\nfunction NgChatFriendsListComponent_div_0_ul_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 12);\n    ɵngcc0.ɵɵtemplate(1, NgChatFriendsListComponent_div_0_ul_6_li_1_Template, 9, 16, \"li\", 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(2, _c5, ctx_r3.searchEnabled));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.filteredParticipants);\n  }\n}\n\nconst _c6 = function (a2) {\n  return {\n    \"primary-outline-color\": true,\n    \"primary-background\": true,\n    \"ng-chat-people-collapsed\": a2\n  };\n};\n\nfunction NgChatFriendsListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1)(1, \"a\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_Template_a_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r24);\n      const ctx_r23 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r23.onChatTitleClicked());\n    });\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd()();\n    ɵngcc0.ɵɵtemplate(4, NgChatFriendsListComponent_div_0_div_4_Template, 5, 0, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(5, NgChatFriendsListComponent_div_0_input_5_Template, 1, 2, \"input\", 4);\n    ɵngcc0.ɵɵtemplate(6, NgChatFriendsListComponent_div_0_ul_6_Template, 2, 4, \"ul\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c6, ctx_r0.isCollapsed));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.localization.title, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.currentActiveOption);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.searchEnabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.isCollapsed);\n  }\n}\n\nconst _c7 = [\"chatMessages\"];\nconst _c8 = [\"nativeFileInput\"];\nconst _c9 = [\"chatWindowInput\"];\n\nfunction NgChatWindowComponent_ng_container_0_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.unreadMessagesTotal(ctx_r2.window));\n  }\n}\n\nfunction NgChatWindowComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_0_Template_div_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r3.onChatWindowClicked(ctx_r3.window));\n    });\n    ɵngcc0.ɵɵelementStart(3, \"strong\", 3);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(5, \"span\", 4);\n    ɵngcc0.ɵɵtemplate(6, NgChatWindowComponent_ng_container_0_span_6_Template, 2, 1, \"span\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(7, \"a\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_0_Template_a_click_7_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r5.onCloseChatWindow());\n    });\n    ɵngcc0.ɵɵtext(8, \"X\");\n    ɵngcc0.ɵɵelementEnd()();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r0.window.participant.displayName);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.window.participant.displayName, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r0.chatParticipantStatusDescriptor(ctx_r0.window.participant.status, ctx_r0.localization));\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(5, _c4, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Online, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Busy, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Away, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Offline));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.unreadMessagesTotal(ctx_r0.window).length > 0);\n  }\n}\n\nfunction NgChatWindowComponent_ng_container_1_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6.unreadMessagesTotal(ctx_r6.window));\n  }\n}\n\nfunction NgChatWindowComponent_ng_container_1_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18);\n    ɵngcc0.ɵɵtext(2, \"Loading history...\");\n    ɵngcc0.ɵɵelementEnd()();\n  }\n}\n\nfunction NgChatWindowComponent_ng_container_1_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19)(1, \"a\", 20);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_1_div_13_Template_a_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      const ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r13.fetchMessageHistory(ctx_r13.window));\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r9.localization.loadMessageHistoryPlaceholder);\n  }\n}\n\nfunction NgChatWindowComponent_ng_container_1_div_14_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 27);\n    ɵngcc0.ɵɵelement(1, \"i\", 28);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgChatWindowComponent_ng_container_1_div_14_ng_container_1_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"img\", 29);\n    ɵngcc0.ɵɵpipe(1, \"sanitize\");\n  }\n\n  if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"src\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r22.getChatWindowAvatar(ctx_r22.window.participant, message_r15)), ɵngcc0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction NgChatWindowComponent_ng_container_1_div_14_ng_container_1_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 30);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"groupMessageDisplayName\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r23 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(2, 1, ctx_r23.window.participant, message_r15));\n  }\n}\n\nfunction NgChatWindowComponent_ng_container_1_div_14_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgChatWindowComponent_ng_container_1_div_14_ng_container_1_div_1_Template, 2, 0, \"div\", 24);\n    ɵngcc0.ɵɵtemplate(2, NgChatWindowComponent_ng_container_1_div_14_ng_container_1_img_2_Template, 2, 3, \"img\", 25);\n    ɵngcc0.ɵɵtemplate(3, NgChatWindowComponent_ng_container_1_div_14_ng_container_1_span_3_Template, 3, 4, \"span\", 26);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r17.getChatWindowAvatar(ctx_r17.window.participant, message_r15));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r17.getChatWindowAvatar(ctx_r17.window.participant, message_r15));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r17.window.participant.participantType == ctx_r17.ChatParticipantType.Group);\n  }\n}\n\nfunction NgChatWindowComponent_ng_container_1_div_14_div_3_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 33);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"date\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r27 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(2, 1, message_r15.dateSent, ctx_r27.messageDatePipeFormat));\n  }\n}\n\nconst _c10 = function (a0, a1) {\n  return {\n    \"sent-chat-message-container\": a0,\n    \"received-chat-message-container\": a1\n  };\n};\n\nfunction NgChatWindowComponent_ng_container_1_div_14_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21);\n    ɵngcc0.ɵɵelement(1, \"span\", 31);\n    ɵngcc0.ɵɵpipe(2, \"linkfy\");\n    ɵngcc0.ɵɵpipe(3, \"emojify\");\n    ɵngcc0.ɵɵtemplate(4, NgChatWindowComponent_ng_container_1_div_14_div_3_span_4_Template, 3, 4, \"span\", 32);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r18 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(9, _c10, message_r15.fromId == ctx_r18.userId, message_r15.fromId != ctx_r18.userId));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHtml\", ɵngcc0.ɵɵpipeBind2(2, 3, ɵngcc0.ɵɵpipeBind2(3, 6, message_r15.message, ctx_r18.emojisEnabled), ctx_r18.linkfyEnabled), ɵngcc0.ɵɵsanitizeHtml);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r18.showMessageDate && message_r15.dateSent);\n  }\n}\n\nfunction NgChatWindowComponent_ng_container_1_div_14_div_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 33);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"date\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r30 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(2, 1, message_r15.dateSent, ctx_r30.messageDatePipeFormat));\n  }\n}\n\nfunction NgChatWindowComponent_ng_container_1_div_14_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21);\n    ɵngcc0.ɵɵelement(1, \"img\", 34);\n    ɵngcc0.ɵɵtemplate(2, NgChatWindowComponent_ng_container_1_div_14_div_4_span_2_Template, 3, 4, \"span\", 32);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(3, _c10, message_r15.fromId == ctx_r19.userId, message_r15.fromId != ctx_r19.userId));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"src\", message_r15.message, ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r19.showMessageDate && message_r15.dateSent);\n  }\n}\n\nfunction NgChatWindowComponent_ng_container_1_div_14_div_5_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 40);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", message_r15.fileSizeInBytes, \" Bytes\");\n  }\n}\n\nconst _c11 = function (a1) {\n  return {\n    \"file-message-container\": true,\n    \"received\": a1\n  };\n};\n\nfunction NgChatWindowComponent_ng_container_1_div_14_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21)(1, \"div\", 35);\n    ɵngcc0.ɵɵelement(2, \"i\", 36);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"a\", 37);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_1_div_14_div_5_Template_a_click_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r37);\n      const message_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n      const ctx_r35 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r35.markMessagesAsRead([message_r15]));\n    });\n    ɵngcc0.ɵɵelementStart(4, \"span\", 38);\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(6, NgChatWindowComponent_ng_container_1_div_14_div_5_span_6_Template, 2, 1, \"span\", 39);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c11, message_r15.fromId != ctx_r20.userId));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵattribute(\"href\", message_r15.downloadUrl, ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"title\", message_r15.message);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(message_r15.message);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", message_r15.fileSizeInBytes);\n  }\n}\n\nconst _c12 = function (a1) {\n  return {\n    \"ng-chat-message\": true,\n    \"ng-chat-message-received\": a1\n  };\n};\n\nfunction NgChatWindowComponent_ng_container_1_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21);\n    ɵngcc0.ɵɵtemplate(1, NgChatWindowComponent_ng_container_1_div_14_ng_container_1_Template, 4, 3, \"ng-container\", 0);\n    ɵngcc0.ɵɵelementContainerStart(2, 22);\n    ɵngcc0.ɵɵtemplate(3, NgChatWindowComponent_ng_container_1_div_14_div_3_Template, 5, 12, \"div\", 23);\n    ɵngcc0.ɵɵtemplate(4, NgChatWindowComponent_ng_container_1_div_14_div_4_Template, 3, 6, \"div\", 23);\n    ɵngcc0.ɵɵtemplate(5, NgChatWindowComponent_ng_container_1_div_14_div_5_Template, 7, 7, \"div\", 23);\n    ɵngcc0.ɵɵelementContainerEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r15 = ctx.$implicit;\n    const i_r16 = ctx.index;\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(6, _c12, message_r15.fromId != ctx_r10.userId));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r10.isAvatarVisible(ctx_r10.window, message_r15, i_r16));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", message_r15.type);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", ctx_r10.MessageType.Text);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", ctx_r10.MessageType.Image);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", ctx_r10.MessageType.File);\n  }\n}\n\nfunction NgChatWindowComponent_ng_container_1_ng_container_19_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r43 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 45);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_1_ng_container_19_a_1_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r43);\n      const ctx_r42 = ɵngcc0.ɵɵnextContext(3);\n      return ɵngcc0.ɵɵresetView(ctx_r42.triggerNativeFileUpload(ctx_r42.window));\n    });\n    ɵngcc0.ɵɵelement(1, \"i\", 46);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgChatWindowComponent_ng_container_1_ng_container_19_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 18);\n  }\n}\n\nfunction NgChatWindowComponent_ng_container_1_ng_container_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgChatWindowComponent_ng_container_1_ng_container_19_a_1_Template, 2, 0, \"a\", 41);\n    ɵngcc0.ɵɵelementStart(2, \"input\", 42, 43);\n    ɵngcc0.ɵɵlistener(\"change\", function NgChatWindowComponent_ng_container_1_ng_container_19_Template_input_change_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r45);\n      const ctx_r44 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r44.onFileChosen(ctx_r44.window));\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, NgChatWindowComponent_ng_container_1_ng_container_19_div_4_Template, 1, 0, \"div\", 44);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r12.isUploadingFile(ctx_r12.window));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r12.getUniqueFileUploadInstanceId(ctx_r12.window));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r12.isUploadingFile(ctx_r12.window));\n  }\n}\n\nconst _c13 = function (a1) {\n  return {\n    \"chat-window-input\": true,\n    \"has-side-action\": a1\n  };\n};\n\nfunction NgChatWindowComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_1_Template_div_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r47);\n      const ctx_r46 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r46.onChatWindowClicked(ctx_r46.window));\n    });\n    ɵngcc0.ɵɵelementStart(3, \"strong\", 3);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(5, \"span\", 4);\n    ɵngcc0.ɵɵtemplate(6, NgChatWindowComponent_ng_container_1_span_6_Template, 2, 1, \"span\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(7, \"a\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_1_Template_a_click_7_listener() {\n      ɵngcc0.ɵɵrestoreView(_r47);\n      const ctx_r48 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r48.onCloseChatWindow());\n    });\n    ɵngcc0.ɵɵtext(8, \"X\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(9, \"ng-chat-options\", 8);\n    ɵngcc0.ɵɵlistener(\"activeOptionTrackerChange\", function NgChatWindowComponent_ng_container_1_Template_ng_chat_options_activeOptionTrackerChange_9_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r47);\n      const ctx_r49 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r49.activeOptionTrackerChange($event));\n    });\n    ɵngcc0.ɵɵelementEnd()();\n    ɵngcc0.ɵɵelementStart(10, \"div\", 9, 10);\n    ɵngcc0.ɵɵtemplate(12, NgChatWindowComponent_ng_container_1_div_12_Template, 3, 0, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(13, NgChatWindowComponent_ng_container_1_div_13_Template, 3, 1, \"div\", 12);\n    ɵngcc0.ɵɵtemplate(14, NgChatWindowComponent_ng_container_1_div_14_Template, 6, 8, \"div\", 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(15, \"div\", 14)(16, \"input\", 15, 16);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function NgChatWindowComponent_ng_container_1_Template_input_ngModelChange_16_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r47);\n      const ctx_r50 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r50.window.newMessage = $event);\n    })(\"keydown\", function NgChatWindowComponent_ng_container_1_Template_input_keydown_16_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r47);\n      const ctx_r51 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r51.onChatInputTyped($event, ctx_r51.window));\n    })(\"blur\", function NgChatWindowComponent_ng_container_1_Template_input_blur_16_listener() {\n      ɵngcc0.ɵɵrestoreView(_r47);\n      const ctx_r52 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r52.toggleWindowFocus(ctx_r52.window));\n    })(\"focus\", function NgChatWindowComponent_ng_container_1_Template_input_focus_16_listener() {\n      ɵngcc0.ɵɵrestoreView(_r47);\n      const ctx_r53 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r53.toggleWindowFocus(ctx_r53.window));\n    });\n    ɵngcc0.ɵɵpipe(18, \"emojify\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(19, NgChatWindowComponent_ng_container_1_ng_container_19_Template, 5, 3, \"ng-container\", 0);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r1.window.participant.displayName);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.window.participant.displayName, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r1.chatParticipantStatusDescriptor(ctx_r1.window.participant.status, ctx_r1.localization));\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(17, _c4, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Online, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Busy, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Away, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Offline));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.unreadMessagesTotal(ctx_r1.window).length > 0);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"ng-chat-options-container\")(\"options\", ctx_r1.defaultWindowOptions(ctx_r1.window));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.window.isLoadingHistory);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.hasPagedHistory && ctx_r1.window.hasMoreMessages && !ctx_r1.window.isLoadingHistory);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.window.messages);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ɵngcc0.ɵɵpipeBind2(18, 14, ctx_r1.window.newMessage, ctx_r1.emojisEnabled))(\"placeholder\", ctx_r1.localization.messagePlaceholder)(\"ngClass\", ɵngcc0.ɵɵpureFunction1(22, _c13, ctx_r1.fileUploadAdapter));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.fileUploadAdapter);\n  }\n}\n\nclass ChatAdapter {\n  constructor() {\n    // ### Abstract adapter methods ###\n    // Event handlers\n\n    /** @internal */\n    this.friendsListChangedHandler = participantsResponse => {};\n    /** @internal */\n\n\n    this.messageReceivedHandler = (participant, message) => {};\n  } // ### Adapter/Chat income/ingress events ###\n\n\n  onFriendsListChanged(participantsResponse) {\n    this.friendsListChangedHandler(participantsResponse);\n  }\n\n  onMessageReceived(participant, message) {\n    this.messageReceivedHandler(participant, message);\n  }\n\n}\n\nvar MessageType;\n\n(function (MessageType) {\n  MessageType[MessageType[\"Text\"] = 1] = \"Text\";\n  MessageType[MessageType[\"File\"] = 2] = \"File\";\n  MessageType[MessageType[\"Image\"] = 3] = \"Image\";\n})(MessageType || (MessageType = {}));\n\nclass Message {\n  constructor() {\n    this.type = MessageType.Text;\n  }\n\n}\n\nvar ChatParticipantStatus;\n\n(function (ChatParticipantStatus) {\n  ChatParticipantStatus[ChatParticipantStatus[\"Online\"] = 0] = \"Online\";\n  ChatParticipantStatus[ChatParticipantStatus[\"Busy\"] = 1] = \"Busy\";\n  ChatParticipantStatus[ChatParticipantStatus[\"Away\"] = 2] = \"Away\";\n  ChatParticipantStatus[ChatParticipantStatus[\"Offline\"] = 3] = \"Offline\";\n})(ChatParticipantStatus || (ChatParticipantStatus = {}));\n\nvar ChatParticipantType;\n\n(function (ChatParticipantType) {\n  ChatParticipantType[ChatParticipantType[\"User\"] = 0] = \"User\";\n  ChatParticipantType[ChatParticipantType[\"Group\"] = 1] = \"Group\";\n})(ChatParticipantType || (ChatParticipantType = {}));\n\nclass User {\n  constructor() {\n    this.participantType = ChatParticipantType.User;\n  }\n\n}\n\nclass ParticipantResponse {}\n\nclass ParticipantMetadata {\n  constructor() {\n    this.totalUnreadMessages = 0;\n  }\n\n}\n\nclass Window {\n  constructor(participant, isLoadingHistory, isCollapsed) {\n    this.messages = [];\n    this.newMessage = \"\"; // UI Behavior properties\n\n    this.isCollapsed = false;\n    this.isLoadingHistory = false;\n    this.hasFocus = false;\n    this.hasMoreMessages = true;\n    this.historyPage = 0;\n    this.participant = participant;\n    this.messages = [];\n    this.isLoadingHistory = isLoadingHistory;\n    this.hasFocus = false; // This will be triggered when the 'newMessage' input gets the current focus\n\n    this.isCollapsed = isCollapsed;\n    this.hasMoreMessages = false;\n    this.historyPage = 0;\n  }\n\n}\n/**\r\n * @description Chat Adapter decorator class that adds pagination to load the history of messagesr.\r\n * You will need an existing @see ChatAdapter implementation\r\n */\n\n\nclass PagedHistoryChatAdapter extends ChatAdapter {}\n\nvar Theme;\n\n(function (Theme) {\n  Theme[\"Custom\"] = \"custom-theme\";\n  Theme[\"Light\"] = \"light-theme\";\n  Theme[\"Dark\"] = \"dark-theme\";\n})(Theme || (Theme = {})); // Poached from: https://github.com/Steve-Fenton/TypeScriptUtilities\n// @dynamic\n\n\nclass Guid {\n  static newGuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0,\n          v = c == 'x' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n\n}\n\nclass Group {\n  constructor(participants) {\n    this.id = Guid.newGuid();\n    this.participantType = ChatParticipantType.Group;\n    this.chattingTo = participants;\n    this.status = ChatParticipantStatus.Online; // TODO: Add some customization for this in future releases\n\n    this.displayName = participants.map(p => p.displayName).sort((first, second) => second > first ? -1 : 1).join(\", \");\n  }\n\n}\n\nvar ScrollDirection;\n\n(function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"Top\"] = 0] = \"Top\";\n  ScrollDirection[ScrollDirection[\"Bottom\"] = 1] = \"Bottom\";\n})(ScrollDirection || (ScrollDirection = {}));\n\nclass DefaultFileUploadAdapter {\n  /**\r\n   * @summary Basic file upload adapter implementation for HTTP request form file consumption\r\n   * @param _serverEndpointUrl The API endpoint full qualified address that will receive a form file to process and return the metadata.\r\n   */\n  constructor(_serverEndpointUrl, _http) {\n    this._serverEndpointUrl = _serverEndpointUrl;\n    this._http = _http;\n  }\n\n  uploadFile(file, participantId) {\n    const formData = new FormData(); //formData.append('ng-chat-sender-userid', currentUserId);\n\n    formData.append('ng-chat-participant-id', participantId);\n    formData.append('file', file, file.name);\n    return this._http.post(this._serverEndpointUrl, formData); // TODO: Leaving this if we want to track upload progress in detail in the future. Might need a different Subject generic type wrapper\n    // const fileRequest = new HttpRequest('POST', this._serverEndpointUrl, formData, {\n    //     reportProgress: true\n    // });\n    // const uploadProgress = new Subject<number>();\n    // const uploadStatus = uploadProgress.asObservable();\n    //const responsePromise = new Subject<Message>();\n    // this._http\n    //     .request(fileRequest)\n    //     .subscribe(event => {\n    //         // if (event.type == HttpEventType.UploadProgress)\n    //         // {\n    //         //     const percentDone = Math.round(100 * event.loaded / event.total);\n    //         //     uploadProgress.next(percentDone);\n    //         // }\n    //         // else if (event instanceof HttpResponse)\n    //         // {\n    //         //     uploadProgress.complete();\n    //         // }\n    //     });\n  }\n\n}\n\nclass NgChat {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient; // Exposes enums for the ng-template\n\n    this.ChatParticipantType = ChatParticipantType;\n    this.ChatParticipantStatus = ChatParticipantStatus;\n    this.MessageType = MessageType;\n    this._isDisabled = false;\n    this.isCollapsed = false;\n    this.maximizeWindowOnNewMessage = true;\n    this.pollFriendsList = false;\n    this.pollingInterval = 5000;\n    this.historyEnabled = true;\n    this.emojisEnabled = true;\n    this.linkfyEnabled = true;\n    this.audioEnabled = true;\n    this.searchEnabled = true;\n    this.audioSource = 'https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.wav';\n    this.persistWindowsState = true;\n    this.title = \"Friends\";\n    this.messagePlaceholder = \"Type a message\";\n    this.searchPlaceholder = \"Search\";\n    this.browserNotificationsEnabled = true;\n    this.browserNotificationIconSource = 'https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.png';\n    this.browserNotificationTitle = \"New message from\";\n    this.historyPageSize = 10;\n    this.hideFriendsList = false;\n    this.hideFriendsListOnUnsupportedViewport = true;\n    this.theme = Theme.Light;\n    this.messageDatePipeFormat = \"short\";\n    this.showMessageDate = true;\n    this.isViewportOnMobileEnabled = false;\n    this.onParticipantClicked = new EventEmitter();\n    this.onParticipantChatOpened = new EventEmitter();\n    this.onParticipantChatClosed = new EventEmitter();\n    this.onMessagesSeen = new EventEmitter();\n    this.browserNotificationsBootstrapped = false;\n    this.hasPagedHistory = false; // Don't want to add this as a setting to simplify usage. Previous placeholder and title settings available to be used, or use full Localization object.\n\n    this.statusDescription = {\n      online: 'Online',\n      busy: 'Busy',\n      away: 'Away',\n      offline: 'Offline'\n    };\n    this.participantsInteractedWith = []; // Defines the size of each opened window to calculate how many windows can be opened on the viewport at the same time.\n\n    this.windowSizeFactor = 320; // Total width size of the friends list section\n\n    this.friendsListWidth = 262; // Set to true if there is no space to display at least one chat window and 'hideFriendsListOnUnsupportedViewport' is true\n\n    this.unsupportedViewport = false;\n    this.windows = [];\n    this.isBootstrapped = false;\n  }\n\n  get isDisabled() {\n    return this._isDisabled;\n  }\n\n  set isDisabled(value) {\n    this._isDisabled = value;\n\n    if (value) {\n      // To address issue https://github.com/rpaschoal/ng-chat/issues/120\n      window.clearInterval(this.pollingIntervalWindowInstance);\n    } else {\n      this.activateFriendListFetch();\n    }\n  }\n\n  get localStorageKey() {\n    return `ng-chat-users-${this.userId}`; // Appending the user id so the state is unique per user in a computer.\n  }\n\n  ngOnInit() {\n    this.bootstrapChat();\n  }\n\n  onResize(event) {\n    this.viewPortTotalArea = event.target.innerWidth;\n    this.NormalizeWindows();\n  } // Checks if there are more opened windows than the view port can display\n\n\n  NormalizeWindows() {\n    const maxSupportedOpenedWindows = Math.floor((this.viewPortTotalArea - (!this.hideFriendsList ? this.friendsListWidth : 0)) / this.windowSizeFactor);\n    const difference = this.windows.length - maxSupportedOpenedWindows;\n\n    if (difference >= 0) {\n      this.windows.splice(this.windows.length - difference);\n    }\n\n    this.updateWindowsState(this.windows); // Viewport should have space for at least one chat window but should show in mobile if option is enabled.\n\n    this.unsupportedViewport = this.isViewportOnMobileEnabled ? false : this.hideFriendsListOnUnsupportedViewport && maxSupportedOpenedWindows < 1;\n  } // Initializes the chat plugin and the messaging adapter\n\n\n  bootstrapChat() {\n    let initializationException = null;\n\n    if (this.adapter != null && this.userId != null) {\n      try {\n        this.viewPortTotalArea = window.innerWidth;\n        this.initializeTheme();\n        this.initializeDefaultText();\n        this.initializeBrowserNotifications(); // Binding event listeners\n\n        this.adapter.messageReceivedHandler = (participant, msg) => this.onMessageReceived(participant, msg);\n\n        this.adapter.friendsListChangedHandler = participantsResponse => this.onFriendsListChanged(participantsResponse);\n\n        this.activateFriendListFetch();\n        this.bufferAudioFile();\n        this.hasPagedHistory = this.adapter instanceof PagedHistoryChatAdapter;\n\n        if (this.fileUploadUrl && this.fileUploadUrl !== \"\") {\n          this.fileUploadAdapter = new DefaultFileUploadAdapter(this.fileUploadUrl, this._httpClient);\n        }\n\n        this.NormalizeWindows();\n        this.isBootstrapped = true;\n      } catch (ex) {\n        initializationException = ex;\n      }\n    }\n\n    if (!this.isBootstrapped) {\n      console.error(\"ng-chat component couldn't be bootstrapped.\");\n\n      if (this.userId == null) {\n        console.error(\"ng-chat can't be initialized without an user id. Please make sure you've provided an userId as a parameter of the ng-chat component.\");\n      }\n\n      if (this.adapter == null) {\n        console.error(\"ng-chat can't be bootstrapped without a ChatAdapter. Please make sure you've provided a ChatAdapter implementation as a parameter of the ng-chat component.\");\n      }\n\n      if (initializationException) {\n        console.error(`An exception has occurred while initializing ng-chat. Details: ${initializationException.message}`);\n        console.error(initializationException);\n      }\n    }\n  }\n\n  activateFriendListFetch() {\n    if (this.adapter) {\n      // Loading current users list\n      if (this.pollFriendsList) {\n        // Setting a long poll interval to update the friends list\n        this.fetchFriendsList(true);\n        this.pollingIntervalWindowInstance = window.setInterval(() => this.fetchFriendsList(false), this.pollingInterval);\n      } else {\n        // Since polling was disabled, a friends list update mechanism will have to be implemented in the ChatAdapter.\n        this.fetchFriendsList(true);\n      }\n    }\n  } // Initializes browser notifications\n\n\n  initializeBrowserNotifications() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.browserNotificationsEnabled && \"Notification\" in window) {\n        if ((yield Notification.requestPermission()) === \"granted\") {\n          this.browserNotificationsBootstrapped = true;\n        }\n      }\n    });\n  } // Initializes default text\n\n\n  initializeDefaultText() {\n    if (!this.localization) {\n      this.localization = {\n        messagePlaceholder: this.messagePlaceholder,\n        searchPlaceholder: this.searchPlaceholder,\n        title: this.title,\n        statusDescription: this.statusDescription,\n        browserNotificationTitle: this.browserNotificationTitle,\n        loadMessageHistoryPlaceholder: \"Load older messages\"\n      };\n    }\n  }\n\n  initializeTheme() {\n    if (this.customTheme) {\n      this.theme = Theme.Custom;\n    } else if (this.theme != Theme.Light && this.theme != Theme.Dark) {\n      // TODO: Use es2017 in future with Object.values(Theme).includes(this.theme) to do this check\n      throw new Error(`Invalid theme configuration for ng-chat. \"${this.theme}\" is not a valid theme value.`);\n    }\n  } // Sends a request to load the friends list\n\n\n  fetchFriendsList(isBootstrapping) {\n    this.adapter.listFriends().pipe(map(participantsResponse => {\n      this.participantsResponse = participantsResponse;\n      this.participants = participantsResponse.map(response => {\n        return response.participant;\n      });\n    })).subscribe(() => {\n      if (isBootstrapping) {\n        this.restoreWindowsState();\n      }\n    });\n  }\n\n  fetchMessageHistory(window) {\n    // Not ideal but will keep this until we decide if we are shipping pagination with the default adapter\n    if (this.adapter instanceof PagedHistoryChatAdapter) {\n      window.isLoadingHistory = true;\n      this.adapter.getMessageHistoryByPage(window.participant.id, this.historyPageSize, ++window.historyPage).pipe(map(result => {\n        result.forEach(message => this.assertMessageType(message));\n        window.messages = result.concat(window.messages);\n        window.isLoadingHistory = false;\n        const direction = window.historyPage == 1 ? ScrollDirection.Bottom : ScrollDirection.Top;\n        window.hasMoreMessages = result.length == this.historyPageSize;\n        setTimeout(() => this.onFetchMessageHistoryLoaded(result, window, direction, true));\n      })).subscribe();\n    } else {\n      this.adapter.getMessageHistory(window.participant.id).pipe(map(result => {\n        result.forEach(message => this.assertMessageType(message));\n        window.messages = result.concat(window.messages);\n        window.isLoadingHistory = false;\n        setTimeout(() => this.onFetchMessageHistoryLoaded(result, window, ScrollDirection.Bottom));\n      })).subscribe();\n    }\n  }\n\n  onFetchMessageHistoryLoaded(messages, window, direction, forceMarkMessagesAsSeen = false) {\n    this.scrollChatWindow(window, direction);\n\n    if (window.hasFocus || forceMarkMessagesAsSeen) {\n      const unseenMessages = messages.filter(m => !m.dateSeen);\n      this.markMessagesAsRead(unseenMessages);\n    }\n  } // Updates the friends list via the event handler\n\n\n  onFriendsListChanged(participantsResponse) {\n    if (participantsResponse) {\n      this.participantsResponse = participantsResponse;\n      this.participants = participantsResponse.map(response => {\n        return response.participant;\n      });\n      this.participantsInteractedWith = [];\n    }\n  } // Handles received messages by the adapter\n\n\n  onMessageReceived(participant, message) {\n    if (participant && message) {\n      const chatWindow = this.openChatWindow(participant);\n      this.assertMessageType(message);\n\n      if (!chatWindow[1] || !this.historyEnabled) {\n        chatWindow[0].messages.push(message);\n        this.scrollChatWindow(chatWindow[0], ScrollDirection.Bottom);\n\n        if (chatWindow[0].hasFocus) {\n          this.markMessagesAsRead([message]);\n        }\n      }\n\n      this.emitMessageSound(chatWindow[0]); // Github issue #58\n      // Do not push browser notifications with message content for privacy purposes if the 'maximizeWindowOnNewMessage' setting is off and this is a new chat window.\n\n      if (this.maximizeWindowOnNewMessage || !chatWindow[1] && !chatWindow[0].isCollapsed) {\n        // Some messages are not pushed because they are loaded by fetching the history hence why we supply the message here\n        this.emitBrowserNotification(chatWindow[0], message);\n      }\n    }\n  }\n\n  onParticipantClickedFromFriendsList(participant) {\n    this.openChatWindow(participant, true, true);\n  }\n\n  cancelOptionPrompt() {\n    if (this.currentActiveOption) {\n      this.currentActiveOption.isActive = false;\n      this.currentActiveOption = null;\n    }\n  }\n\n  onOptionPromptCanceled() {\n    this.cancelOptionPrompt();\n  }\n\n  onOptionPromptConfirmed(event) {\n    // For now this is fine as there is only one option available. Introduce option types and type checking if a new option is added.\n    this.confirmNewGroup(event); // Canceling current state\n\n    this.cancelOptionPrompt();\n  }\n\n  confirmNewGroup(users) {\n    const newGroup = new Group(users);\n    this.openChatWindow(newGroup);\n\n    if (this.groupAdapter) {\n      this.groupAdapter.groupCreated(newGroup);\n    }\n  } // Opens a new chat whindow. Takes care of available viewport\n  // Works for opening a chat window for an user or for a group\n  // Returns => [Window: Window object reference, boolean: Indicates if this window is a new chat window]\n\n\n  openChatWindow(participant, focusOnNewWindow = false, invokedByUserClick = false) {\n    // Is this window opened?\n    const openedWindow = this.windows.find(x => x.participant.id == participant.id);\n\n    if (!openedWindow) {\n      if (invokedByUserClick) {\n        this.onParticipantClicked.emit(participant);\n      } // Refer to issue #58 on Github\n\n\n      const collapseWindow = invokedByUserClick ? false : !this.maximizeWindowOnNewMessage;\n      const newChatWindow = new Window(participant, this.historyEnabled, collapseWindow); // Loads the chat history via an RxJs Observable\n\n      if (this.historyEnabled) {\n        this.fetchMessageHistory(newChatWindow);\n      }\n\n      this.windows.unshift(newChatWindow); // Is there enough space left in the view port ? but should be displayed in mobile if option is enabled\n\n      if (!this.isViewportOnMobileEnabled) {\n        if (this.windows.length * this.windowSizeFactor >= this.viewPortTotalArea - (!this.hideFriendsList ? this.friendsListWidth : 0)) {\n          this.windows.pop();\n        }\n      }\n\n      this.updateWindowsState(this.windows);\n\n      if (focusOnNewWindow && !collapseWindow) {\n        this.focusOnWindow(newChatWindow);\n      }\n\n      this.participantsInteractedWith.push(participant);\n      this.onParticipantChatOpened.emit(participant);\n      return [newChatWindow, true];\n    } else {\n      // Returns the existing chat window\n      return [openedWindow, false];\n    }\n  } // Focus on the input element of the supplied window\n\n\n  focusOnWindow(window, callback = () => {}) {\n    const windowIndex = this.windows.indexOf(window);\n\n    if (windowIndex >= 0) {\n      setTimeout(() => {\n        if (this.chatWindows) {\n          const chatWindowToFocus = this.chatWindows.toArray()[windowIndex];\n          chatWindowToFocus.chatWindowInput.nativeElement.focus();\n        }\n\n        callback();\n      });\n    }\n  }\n\n  assertMessageType(message) {\n    // Always fallback to \"Text\" messages to avoid rendenring issues\n    if (!message.type) {\n      message.type = MessageType.Text;\n    }\n  } // Marks all messages provided as read with the current time.\n\n\n  markMessagesAsRead(messages) {\n    const currentDate = new Date();\n    messages.forEach(msg => {\n      msg.dateSeen = currentDate;\n    });\n    this.onMessagesSeen.emit(messages);\n  } // Buffers audio file (For component's bootstrapping)\n\n\n  bufferAudioFile() {\n    if (this.audioSource && this.audioSource.length > 0) {\n      this.audioFile = new Audio();\n      this.audioFile.src = this.audioSource;\n      this.audioFile.load();\n    }\n  } // Emits a message notification audio if enabled after every message received\n\n\n  emitMessageSound(window) {\n    if (this.audioEnabled && !window.hasFocus && this.audioFile) {\n      this.audioFile.play();\n    }\n  } // Emits a browser notification\n\n\n  emitBrowserNotification(window, message) {\n    if (this.browserNotificationsBootstrapped && !window.hasFocus && message) {\n      const notification = new Notification(`${this.localization.browserNotificationTitle} ${window.participant.displayName}`, {\n        'body': message.message,\n        'icon': this.browserNotificationIconSource\n      });\n      setTimeout(() => {\n        notification.close();\n      }, message.message.length <= 50 ? 5000 : 7000); // More time to read longer messages\n    }\n  } // Saves current windows state into local storage if persistence is enabled\n\n\n  updateWindowsState(windows) {\n    if (this.persistWindowsState) {\n      const participantIds = windows.map(w => {\n        return w.participant.id;\n      });\n      localStorage.setItem(this.localStorageKey, JSON.stringify(participantIds));\n    }\n  }\n\n  restoreWindowsState() {\n    try {\n      if (this.persistWindowsState) {\n        const stringfiedParticipantIds = localStorage.getItem(this.localStorageKey);\n\n        if (stringfiedParticipantIds && stringfiedParticipantIds.length > 0) {\n          const participantIds = JSON.parse(stringfiedParticipantIds);\n          const participantsToRestore = this.participants.filter(u => participantIds.indexOf(u.id) >= 0);\n          participantsToRestore.forEach(participant => {\n            this.openChatWindow(participant);\n          });\n        }\n      }\n    } catch (ex) {\n      console.error(`An error occurred while restoring ng-chat windows state. Details: ${ex}`);\n    }\n  } // Gets closest open window if any. Most recent opened has priority (Right)\n\n\n  getClosestWindow(window) {\n    const index = this.windows.indexOf(window);\n\n    if (index > 0) {\n      return this.windows[index - 1];\n    } else if (index == 0 && this.windows.length > 1) {\n      return this.windows[index + 1];\n    }\n  }\n\n  closeWindow(window) {\n    const index = this.windows.indexOf(window);\n    this.windows.splice(index, 1);\n    this.updateWindowsState(this.windows);\n    this.onParticipantChatClosed.emit(window.participant);\n  }\n\n  getChatWindowComponentInstance(targetWindow) {\n    const windowIndex = this.windows.indexOf(targetWindow);\n\n    if (this.chatWindows) {\n      let targetWindow = this.chatWindows.toArray()[windowIndex];\n      return targetWindow;\n    }\n\n    return null;\n  } // Scrolls a chat window message flow to the bottom\n\n\n  scrollChatWindow(window, direction) {\n    const chatWindow = this.getChatWindowComponentInstance(window);\n\n    if (chatWindow) {\n      chatWindow.scrollChatWindow(window, direction);\n    }\n  }\n\n  onWindowMessagesSeen(messagesSeen) {\n    this.markMessagesAsRead(messagesSeen);\n  }\n\n  onWindowChatClosed(payload) {\n    const {\n      closedWindow,\n      closedViaEscapeKey\n    } = payload;\n\n    if (closedViaEscapeKey) {\n      let closestWindow = this.getClosestWindow(closedWindow);\n\n      if (closestWindow) {\n        this.focusOnWindow(closestWindow, () => {\n          this.closeWindow(closedWindow);\n        });\n      } else {\n        this.closeWindow(closedWindow);\n      }\n    } else {\n      this.closeWindow(closedWindow);\n    }\n  }\n\n  onWindowTabTriggered(payload) {\n    const {\n      triggeringWindow,\n      shiftKeyPressed\n    } = payload;\n    const currentWindowIndex = this.windows.indexOf(triggeringWindow);\n    let windowToFocus = this.windows[currentWindowIndex + (shiftKeyPressed ? 1 : -1)]; // Goes back on shift + tab\n\n    if (!windowToFocus) {\n      // Edge windows, go to start or end\n      windowToFocus = this.windows[currentWindowIndex > 0 ? 0 : this.chatWindows.length - 1];\n    }\n\n    this.focusOnWindow(windowToFocus);\n  }\n\n  onWindowMessageSent(messageSent) {\n    this.adapter.sendMessage(messageSent);\n  }\n\n  onWindowOptionTriggered(option) {\n    this.currentActiveOption = option;\n  }\n\n  triggerOpenChatWindow(user) {\n    if (user) {\n      this.openChatWindow(user);\n    }\n  }\n\n  triggerCloseChatWindow(userId) {\n    const openedWindow = this.windows.find(x => x.participant.id == userId);\n\n    if (openedWindow) {\n      this.closeWindow(openedWindow);\n    }\n  }\n\n  triggerToggleChatWindowVisibility(userId) {\n    const openedWindow = this.windows.find(x => x.participant.id == userId);\n\n    if (openedWindow) {\n      const chatWindow = this.getChatWindowComponentInstance(openedWindow);\n\n      if (chatWindow) {\n        chatWindow.onChatWindowClicked(openedWindow);\n      }\n    }\n  }\n\n}\n\nNgChat.ɵfac = function NgChat_Factory(t) {\n  return new (t || NgChat)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.HttpClient));\n};\n\nNgChat.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: NgChat,\n  selectors: [[\"ng-chat\"]],\n  viewQuery: function NgChat_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chatWindows = _t);\n    }\n  },\n  hostBindings: function NgChat_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"resize\", function NgChat_resize_HostBindingHandler($event) {\n        return ctx.onResize($event);\n      }, false, ɵngcc0.ɵɵresolveWindow);\n    }\n  },\n  inputs: {\n    isCollapsed: \"isCollapsed\",\n    maximizeWindowOnNewMessage: \"maximizeWindowOnNewMessage\",\n    pollFriendsList: \"pollFriendsList\",\n    pollingInterval: \"pollingInterval\",\n    historyEnabled: \"historyEnabled\",\n    emojisEnabled: \"emojisEnabled\",\n    linkfyEnabled: \"linkfyEnabled\",\n    audioEnabled: \"audioEnabled\",\n    searchEnabled: \"searchEnabled\",\n    audioSource: \"audioSource\",\n    persistWindowsState: \"persistWindowsState\",\n    title: \"title\",\n    messagePlaceholder: \"messagePlaceholder\",\n    searchPlaceholder: \"searchPlaceholder\",\n    browserNotificationsEnabled: \"browserNotificationsEnabled\",\n    browserNotificationIconSource: \"browserNotificationIconSource\",\n    browserNotificationTitle: \"browserNotificationTitle\",\n    historyPageSize: \"historyPageSize\",\n    hideFriendsList: \"hideFriendsList\",\n    hideFriendsListOnUnsupportedViewport: \"hideFriendsListOnUnsupportedViewport\",\n    theme: \"theme\",\n    messageDatePipeFormat: \"messageDatePipeFormat\",\n    showMessageDate: \"showMessageDate\",\n    isViewportOnMobileEnabled: \"isViewportOnMobileEnabled\",\n    isDisabled: \"isDisabled\",\n    fileUploadAdapter: \"fileUploadAdapter\",\n    localization: \"localization\",\n    adapter: \"adapter\",\n    groupAdapter: \"groupAdapter\",\n    userId: \"userId\",\n    fileUploadUrl: \"fileUploadUrl\",\n    customTheme: \"customTheme\"\n  },\n  outputs: {\n    onParticipantClicked: \"onParticipantClicked\",\n    onParticipantChatOpened: \"onParticipantChatOpened\",\n    onParticipantChatClosed: \"onParticipantChatClosed\",\n    onMessagesSeen: \"onMessagesSeen\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[\"rel\", \"stylesheet\", 3, \"href\", 4, \"ngIf\"], [\"id\", \"ng-chat\", 3, \"ngClass\", 4, \"ngIf\"], [\"rel\", \"stylesheet\", 3, \"href\"], [\"id\", \"ng-chat\", 3, \"ngClass\"], [3, \"localization\", \"shouldDisplay\", \"userId\", \"isCollapsed\", \"searchEnabled\", \"participants\", \"participantsResponse\", \"participantsInteractedWith\", \"windows\", \"currentActiveOption\", \"onParticipantClicked\", \"onOptionPromptCanceled\", \"onOptionPromptConfirmed\"], [3, \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"ngStyle\"], [3, \"fileUploadAdapter\", \"localization\", \"userId\", \"window\", \"showOptions\", \"emojisEnabled\", \"linkfyEnabled\", \"showMessageDate\", \"messageDatePipeFormat\", \"hasPagedHistory\", \"onMessagesSeen\", \"onMessageSent\", \"onTabTriggered\", \"onChatWindowClosed\", \"onOptionTriggered\", \"onLoadHistoryTriggered\"], [\"chatWindow\", \"\"]],\n  template: function NgChat_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgChat_link_0_Template, 2, 3, \"link\", 0);\n      ɵngcc0.ɵɵtemplate(1, NgChat_div_1_Template, 3, 12, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.customTheme);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isDisabled && ctx.isBootstrapped && !ctx.unsupportedViewport);\n    }\n  },\n  dependencies: function () {\n    return [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc2.NgStyle, NgChatFriendsListComponent, NgChatWindowComponent, SanitizePipe];\n  },\n  styles: [\".user-icon{box-sizing:border-box;background-color:#fff;border:2px solid;width:32px;height:20px;border-radius:64px 64px 0 0/64px;margin-top:14px;margin-left:-1px;display:inline-block;vertical-align:middle;position:relative;font-style:normal;color:#ddd;text-align:left;text-indent:-9999px}.user-icon:before{border:2px solid;background-color:#fff;width:12px;height:12px;top:-19px;border-radius:50%;position:absolute;left:50%;transform:translateX(-50%)}.user-icon:after,.user-icon:before{content:\\\"\\\";pointer-events:none}.upload-icon{position:absolute;margin-left:3px;margin-top:12px;width:13px;height:4px;border:1px solid;border-top:none;border-radius:1px}.upload-icon:before{content:\\\"\\\";position:absolute;top:-8px;left:6px;width:1px;height:9px;background-color:currentColor}.upload-icon:after{content:\\\"\\\";top:-8px;left:4px;width:4px;height:4px;transform:rotate(-45deg)}.paperclip-icon,.upload-icon:after{position:absolute;border-top:1px solid;border-right:1px solid}.paperclip-icon{margin-left:9px;margin-top:2px;width:6px;height:12px;border-radius:4px 4px 0 0;border-left:1px solid;transform:rotate(45deg)}.paperclip-icon:before{top:11px;left:-1px;width:4px;height:6px;border-radius:0 0 3px 3px;border-bottom:1px solid}.paperclip-icon:after,.paperclip-icon:before{content:\\\"\\\";position:absolute;border-left:1px solid;border-right:1px solid}.paperclip-icon:after{left:1px;top:1px;width:2px;height:10px;border-radius:4px 4px 0 0;border-top:1px solid}.check-icon{margin-top:4px;width:14px;height:8px;border-bottom:1px solid;border-left:1px solid;transform:rotate(-45deg)}.check-icon,.remove-icon{color:#000;position:absolute;margin-left:3px}.remove-icon{margin-top:10px}.remove-icon:before{transform:rotate(45deg)}.remove-icon:after,.remove-icon:before{content:\\\"\\\";position:absolute;width:15px;height:1px;background-color:currentColor}.remove-icon:after{transform:rotate(-45deg)}\", \".loader,.loader:after,.loader:before{background:#e3e3e3;-webkit-animation:load1 1s ease-in-out infinite;animation:load1 1s ease-in-out infinite;width:1em;height:4em}.loader{color:#e3e3e3;text-indent:-9999em;margin:4px auto 0;position:relative;font-size:4px;transform:translateZ(0);-webkit-animation-delay:-.16s;animation-delay:-.16s}.loader:after,.loader:before{position:absolute;top:0;content:\\\"\\\"}.loader:before{left:-1.5em;-webkit-animation-delay:-.32s;animation-delay:-.32s}.loader:after{left:1.5em}@-webkit-keyframes load1{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}@keyframes load1{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}\", \"#ng-chat{position:fixed;z-index:999;right:0;bottom:0;box-sizing:content-box;box-sizing:initial;font-size:11pt;text-align:left}#ng-chat input{outline:none}#ng-chat .shadowed{box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-loading-wrapper{height:30px;text-align:center;font-size:.9em}.ng-chat-close{text-decoration:none;float:right}.ng-chat-title,.ng-chat-title:hover{position:relative;z-index:2;height:30px;line-height:30px;font-size:.9em;padding:0 10px;display:block;text-decoration:none;color:inherit;font-weight:400;cursor:pointer}.ng-chat-title .ng-chat-title-visibility-toggle-area{display:inline-block;width:85%}.ng-chat-title .ng-chat-title-visibility-toggle-area>strong{font-weight:600;display:block;overflow:hidden;height:30px;text-overflow:ellipsis;white-space:nowrap;max-width:85%;float:left}.ng-chat-title .ng-chat-title-visibility-toggle-area .ng-chat-participant-status{float:left;margin-left:5px}.ng-chat-participant-status{display:inline-block;border-radius:25px;width:8px;height:8px;margin-top:10px}.ng-chat-participant-status.online{background-color:#92a400}.ng-chat-participant-status.busy{background-color:#f91c1e}.ng-chat-participant-status.away{background-color:#f7d21b}.ng-chat-participant-status.offline{background-color:#bababa}.ng-chat-unread-messages-count{margin-left:5px;padding:0 5px;border-radius:25px;font-size:.9em;line-height:30px}.ng-chat-options-container{float:right;margin-right:5px}\", \"#ng-chat.light-theme,#ng-chat.light-theme .primary-text{color:#5c5c5c;font-family:Arial,Helvetica,sans-serif}#ng-chat.light-theme .primary-background{background-color:#fff}#ng-chat.light-theme .secondary-background{background-color:#fafafa}#ng-chat.light-theme .primary-outline-color{border-color:#a3a3a3}#ng-chat.light-theme .friends-search-bar{background-color:#fff}#ng-chat.light-theme .ng-chat-people-action,#ng-chat.light-theme .ng-chat-people-action>i,#ng-chat.light-theme .unread-messages-counter-container{color:#5c5c5c;background-color:#e3e3e3}#ng-chat.light-theme .load-history-action{background-color:#e3e3e3}#ng-chat.light-theme .chat-window-input{background-color:#fff}#ng-chat.light-theme .file-message-container,#ng-chat.light-theme .sent-chat-message-container{background-color:#e3e3e3;border-color:#e3e3e3}#ng-chat.light-theme .file-message-container.received,#ng-chat.light-theme .received-chat-message-container{background-color:#fff;border-color:#e3e3e3}\", \"#ng-chat.dark-theme,#ng-chat.dark-theme .primary-text{color:#fff;font-family:Arial,Helvetica,sans-serif}#ng-chat.dark-theme .primary-background{background-color:#565656}#ng-chat.dark-theme .secondary-background{background-color:#444}#ng-chat.dark-theme .primary-outline-color{border-color:#353535}#ng-chat.dark-theme .friends-search-bar{background-color:#444;border:1px solid #444;color:#fff}#ng-chat.dark-theme .ng-chat-people-action,#ng-chat.dark-theme .ng-chat-people-action>i,#ng-chat.dark-theme .unread-messages-counter-container{background-color:#fff;color:#444}#ng-chat.dark-theme .load-history-action{background-color:#444}#ng-chat.dark-theme .chat-window-input{background-color:#444;color:#fff}#ng-chat.dark-theme .file-message-container,#ng-chat.dark-theme .sent-chat-message-container{border-color:#444;background-color:#444}#ng-chat.dark-theme .file-message-container.received,#ng-chat.dark-theme .received-chat-message-container{background-color:#565656;border-color:#444}#ng-chat.dark-theme .ng-chat-footer{background-color:#444}#ng-chat.dark-theme .ng-chat-message a{color:#fff}\"],\n  encapsulation: 2\n});\n\nNgChat.ctorParameters = () => [{\n  type: HttpClient\n}];\n\nNgChat.propDecorators = {\n  isDisabled: [{\n    type: Input\n  }],\n  adapter: [{\n    type: Input\n  }],\n  groupAdapter: [{\n    type: Input\n  }],\n  userId: [{\n    type: Input\n  }],\n  isCollapsed: [{\n    type: Input\n  }],\n  maximizeWindowOnNewMessage: [{\n    type: Input\n  }],\n  pollFriendsList: [{\n    type: Input\n  }],\n  pollingInterval: [{\n    type: Input\n  }],\n  historyEnabled: [{\n    type: Input\n  }],\n  emojisEnabled: [{\n    type: Input\n  }],\n  linkfyEnabled: [{\n    type: Input\n  }],\n  audioEnabled: [{\n    type: Input\n  }],\n  searchEnabled: [{\n    type: Input\n  }],\n  audioSource: [{\n    type: Input\n  }],\n  persistWindowsState: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  messagePlaceholder: [{\n    type: Input\n  }],\n  searchPlaceholder: [{\n    type: Input\n  }],\n  browserNotificationsEnabled: [{\n    type: Input\n  }],\n  browserNotificationIconSource: [{\n    type: Input\n  }],\n  browserNotificationTitle: [{\n    type: Input\n  }],\n  historyPageSize: [{\n    type: Input\n  }],\n  localization: [{\n    type: Input\n  }],\n  hideFriendsList: [{\n    type: Input\n  }],\n  hideFriendsListOnUnsupportedViewport: [{\n    type: Input\n  }],\n  fileUploadUrl: [{\n    type: Input\n  }],\n  theme: [{\n    type: Input\n  }],\n  customTheme: [{\n    type: Input\n  }],\n  messageDatePipeFormat: [{\n    type: Input\n  }],\n  showMessageDate: [{\n    type: Input\n  }],\n  isViewportOnMobileEnabled: [{\n    type: Input\n  }],\n  fileUploadAdapter: [{\n    type: Input\n  }],\n  onParticipantClicked: [{\n    type: Output\n  }],\n  onParticipantChatOpened: [{\n    type: Output\n  }],\n  onParticipantChatClosed: [{\n    type: Output\n  }],\n  onMessagesSeen: [{\n    type: Output\n  }],\n  chatWindows: [{\n    type: ViewChildren,\n    args: ['chatWindow']\n  }],\n  onResize: [{\n    type: HostListener,\n    args: ['window:resize', ['$event']]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChat, [{\n    type: Component,\n    args: [{\n      selector: 'ng-chat',\n      template: \"<link *ngIf=\\\"customTheme\\\" rel=\\\"stylesheet\\\" [href]='customTheme | sanitize'>\\r\\n\\r\\n<div id=\\\"ng-chat\\\" *ngIf=\\\"!isDisabled && isBootstrapped && !unsupportedViewport\\\" [ngClass]=\\\"theme\\\">\\r\\n    <ng-chat-friends-list\\r\\n        [localization]=\\\"localization\\\"\\r\\n        [shouldDisplay]=\\\"!hideFriendsList\\\"\\r\\n        [userId]=\\\"userId\\\"\\r\\n        [isCollapsed]=\\\"isCollapsed\\\"\\r\\n        [searchEnabled]=\\\"searchEnabled\\\"\\r\\n        [participants]=\\\"participants\\\"\\r\\n        [participantsResponse]=\\\"participantsResponse\\\"\\r\\n        [participantsInteractedWith]=\\\"participantsInteractedWith\\\"\\r\\n        [windows]=\\\"windows\\\"\\r\\n        [currentActiveOption]=\\\"currentActiveOption\\\"\\r\\n        (onParticipantClicked)=\\\"onParticipantClickedFromFriendsList($event)\\\"\\r\\n        (onOptionPromptCanceled)=\\\"onOptionPromptCanceled()\\\"\\r\\n        (onOptionPromptConfirmed)=\\\"onOptionPromptConfirmed($event)\\\"\\r\\n    >\\r\\n    </ng-chat-friends-list>\\r\\n\\r\\n    <div *ngFor=\\\"let window of windows; let i = index\\\" [ngClass]=\\\"{'ng-chat-window': true, 'primary-outline-color': true, 'ng-chat-window-collapsed': window.isCollapsed}\\\" [ngStyle]=\\\"{'right': (!hideFriendsList ? friendsListWidth : 0) + 20 + windowSizeFactor * i + 'px'}\\\">\\r\\n        <ng-chat-window\\r\\n            #chatWindow\\r\\n            [fileUploadAdapter]=\\\"fileUploadAdapter\\\"\\r\\n            [localization]=\\\"localization\\\"\\r\\n            [userId]=\\\"userId\\\"\\r\\n            [window]=\\\"window\\\"\\r\\n            [showOptions]=\\\"groupAdapter\\\"\\r\\n            [emojisEnabled]=\\\"emojisEnabled\\\"\\r\\n            [linkfyEnabled]=\\\"linkfyEnabled\\\"\\r\\n            [showMessageDate]=\\\"showMessageDate\\\"\\r\\n            [messageDatePipeFormat]=\\\"messageDatePipeFormat\\\"\\r\\n            [hasPagedHistory]=\\\"hasPagedHistory\\\"\\r\\n            (onMessagesSeen)=\\\"onWindowMessagesSeen($event)\\\"\\r\\n            (onMessageSent)=\\\"onWindowMessageSent($event)\\\"\\r\\n            (onTabTriggered)=\\\"onWindowTabTriggered($event)\\\"\\r\\n            (onChatWindowClosed)=\\\"onWindowChatClosed($event)\\\"\\r\\n            (onOptionTriggered)=\\\"onWindowOptionTriggered($event)\\\"\\r\\n            (onLoadHistoryTriggered)=\\\"fetchMessageHistory($event)\\\"\\r\\n        >\\r\\n        </ng-chat-window>\\r\\n    </div>\\r\\n</div>\\r\\n\",\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".user-icon{box-sizing:border-box;background-color:#fff;border:2px solid;width:32px;height:20px;border-radius:64px 64px 0 0/64px;margin-top:14px;margin-left:-1px;display:inline-block;vertical-align:middle;position:relative;font-style:normal;color:#ddd;text-align:left;text-indent:-9999px}.user-icon:before{border:2px solid;background-color:#fff;width:12px;height:12px;top:-19px;border-radius:50%;position:absolute;left:50%;transform:translateX(-50%)}.user-icon:after,.user-icon:before{content:\\\"\\\";pointer-events:none}.upload-icon{position:absolute;margin-left:3px;margin-top:12px;width:13px;height:4px;border:1px solid;border-top:none;border-radius:1px}.upload-icon:before{content:\\\"\\\";position:absolute;top:-8px;left:6px;width:1px;height:9px;background-color:currentColor}.upload-icon:after{content:\\\"\\\";top:-8px;left:4px;width:4px;height:4px;transform:rotate(-45deg)}.paperclip-icon,.upload-icon:after{position:absolute;border-top:1px solid;border-right:1px solid}.paperclip-icon{margin-left:9px;margin-top:2px;width:6px;height:12px;border-radius:4px 4px 0 0;border-left:1px solid;transform:rotate(45deg)}.paperclip-icon:before{top:11px;left:-1px;width:4px;height:6px;border-radius:0 0 3px 3px;border-bottom:1px solid}.paperclip-icon:after,.paperclip-icon:before{content:\\\"\\\";position:absolute;border-left:1px solid;border-right:1px solid}.paperclip-icon:after{left:1px;top:1px;width:2px;height:10px;border-radius:4px 4px 0 0;border-top:1px solid}.check-icon{margin-top:4px;width:14px;height:8px;border-bottom:1px solid;border-left:1px solid;transform:rotate(-45deg)}.check-icon,.remove-icon{color:#000;position:absolute;margin-left:3px}.remove-icon{margin-top:10px}.remove-icon:before{transform:rotate(45deg)}.remove-icon:after,.remove-icon:before{content:\\\"\\\";position:absolute;width:15px;height:1px;background-color:currentColor}.remove-icon:after{transform:rotate(-45deg)}\", \".loader,.loader:after,.loader:before{background:#e3e3e3;-webkit-animation:load1 1s ease-in-out infinite;animation:load1 1s ease-in-out infinite;width:1em;height:4em}.loader{color:#e3e3e3;text-indent:-9999em;margin:4px auto 0;position:relative;font-size:4px;transform:translateZ(0);-webkit-animation-delay:-.16s;animation-delay:-.16s}.loader:after,.loader:before{position:absolute;top:0;content:\\\"\\\"}.loader:before{left:-1.5em;-webkit-animation-delay:-.32s;animation-delay:-.32s}.loader:after{left:1.5em}@-webkit-keyframes load1{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}@keyframes load1{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}\", \"#ng-chat{position:fixed;z-index:999;right:0;bottom:0;box-sizing:content-box;box-sizing:initial;font-size:11pt;text-align:left}#ng-chat input{outline:none}#ng-chat .shadowed{box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-loading-wrapper{height:30px;text-align:center;font-size:.9em}.ng-chat-close{text-decoration:none;float:right}.ng-chat-title,.ng-chat-title:hover{position:relative;z-index:2;height:30px;line-height:30px;font-size:.9em;padding:0 10px;display:block;text-decoration:none;color:inherit;font-weight:400;cursor:pointer}.ng-chat-title .ng-chat-title-visibility-toggle-area{display:inline-block;width:85%}.ng-chat-title .ng-chat-title-visibility-toggle-area>strong{font-weight:600;display:block;overflow:hidden;height:30px;text-overflow:ellipsis;white-space:nowrap;max-width:85%;float:left}.ng-chat-title .ng-chat-title-visibility-toggle-area .ng-chat-participant-status{float:left;margin-left:5px}.ng-chat-participant-status{display:inline-block;border-radius:25px;width:8px;height:8px;margin-top:10px}.ng-chat-participant-status.online{background-color:#92a400}.ng-chat-participant-status.busy{background-color:#f91c1e}.ng-chat-participant-status.away{background-color:#f7d21b}.ng-chat-participant-status.offline{background-color:#bababa}.ng-chat-unread-messages-count{margin-left:5px;padding:0 5px;border-radius:25px;font-size:.9em;line-height:30px}.ng-chat-options-container{float:right;margin-right:5px}\", \"#ng-chat.light-theme,#ng-chat.light-theme .primary-text{color:#5c5c5c;font-family:Arial,Helvetica,sans-serif}#ng-chat.light-theme .primary-background{background-color:#fff}#ng-chat.light-theme .secondary-background{background-color:#fafafa}#ng-chat.light-theme .primary-outline-color{border-color:#a3a3a3}#ng-chat.light-theme .friends-search-bar{background-color:#fff}#ng-chat.light-theme .ng-chat-people-action,#ng-chat.light-theme .ng-chat-people-action>i,#ng-chat.light-theme .unread-messages-counter-container{color:#5c5c5c;background-color:#e3e3e3}#ng-chat.light-theme .load-history-action{background-color:#e3e3e3}#ng-chat.light-theme .chat-window-input{background-color:#fff}#ng-chat.light-theme .file-message-container,#ng-chat.light-theme .sent-chat-message-container{background-color:#e3e3e3;border-color:#e3e3e3}#ng-chat.light-theme .file-message-container.received,#ng-chat.light-theme .received-chat-message-container{background-color:#fff;border-color:#e3e3e3}\", \"#ng-chat.dark-theme,#ng-chat.dark-theme .primary-text{color:#fff;font-family:Arial,Helvetica,sans-serif}#ng-chat.dark-theme .primary-background{background-color:#565656}#ng-chat.dark-theme .secondary-background{background-color:#444}#ng-chat.dark-theme .primary-outline-color{border-color:#353535}#ng-chat.dark-theme .friends-search-bar{background-color:#444;border:1px solid #444;color:#fff}#ng-chat.dark-theme .ng-chat-people-action,#ng-chat.dark-theme .ng-chat-people-action>i,#ng-chat.dark-theme .unread-messages-counter-container{background-color:#fff;color:#444}#ng-chat.dark-theme .load-history-action{background-color:#444}#ng-chat.dark-theme .chat-window-input{background-color:#444;color:#fff}#ng-chat.dark-theme .file-message-container,#ng-chat.dark-theme .sent-chat-message-container{border-color:#444;background-color:#444}#ng-chat.dark-theme .file-message-container.received,#ng-chat.dark-theme .received-chat-message-container{background-color:#565656;border-color:#444}#ng-chat.dark-theme .ng-chat-footer{background-color:#444}#ng-chat.dark-theme .ng-chat-message a{color:#fff}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.HttpClient\n    }];\n  }, {\n    isCollapsed: [{\n      type: Input\n    }],\n    maximizeWindowOnNewMessage: [{\n      type: Input\n    }],\n    pollFriendsList: [{\n      type: Input\n    }],\n    pollingInterval: [{\n      type: Input\n    }],\n    historyEnabled: [{\n      type: Input\n    }],\n    emojisEnabled: [{\n      type: Input\n    }],\n    linkfyEnabled: [{\n      type: Input\n    }],\n    audioEnabled: [{\n      type: Input\n    }],\n    searchEnabled: [{\n      type: Input\n    }],\n    audioSource: [{\n      type: Input\n    }],\n    persistWindowsState: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    messagePlaceholder: [{\n      type: Input\n    }],\n    searchPlaceholder: [{\n      type: Input\n    }],\n    browserNotificationsEnabled: [{\n      type: Input\n    }],\n    browserNotificationIconSource: [{\n      type: Input\n    }],\n    browserNotificationTitle: [{\n      type: Input\n    }],\n    historyPageSize: [{\n      type: Input\n    }],\n    hideFriendsList: [{\n      type: Input\n    }],\n    hideFriendsListOnUnsupportedViewport: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    messageDatePipeFormat: [{\n      type: Input\n    }],\n    showMessageDate: [{\n      type: Input\n    }],\n    isViewportOnMobileEnabled: [{\n      type: Input\n    }],\n    onParticipantClicked: [{\n      type: Output\n    }],\n    onParticipantChatOpened: [{\n      type: Output\n    }],\n    onParticipantChatClosed: [{\n      type: Output\n    }],\n    onMessagesSeen: [{\n      type: Output\n    }],\n    isDisabled: [{\n      type: Input\n    }],\n    onResize: [{\n      type: HostListener,\n      args: ['window:resize', ['$event']]\n    }],\n    fileUploadAdapter: [{\n      type: Input\n    }],\n    localization: [{\n      type: Input\n    }],\n    adapter: [{\n      type: Input\n    }],\n    groupAdapter: [{\n      type: Input\n    }],\n    userId: [{\n      type: Input\n    }],\n    fileUploadUrl: [{\n      type: Input\n    }],\n    customTheme: [{\n      type: Input\n    }],\n    chatWindows: [{\n      type: ViewChildren,\n      args: ['chatWindow']\n    }]\n  });\n})();\n\nlet emojiDictionary = [{\n  patterns: [':)', ':-)', '=)'],\n  unicode: '😃'\n}, {\n  patterns: [':D', ':-D', '=D'],\n  unicode: '😀'\n}, {\n  patterns: [':(', ':-(', '=('],\n  unicode: '🙁'\n}, {\n  patterns: [':|', ':-|', '=|'],\n  unicode: '😐'\n}, {\n  patterns: [':*', ':-*', '=*'],\n  unicode: '😙'\n}, {\n  patterns: ['T_T', 'T.T'],\n  unicode: '😭'\n}, {\n  patterns: [':O', ':-O', '=O', ':o', ':-o', '=o'],\n  unicode: '😮'\n}, {\n  patterns: [':P', ':-P', '=P', ':p', ':-p', '=p'],\n  unicode: '😋'\n}, {\n  patterns: ['>.<'],\n  unicode: '😣'\n}, {\n  patterns: ['@.@'],\n  unicode: '😵'\n}, {\n  patterns: ['*.*'],\n  unicode: '😍'\n}, {\n  patterns: ['<3'],\n  unicode: '❤️'\n}, {\n  patterns: ['^.^'],\n  unicode: '😊'\n}, {\n  patterns: [':+1'],\n  unicode: '👍'\n}, {\n  patterns: [':-1'],\n  unicode: '👎'\n}];\n/*\r\n * Transforms common emoji text to UTF encoded emojis\r\n*/\n\nclass EmojifyPipe {\n  transform(message, pipeEnabled) {\n    if (pipeEnabled && message && message.length > 1) {\n      emojiDictionary.forEach(emoji => {\n        emoji.patterns.forEach(pattern => {\n          message = message.replace(pattern, emoji.unicode);\n        });\n      });\n    }\n\n    return message;\n  }\n\n}\n\nEmojifyPipe.ɵfac = function EmojifyPipe_Factory(t) {\n  return new (t || EmojifyPipe)();\n};\n\nEmojifyPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"emojify\",\n  type: EmojifyPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EmojifyPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'emojify'\n    }]\n  }], null, null);\n})();\n/*\r\n * Transforms text containing URLs or E-mails to valid links/mailtos\r\n*/\n\n\nclass LinkfyPipe {\n  transform(message, pipeEnabled) {\n    if (pipeEnabled && message && message.length > 1) {\n      let replacedText;\n      let replacePatternProtocol;\n      let replacePatternWWW;\n      let replacePatternMailTo; // URLs starting with http://, https://, or ftp://\n\n      replacePatternProtocol = /(\\b(https?|ftp):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gim;\n      replacedText = message.replace(replacePatternProtocol, '<a href=\"$1\" target=\"_blank\">$1</a>'); // URLs starting with \"www.\" (ignoring // before it).\n\n      replacePatternWWW = /(^|[^\\/])(www\\.[\\S]+(\\b|$))/gim;\n      replacedText = replacedText.replace(replacePatternWWW, '$1<a href=\"http://$2\" target=\"_blank\">$2</a>'); // Change email addresses to mailto:: links.\n\n      replacePatternMailTo = /(([a-zA-Z0-9\\-\\_\\.])+@[a-zA-Z\\_]+?(\\.[a-zA-Z]{2,6})+)/gim;\n      replacedText = replacedText.replace(replacePatternMailTo, '<a href=\"mailto:$1\">$1</a>');\n      return replacedText;\n    } else return message;\n  }\n\n}\n\nLinkfyPipe.ɵfac = function LinkfyPipe_Factory(t) {\n  return new (t || LinkfyPipe)();\n};\n\nLinkfyPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"linkfy\",\n  type: LinkfyPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LinkfyPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'linkfy'\n    }]\n  }], null, null);\n})();\n/*\r\n * Sanitizes an URL resource\r\n*/\n\n\nclass SanitizePipe {\n  constructor(sanitizer) {\n    this.sanitizer = sanitizer;\n  }\n\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n}\n\nSanitizePipe.ɵfac = function SanitizePipe_Factory(t) {\n  return new (t || SanitizePipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.DomSanitizer, 16));\n};\n\nSanitizePipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"sanitize\",\n  type: SanitizePipe,\n  pure: true\n});\n\nSanitizePipe.ctorParameters = () => [{\n  type: DomSanitizer\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SanitizePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'sanitize'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc3.DomSanitizer\n    }];\n  }, null);\n})();\n/*\r\n * Renders the display name of a participant in a group based on who's sent the message\r\n*/\n\n\nclass GroupMessageDisplayNamePipe {\n  transform(participant, message) {\n    if (participant && participant.participantType == ChatParticipantType.Group) {\n      let group = participant;\n      let userIndex = group.chattingTo.findIndex(x => x.id == message.fromId);\n      return group.chattingTo[userIndex >= 0 ? userIndex : 0].displayName;\n    } else return \"\";\n  }\n\n}\n\nGroupMessageDisplayNamePipe.ɵfac = function GroupMessageDisplayNamePipe_Factory(t) {\n  return new (t || GroupMessageDisplayNamePipe)();\n};\n\nGroupMessageDisplayNamePipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"groupMessageDisplayName\",\n  type: GroupMessageDisplayNamePipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GroupMessageDisplayNamePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'groupMessageDisplayName'\n    }]\n  }], null, null);\n})();\n\nclass NgChatOptionsComponent {\n  constructor() {\n    this.activeOptionTrackerChange = new EventEmitter();\n  }\n\n  onOptionClicked(option) {\n    option.isActive = true;\n\n    if (option.action) {\n      option.action(option.chattingTo);\n    }\n\n    this.activeOptionTrackerChange.emit(option);\n  }\n\n}\n\nNgChatOptionsComponent.ɵfac = function NgChatOptionsComponent_Factory(t) {\n  return new (t || NgChatOptionsComponent)();\n};\n\nNgChatOptionsComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: NgChatOptionsComponent,\n  selectors: [[\"ng-chat-options\"]],\n  inputs: {\n    options: \"options\",\n    activeOptionTracker: \"activeOptionTracker\"\n  },\n  outputs: {\n    activeOptionTrackerChange: \"activeOptionTrackerChange\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"ng-chat-options\", 4, \"ngIf\"], [1, \"ng-chat-options\"], [1, \"ng-chat-options-activator\"], [1, \"primary-text\"], [1, \"ng-chat-options-content\", \"primary-background\", \"shadowed\"], [3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"click\"]],\n  template: function NgChatOptionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgChatOptionsComponent_div_0_Template, 6, 1, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.options && ctx.options.length > 0);\n    }\n  },\n  dependencies: [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf],\n  styles: [\".ng-chat-options-activator[_ngcontent-%COMP%]{background-color:unset;color:#fff;line-height:28px;border:none;position:relative}.ng-chat-options-activator[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{position:relative;top:-5px;left:0}.ng-chat-options[_ngcontent-%COMP%]{position:relative;display:inline-block}.ng-chat-options[_ngcontent-%COMP%]:hover   .ng-chat-options-content[_ngcontent-%COMP%]{display:block}.ng-chat-options[_ngcontent-%COMP%]:hover   .ng-chat-options-activator[_ngcontent-%COMP%]{background-color:#ddd}.ng-chat-options-content[_ngcontent-%COMP%]{display:none;position:absolute;min-width:160px;z-index:1}.ng-chat-options-content[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{background-color:#ddd}.ng-chat-options-content[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{padding:6px 16px;text-decoration:none;display:block}@media only screen and (max-width:581px){.ng-chat-options-content[_ngcontent-%COMP%]{right:0}}\"]\n});\n\nNgChatOptionsComponent.ctorParameters = () => [];\n\nNgChatOptionsComponent.propDecorators = {\n  options: [{\n    type: Input\n  }],\n  activeOptionTracker: [{\n    type: Input\n  }],\n  activeOptionTrackerChange: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChatOptionsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-chat-options',\n      template: \"<div *ngIf=\\\"options && options.length > 0\\\" class=\\\"ng-chat-options\\\">\\r\\n\\t\\t<button class=\\\"ng-chat-options-activator\\\">\\r\\n\\t\\t\\t<span class=\\\"primary-text\\\">...</span>\\r\\n\\t\\t</button>\\r\\n\\t<div class=\\\"ng-chat-options-content primary-background shadowed\\\">\\r\\n\\t\\t<a *ngFor=\\\"let option of options; let i = index\\\" [ngClass]=\\\"'primary-text'\\\" (click)=\\\"onOptionClicked(option)\\\">\\r\\n\\t\\t\\t{{option.displayLabel}}\\r\\n\\t\\t</a>\\r\\n\\t</div>      \\r\\n</div>\\r\\n\",\n      styles: [\".ng-chat-options-activator{background-color:unset;color:#fff;line-height:28px;border:none;position:relative}.ng-chat-options-activator>span{position:relative;top:-5px;left:0}.ng-chat-options{position:relative;display:inline-block}.ng-chat-options:hover .ng-chat-options-content{display:block}.ng-chat-options:hover .ng-chat-options-activator{background-color:#ddd}.ng-chat-options-content{display:none;position:absolute;min-width:160px;z-index:1}.ng-chat-options-content a:hover{background-color:#ddd}.ng-chat-options-content a{padding:6px 16px;text-decoration:none;display:block}@media only screen and (max-width:581px){.ng-chat-options-content{right:0}}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    activeOptionTrackerChange: [{\n      type: Output\n    }],\n    options: [{\n      type: Input\n    }],\n    activeOptionTracker: [{\n      type: Input\n    }]\n  });\n})();\n\nclass MessageCounter {\n  static formatUnreadMessagesTotal(totalUnreadMessages) {\n    if (totalUnreadMessages > 0) {\n      if (totalUnreadMessages > 99) return \"99+\";else return String(totalUnreadMessages);\n    } // Empty fallback.\n\n\n    return \"\";\n  }\n  /**\r\n   * Returns a formatted string containing the total unread messages of a chat window.\r\n   * @param window The window instance to count the unread total messages.\r\n   * @param currentUserId The current chat instance user id. In this context it would be the sender.\r\n   */\n\n\n  static unreadMessagesTotal(window, currentUserId) {\n    let totalUnreadMessages = 0;\n\n    if (window) {\n      totalUnreadMessages = window.messages.filter(x => x.fromId != currentUserId && !x.dateSeen).length;\n    }\n\n    return MessageCounter.formatUnreadMessagesTotal(totalUnreadMessages);\n  }\n\n}\n\nfunction chatParticipantStatusDescriptor(status, localization) {\n  const currentStatus = ChatParticipantStatus[status].toString().toLowerCase();\n  return localization.statusDescription[currentStatus];\n}\n\nclass NgChatFriendsListComponent {\n  constructor() {\n    this.participantsInteractedWith = [];\n    this.onParticipantClicked = new EventEmitter();\n    this.onOptionPromptCanceled = new EventEmitter();\n    this.onOptionPromptConfirmed = new EventEmitter();\n    this.selectedUsersFromFriendsList = [];\n    this.searchInput = ''; // Exposes enums and functions for the ng-template\n\n    this.ChatParticipantStatus = ChatParticipantStatus;\n    this.chatParticipantStatusDescriptor = chatParticipantStatusDescriptor;\n\n    this.cleanUpUserSelection = () => this.selectedUsersFromFriendsList = [];\n  }\n\n  ngOnChanges(changes) {\n    if (this.currentActiveOption) {\n      const currentOptionTriggeredBy = this.currentActiveOption && this.currentActiveOption.chattingTo.participant.id;\n      const isActivatedUserInSelectedList = this.selectedUsersFromFriendsList.filter(item => item.id == currentOptionTriggeredBy).length > 0;\n\n      if (!isActivatedUserInSelectedList) {\n        this.selectedUsersFromFriendsList = this.selectedUsersFromFriendsList.concat(this.currentActiveOption.chattingTo.participant);\n      }\n    }\n  }\n\n  get filteredParticipants() {\n    if (this.searchInput.length > 0) {\n      // Searches in the friend list by the inputted search string\n      return this.participants.filter(x => x.displayName.toUpperCase().includes(this.searchInput.toUpperCase()));\n    }\n\n    return this.participants;\n  }\n\n  isUserSelectedFromFriendsList(user) {\n    return this.selectedUsersFromFriendsList.filter(item => item.id == user.id).length > 0;\n  }\n\n  unreadMessagesTotalByParticipant(participant) {\n    let openedWindow = this.windows.find(x => x.participant.id == participant.id);\n\n    if (openedWindow) {\n      return MessageCounter.unreadMessagesTotal(openedWindow, this.userId);\n    } else {\n      let totalUnreadMessages = this.participantsResponse.filter(x => x.participant.id == participant.id && !this.participantsInteractedWith.find(u => u.id == participant.id) && x.metadata && x.metadata.totalUnreadMessages > 0).map(participantResponse => {\n        return participantResponse.metadata.totalUnreadMessages;\n      })[0];\n      return MessageCounter.formatUnreadMessagesTotal(totalUnreadMessages);\n    }\n  } // Toggle friends list visibility\n\n\n  onChatTitleClicked() {\n    this.isCollapsed = !this.isCollapsed;\n  }\n\n  onFriendsListCheckboxChange(selectedUser, isChecked) {\n    if (isChecked) {\n      this.selectedUsersFromFriendsList.push(selectedUser);\n    } else {\n      this.selectedUsersFromFriendsList.splice(this.selectedUsersFromFriendsList.indexOf(selectedUser), 1);\n    }\n  }\n\n  onUserClick(clickedUser) {\n    this.onParticipantClicked.emit(clickedUser);\n  }\n\n  onFriendsListActionCancelClicked() {\n    this.onOptionPromptCanceled.emit();\n    this.cleanUpUserSelection();\n  }\n\n  onFriendsListActionConfirmClicked() {\n    this.onOptionPromptConfirmed.emit(this.selectedUsersFromFriendsList);\n    this.cleanUpUserSelection();\n  }\n\n}\n\nNgChatFriendsListComponent.ɵfac = function NgChatFriendsListComponent_Factory(t) {\n  return new (t || NgChatFriendsListComponent)();\n};\n\nNgChatFriendsListComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: NgChatFriendsListComponent,\n  selectors: [[\"ng-chat-friends-list\"]],\n  inputs: {\n    participantsInteractedWith: \"participantsInteractedWith\",\n    isCollapsed: \"isCollapsed\",\n    participants: \"participants\",\n    participantsResponse: \"participantsResponse\",\n    windows: \"windows\",\n    userId: \"userId\",\n    localization: \"localization\",\n    shouldDisplay: \"shouldDisplay\",\n    searchEnabled: \"searchEnabled\",\n    currentActiveOption: \"currentActiveOption\"\n  },\n  outputs: {\n    onParticipantClicked: \"onParticipantClicked\",\n    onOptionPromptCanceled: \"onOptionPromptCanceled\",\n    onOptionPromptConfirmed: \"onOptionPromptConfirmed\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"id\", \"ng-chat-people\", 3, \"ngClass\", 4, \"ngIf\"], [\"id\", \"ng-chat-people\", 3, \"ngClass\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-title\", \"secondary-background\", \"shadowed\", 3, \"click\"], [\"class\", \"ng-chat-people-actions\", 3, \"click\", 4, \"ngIf\"], [\"id\", \"ng-chat-search_friend\", \"class\", \"friends-search-bar\", \"type\", \"search\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"id\", \"ng-chat-users\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"ng-chat-people-actions\", 3, \"click\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-people-action\"], [1, \"remove-icon\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-people-action\", 3, \"click\"], [1, \"check-icon\"], [\"id\", \"ng-chat-search_friend\", \"type\", \"search\", 1, \"friends-search-bar\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"id\", \"ng-chat-users\", 3, \"ngClass\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", \"class\", \"ng-chat-users-checkbox\", 3, \"checked\", \"change\", 4, \"ngIf\"], [3, \"ngClass\", \"click\"], [\"class\", \"icon-wrapper\", 4, \"ngIf\"], [\"alt\", \"\", \"class\", \"avatar\", \"height\", \"30\", \"width\", \"30\", 3, \"src\", 4, \"ngIf\"], [3, \"title\"], [3, \"ngClass\", \"title\"], [\"class\", \"ng-chat-unread-messages-count unread-messages-counter-container primary-text\", 4, \"ngIf\"], [\"type\", \"checkbox\", 1, \"ng-chat-users-checkbox\", 3, \"checked\", \"change\"], [1, \"icon-wrapper\"], [1, \"user-icon\"], [\"alt\", \"\", \"height\", \"30\", \"width\", \"30\", 1, \"avatar\", 3, \"src\"], [1, \"ng-chat-unread-messages-count\", \"unread-messages-counter-container\", \"primary-text\"]],\n  template: function NgChatFriendsListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgChatFriendsListComponent_div_0_Template, 7, 7, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.shouldDisplay);\n    }\n  },\n  dependencies: [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, SanitizePipe],\n  styles: [\"#ng-chat-people{position:relative;width:240px;height:360px;border-width:1px;border-style:solid;margin-right:20px;box-shadow:0 4px 8px rgba(0,0,0,.25);border-bottom:0}#ng-chat-people.ng-chat-people-collapsed{height:30px}#ng-chat-search_friend{display:block;padding:7px 10px;width:calc(100% - 20px);margin:10px auto 0;font-size:.9em;-webkit-appearance:searchfield}#ng-chat-users{padding:0 10px;list-style:none;margin:0;overflow:auto;position:absolute;top:42px;bottom:0;width:100%;box-sizing:border-box}#ng-chat-users.offset-search{top:84px}#ng-chat-users .ng-chat-users-checkbox{float:left;margin-right:5px;margin-top:8px}#ng-chat-users li{clear:both;margin-bottom:10px;overflow:hidden;cursor:pointer;max-height:30px}#ng-chat-users li>.ng-chat-friends-list-selectable-offset{margin-left:22px}#ng-chat-users li .ng-chat-friends-list-container{display:inline-block;width:100%}#ng-chat-users li>.ng-chat-friends-list-selectable-offset.ng-chat-friends-list-container{display:block;width:auto}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper,#ng-chat-users li .ng-chat-friends-list-container>img.avatar{float:left;margin-right:5px;border-radius:25px}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper>i{color:#fff;transform:scale(.7)}#ng-chat-users li .ng-chat-friends-list-container>strong{float:left;line-height:30px;font-size:.8em;max-width:57%;max-height:30px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}#ng-chat-users li .ng-chat-friends-list-container>.ng-chat-participant-status{float:right}.ng-chat-people-actions{position:absolute;top:4px;right:5px;margin:0;padding:0;z-index:2}.ng-chat-people-actions>a.ng-chat-people-action{display:inline-block;width:21px;height:21px;margin-right:8px;text-decoration:none;border:none;border-radius:25px;padding:1px}@media only screen and (max-width:581px){#ng-chat-people{width:300px;height:360px;margin-right:0}}\"],\n  encapsulation: 2\n});\n\nNgChatFriendsListComponent.ctorParameters = () => [];\n\nNgChatFriendsListComponent.propDecorators = {\n  participants: [{\n    type: Input\n  }],\n  participantsResponse: [{\n    type: Input\n  }],\n  participantsInteractedWith: [{\n    type: Input\n  }],\n  windows: [{\n    type: Input\n  }],\n  userId: [{\n    type: Input\n  }],\n  localization: [{\n    type: Input\n  }],\n  shouldDisplay: [{\n    type: Input\n  }],\n  isCollapsed: [{\n    type: Input\n  }],\n  searchEnabled: [{\n    type: Input\n  }],\n  currentActiveOption: [{\n    type: Input\n  }],\n  onParticipantClicked: [{\n    type: Output\n  }],\n  onOptionPromptCanceled: [{\n    type: Output\n  }],\n  onOptionPromptConfirmed: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChatFriendsListComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-chat-friends-list',\n      template: \"<div *ngIf=\\\"shouldDisplay\\\" id=\\\"ng-chat-people\\\" [ngClass]=\\\"{'primary-outline-color': true, 'primary-background': true, 'ng-chat-people-collapsed': isCollapsed}\\\">\\r\\n\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-title secondary-background shadowed\\\" (click)=\\\"onChatTitleClicked()\\\">\\r\\n\\t\\t<span>\\r\\n\\t\\t\\t{{localization.title}}\\r\\n\\t\\t</span>\\r\\n\\t</a>\\r\\n\\t<div *ngIf=\\\"currentActiveOption\\\" class=\\\"ng-chat-people-actions\\\" (click)=\\\"onFriendsListActionCancelClicked()\\\">\\r\\n\\t\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-people-action\\\">\\r\\n\\t\\t\\t<i class=\\\"remove-icon\\\"></i>\\r\\n\\t\\t</a>\\r\\n\\t\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-people-action\\\" (click)=\\\"onFriendsListActionConfirmClicked()\\\">\\r\\n\\t\\t\\t<i class=\\\"check-icon\\\"></i>\\r\\n\\t\\t</a>\\r\\n\\t</div>\\r\\n\\t<input *ngIf=\\\"searchEnabled\\\" id=\\\"ng-chat-search_friend\\\" class=\\\"friends-search-bar\\\" type=\\\"search\\\" [placeholder]=\\\"localization.searchPlaceholder\\\" [(ngModel)]=\\\"searchInput\\\" />\\r\\n\\t<ul id=\\\"ng-chat-users\\\" *ngIf=\\\"!isCollapsed\\\" [ngClass]=\\\"{'offset-search': searchEnabled}\\\">\\r\\n\\t\\t<li *ngFor=\\\"let user of filteredParticipants\\\">\\r\\n\\t\\t\\t<input \\r\\n\\t\\t\\t\\t*ngIf=\\\"currentActiveOption && currentActiveOption.validateContext(user)\\\" \\r\\n\\t\\t\\t\\ttype=\\\"checkbox\\\" \\r\\n\\t\\t\\t\\tclass=\\\"ng-chat-users-checkbox\\\" \\r\\n\\t\\t\\t\\t(change)=\\\"onFriendsListCheckboxChange(user, $event.target.checked)\\\" \\r\\n\\t\\t\\t\\t[checked]=\\\"isUserSelectedFromFriendsList(user)\\\"/>\\r\\n\\t\\t\\t<div [ngClass]=\\\"{'ng-chat-friends-list-selectable-offset': currentActiveOption, 'ng-chat-friends-list-container': true}\\\" (click)=\\\"onUserClick(user)\\\">\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"!user.avatar\\\" class=\\\"icon-wrapper\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"user-icon\\\"></i>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<img *ngIf=\\\"user.avatar\\\" alt=\\\"\\\" class=\\\"avatar\\\" height=\\\"30\\\" width=\\\"30\\\"  [src]=\\\"user.avatar | sanitize\\\"/>\\r\\n\\t\\t\\t\\t<strong title=\\\"{{user.displayName}}\\\">{{user.displayName}}</strong>\\r\\n\\t\\t\\t\\t<span [ngClass]=\\\"{'ng-chat-participant-status': true, 'online': user.status == ChatParticipantStatus.Online, 'busy': user.status == ChatParticipantStatus.Busy, 'away': user.status == ChatParticipantStatus.Away, 'offline': user.status == ChatParticipantStatus.Offline}\\\" title=\\\"{{chatParticipantStatusDescriptor(user.status, localization)}}\\\"></span>\\r\\n\\t\\t\\t\\t<span *ngIf=\\\"unreadMessagesTotalByParticipant(user).length > 0\\\" class=\\\"ng-chat-unread-messages-count unread-messages-counter-container primary-text\\\">{{unreadMessagesTotalByParticipant(user)}}</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</li>\\r\\n\\t</ul>\\r\\n</div>\",\n      encapsulation: ViewEncapsulation.None,\n      styles: [\"#ng-chat-people{position:relative;width:240px;height:360px;border-width:1px;border-style:solid;margin-right:20px;box-shadow:0 4px 8px rgba(0,0,0,.25);border-bottom:0}#ng-chat-people.ng-chat-people-collapsed{height:30px}#ng-chat-search_friend{display:block;padding:7px 10px;width:calc(100% - 20px);margin:10px auto 0;font-size:.9em;-webkit-appearance:searchfield}#ng-chat-users{padding:0 10px;list-style:none;margin:0;overflow:auto;position:absolute;top:42px;bottom:0;width:100%;box-sizing:border-box}#ng-chat-users.offset-search{top:84px}#ng-chat-users .ng-chat-users-checkbox{float:left;margin-right:5px;margin-top:8px}#ng-chat-users li{clear:both;margin-bottom:10px;overflow:hidden;cursor:pointer;max-height:30px}#ng-chat-users li>.ng-chat-friends-list-selectable-offset{margin-left:22px}#ng-chat-users li .ng-chat-friends-list-container{display:inline-block;width:100%}#ng-chat-users li>.ng-chat-friends-list-selectable-offset.ng-chat-friends-list-container{display:block;width:auto}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper,#ng-chat-users li .ng-chat-friends-list-container>img.avatar{float:left;margin-right:5px;border-radius:25px}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper>i{color:#fff;transform:scale(.7)}#ng-chat-users li .ng-chat-friends-list-container>strong{float:left;line-height:30px;font-size:.8em;max-width:57%;max-height:30px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}#ng-chat-users li .ng-chat-friends-list-container>.ng-chat-participant-status{float:right}.ng-chat-people-actions{position:absolute;top:4px;right:5px;margin:0;padding:0;z-index:2}.ng-chat-people-actions>a.ng-chat-people-action{display:inline-block;width:21px;height:21px;margin-right:8px;text-decoration:none;border:none;border-radius:25px;padding:1px}@media only screen and (max-width:581px){#ng-chat-people{width:300px;height:360px;margin-right:0}}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    participantsInteractedWith: [{\n      type: Input\n    }],\n    onParticipantClicked: [{\n      type: Output\n    }],\n    onOptionPromptCanceled: [{\n      type: Output\n    }],\n    onOptionPromptConfirmed: [{\n      type: Output\n    }],\n    isCollapsed: [{\n      type: Input\n    }],\n    participants: [{\n      type: Input\n    }],\n    participantsResponse: [{\n      type: Input\n    }],\n    windows: [{\n      type: Input\n    }],\n    userId: [{\n      type: Input\n    }],\n    localization: [{\n      type: Input\n    }],\n    shouldDisplay: [{\n      type: Input\n    }],\n    searchEnabled: [{\n      type: Input\n    }],\n    currentActiveOption: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgChatWindowComponent {\n  constructor() {\n    this.emojisEnabled = true;\n    this.linkfyEnabled = true;\n    this.showMessageDate = true;\n    this.messageDatePipeFormat = \"short\";\n    this.hasPagedHistory = true;\n    this.onChatWindowClosed = new EventEmitter();\n    this.onMessagesSeen = new EventEmitter();\n    this.onMessageSent = new EventEmitter();\n    this.onTabTriggered = new EventEmitter();\n    this.onOptionTriggered = new EventEmitter();\n    this.onLoadHistoryTriggered = new EventEmitter(); // File upload state\n\n    this.fileUploadersInUse = []; // Id bucket of uploaders in use\n    // Exposes enums and functions for the ng-template\n\n    this.ChatParticipantType = ChatParticipantType;\n    this.ChatParticipantStatus = ChatParticipantStatus;\n    this.MessageType = MessageType;\n    this.chatParticipantStatusDescriptor = chatParticipantStatusDescriptor;\n  }\n\n  defaultWindowOptions(currentWindow) {\n    if (this.showOptions && currentWindow.participant.participantType == ChatParticipantType.User) {\n      return [{\n        isActive: false,\n        chattingTo: currentWindow,\n        validateContext: participant => {\n          return participant.participantType == ChatParticipantType.User;\n        },\n        displayLabel: 'Add People' // TODO: Localize this\n\n      }];\n    }\n\n    return [];\n  } // Asserts if a user avatar is visible in a chat cluster\n\n\n  isAvatarVisible(window, message, index) {\n    if (message.fromId != this.userId) {\n      if (index == 0) {\n        return true; // First message, good to show the thumbnail\n      } else {\n        // Check if the previous message belongs to the same user, if it belongs there is no need to show the avatar again to form the message cluster\n        if (window.messages[index - 1].fromId != message.fromId) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  getChatWindowAvatar(participant, message) {\n    if (participant.participantType == ChatParticipantType.User) {\n      return participant.avatar;\n    } else if (participant.participantType == ChatParticipantType.Group) {\n      let group = participant;\n      let userIndex = group.chattingTo.findIndex(x => x.id == message.fromId);\n      return group.chattingTo[userIndex >= 0 ? userIndex : 0].avatar;\n    }\n\n    return null;\n  }\n\n  isUploadingFile(window) {\n    const fileUploadInstanceId = this.getUniqueFileUploadInstanceId(window);\n    return this.fileUploadersInUse.indexOf(fileUploadInstanceId) > -1;\n  } // Generates a unique file uploader id for each participant\n\n\n  getUniqueFileUploadInstanceId(window) {\n    if (window && window.participant) {\n      return `ng-chat-file-upload-${window.participant.id}`;\n    }\n\n    return 'ng-chat-file-upload';\n  }\n\n  unreadMessagesTotal(window) {\n    return MessageCounter.unreadMessagesTotal(window, this.userId);\n  } // Scrolls a chat window message flow to the bottom\n\n\n  scrollChatWindow(window, direction) {\n    if (!window.isCollapsed) {\n      setTimeout(() => {\n        if (this.chatMessages) {\n          let element = this.chatMessages.nativeElement;\n          let position = direction === ScrollDirection.Top ? 0 : element.scrollHeight;\n          element.scrollTop = position;\n        }\n      });\n    }\n  }\n\n  activeOptionTrackerChange(option) {\n    this.onOptionTriggered.emit(option);\n  } // Triggers native file upload for file selection from the user\n\n\n  triggerNativeFileUpload(window) {\n    if (window) {\n      if (this.nativeFileInput) this.nativeFileInput.nativeElement.click();\n    }\n  } // Toggles a window focus on the focus/blur of a 'newMessage' input\n\n\n  toggleWindowFocus(window) {\n    window.hasFocus = !window.hasFocus;\n\n    if (window.hasFocus) {\n      const unreadMessages = window.messages.filter(message => message.dateSeen == null && (message.toId == this.userId || window.participant.participantType === ChatParticipantType.Group));\n\n      if (unreadMessages && unreadMessages.length > 0) {\n        this.onMessagesSeen.emit(unreadMessages);\n      }\n    }\n  }\n\n  markMessagesAsRead(messages) {\n    this.onMessagesSeen.emit(messages);\n  }\n\n  fetchMessageHistory(window) {\n    this.onLoadHistoryTriggered.emit(window);\n  } // Closes a chat window via the close 'X' button\n\n\n  onCloseChatWindow() {\n    this.onChatWindowClosed.emit({\n      closedWindow: this.window,\n      closedViaEscapeKey: false\n    });\n  }\n  /*  Monitors pressed keys on a chat window\r\n      - Dispatches a message when the ENTER key is pressed\r\n      - Tabs between windows on TAB or SHIFT + TAB\r\n      - Closes the current focused window on ESC\r\n  */\n\n\n  onChatInputTyped(event, window) {\n    switch (event.keyCode) {\n      case 13:\n        if (window.newMessage && window.newMessage.trim() != \"\") {\n          let message = new Message();\n          message.fromId = this.userId;\n          message.toId = window.participant.id;\n          message.message = window.newMessage;\n          message.dateSent = new Date();\n          window.messages.push(message);\n          this.onMessageSent.emit(message);\n          window.newMessage = \"\"; // Resets the new message input\n\n          this.scrollChatWindow(window, ScrollDirection.Bottom);\n        }\n\n        break;\n\n      case 9:\n        event.preventDefault();\n        this.onTabTriggered.emit({\n          triggeringWindow: window,\n          shiftKeyPressed: event.shiftKey\n        });\n        break;\n\n      case 27:\n        this.onChatWindowClosed.emit({\n          closedWindow: window,\n          closedViaEscapeKey: true\n        });\n        break;\n    }\n  } // Toggles a chat window visibility between maximized/minimized\n\n\n  onChatWindowClicked(window) {\n    window.isCollapsed = !window.isCollapsed;\n    this.scrollChatWindow(window, ScrollDirection.Bottom);\n  }\n\n  clearInUseFileUploader(fileUploadInstanceId) {\n    const uploaderInstanceIdIndex = this.fileUploadersInUse.indexOf(fileUploadInstanceId);\n\n    if (uploaderInstanceIdIndex > -1) {\n      this.fileUploadersInUse.splice(uploaderInstanceIdIndex, 1);\n    }\n  } // Handles file selection and uploads the selected file using the file upload adapter\n\n\n  onFileChosen(window) {\n    const fileUploadInstanceId = this.getUniqueFileUploadInstanceId(window);\n    const uploadElementRef = this.nativeFileInput;\n\n    if (uploadElementRef) {\n      const file = uploadElementRef.nativeElement.files[0];\n      this.fileUploadersInUse.push(fileUploadInstanceId);\n      this.fileUploadAdapter.uploadFile(file, window.participant.id).subscribe(fileMessage => {\n        this.clearInUseFileUploader(fileUploadInstanceId);\n        fileMessage.fromId = this.userId; // Push file message to current user window   \n\n        window.messages.push(fileMessage);\n        this.onMessageSent.emit(fileMessage);\n        this.scrollChatWindow(window, ScrollDirection.Bottom); // Resets the file upload element\n\n        uploadElementRef.nativeElement.value = '';\n      }, error => {\n        this.clearInUseFileUploader(fileUploadInstanceId); // Resets the file upload element\n\n        uploadElementRef.nativeElement.value = ''; // TODO: Invoke a file upload adapter error here\n      });\n    }\n  }\n\n}\n\nNgChatWindowComponent.ɵfac = function NgChatWindowComponent_Factory(t) {\n  return new (t || NgChatWindowComponent)();\n};\n\nNgChatWindowComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: NgChatWindowComponent,\n  selectors: [[\"ng-chat-window\"]],\n  viewQuery: function NgChatWindowComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c7, 5);\n      ɵngcc0.ɵɵviewQuery(_c8, 5);\n      ɵngcc0.ɵɵviewQuery(_c9, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chatMessages = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nativeFileInput = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chatWindowInput = _t.first);\n    }\n  },\n  inputs: {\n    emojisEnabled: \"emojisEnabled\",\n    linkfyEnabled: \"linkfyEnabled\",\n    showMessageDate: \"showMessageDate\",\n    messageDatePipeFormat: \"messageDatePipeFormat\",\n    hasPagedHistory: \"hasPagedHistory\",\n    fileUploadAdapter: \"fileUploadAdapter\",\n    window: \"window\",\n    userId: \"userId\",\n    localization: \"localization\",\n    showOptions: \"showOptions\"\n  },\n  outputs: {\n    onChatWindowClosed: \"onChatWindowClosed\",\n    onMessagesSeen: \"onMessagesSeen\",\n    onMessageSent: \"onMessageSent\",\n    onTabTriggered: \"onTabTriggered\",\n    onOptionTriggered: \"onOptionTriggered\",\n    onLoadHistoryTriggered: \"onLoadHistoryTriggered\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [1, \"ng-chat-title\", \"secondary-background\"], [1, \"ng-chat-title-visibility-toggle-area\", 3, \"click\"], [3, \"title\"], [3, \"ngClass\", \"title\"], [\"class\", \"ng-chat-unread-messages-count unread-messages-counter-container primary-text\", 4, \"ngIf\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-close\", \"primary-text\", 3, \"click\"], [1, \"ng-chat-unread-messages-count\", \"unread-messages-counter-container\", \"primary-text\"], [3, \"ngClass\", \"options\", \"activeOptionTrackerChange\"], [1, \"ng-chat-messages\", \"primary-background\"], [\"chatMessages\", \"\"], [\"class\", \"ng-chat-loading-wrapper\", 4, \"ngIf\"], [\"class\", \"ng-chat-load-history\", 4, \"ngIf\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"ng-chat-footer\", \"primary-outline-color\", \"primary-background\"], [\"type\", \"text\", 3, \"ngModel\", \"placeholder\", \"ngClass\", \"ngModelChange\", \"keydown\", \"blur\", \"focus\"], [\"chatWindowInput\", \"\"], [1, \"ng-chat-loading-wrapper\"], [1, \"loader\"], [1, \"ng-chat-load-history\"], [1, \"load-history-action\", 3, \"click\"], [3, \"ngClass\"], [3, \"ngSwitch\"], [3, \"ngClass\", 4, \"ngSwitchCase\"], [\"class\", \"icon-wrapper\", 4, \"ngIf\"], [\"alt\", \"\", \"class\", \"avatar\", \"height\", \"30\", \"width\", \"30\", 3, \"src\", 4, \"ngIf\"], [\"class\", \"ng-chat-participant-name\", 4, \"ngIf\"], [1, \"icon-wrapper\"], [1, \"user-icon\"], [\"alt\", \"\", \"height\", \"30\", \"width\", \"30\", 1, \"avatar\", 3, \"src\"], [1, \"ng-chat-participant-name\"], [3, \"innerHtml\"], [\"class\", \"message-sent-date\", 4, \"ngIf\"], [1, \"message-sent-date\"], [1, \"image-message\", 3, \"src\"], [1, \"file-message-icon-container\"], [1, \"paperclip-icon\"], [\"target\", \"_blank\", \"rel\", \"noopener noreferrer\", \"download\", \"\", 1, \"file-details\", 3, \"click\"], [1, \"file-message-title\"], [\"class\", \"file-message-size\", 4, \"ngIf\"], [1, \"file-message-size\"], [\"class\", \"btn-add-file\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"file\", 2, \"display\", \"none\", 3, \"change\"], [\"nativeFileInput\", \"\"], [\"class\", \"loader\", 4, \"ngIf\"], [1, \"btn-add-file\", 3, \"click\"], [1, \"upload-icon\"]],\n  template: function NgChatWindowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgChatWindowComponent_ng_container_0_Template, 9, 10, \"ng-container\", 0);\n      ɵngcc0.ɵɵtemplate(1, NgChatWindowComponent_ng_container_1_Template, 20, 24, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.window && ctx.window.isCollapsed);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.window && !ctx.window.isCollapsed);\n    }\n  },\n  dependencies: [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase, ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, NgChatOptionsComponent, ɵngcc2.DatePipe, EmojifyPipe, LinkfyPipe, SanitizePipe, GroupMessageDisplayNamePipe],\n  styles: [\".ng-chat-window{right:260px;height:360px;z-index:999;bottom:0;width:300px;position:fixed;border-width:1px;border-style:solid;border-bottom:0;box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-window-collapsed{height:30px!important}.ng-chat-window .ng-chat-footer{box-sizing:border-box;padding:0;display:block;height:calc(10%);width:100%;border:none;border-top:1px solid transparent;border-color:inherit}.ng-chat-window .ng-chat-footer>input{font-size:.8em;box-sizing:border-box;padding:0 5px;display:block;height:100%;width:100%;border:none}.ng-chat-window .ng-chat-footer>input.has-side-action{width:calc(100% - 30px)}.ng-chat-window .ng-chat-footer .btn-add-file{position:absolute;right:5px;bottom:7px;height:20px;width:20px;cursor:pointer}.ng-chat-window .ng-chat-footer .loader{position:absolute;right:14px;bottom:8px}.ng-chat-window .ng-chat-load-history{height:30px;text-align:center;font-size:.8em}.ng-chat-window .ng-chat-load-history>a{border-radius:15px;cursor:pointer;padding:5px 10px}.ng-chat-window .ng-chat-messages{padding:10px;width:100%;height:calc(90% - 30px);box-sizing:border-box;position:relative;overflow:auto}.ng-chat-window .ng-chat-messages .ng-chat-message{clear:both}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper,.ng-chat-window .ng-chat-messages .ng-chat-message>img.avatar{position:absolute;left:10px;border-radius:25px}.ng-chat-window .ng-chat-messages .ng-chat-message .ng-chat-participant-name{display:inline-block;margin-left:40px;padding-bottom:5px;font-weight:700;font-size:.8em;text-overflow:ellipsis;max-width:180px}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px;padding:0}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper>i{color:#fff;transform:scale(.7)}.ng-chat-window .ng-chat-messages .ng-chat-message .message-sent-date{font-size:.8em;display:block;text-align:right;margin-top:5px}.ng-chat-window .ng-chat-messages .ng-chat-message>div{float:right;width:182px;border-radius:5px;padding:10px;margin-top:0;margin-bottom:5px;font-size:.9em;word-wrap:break-word}.ng-chat-window .ng-chat-messages .ng-chat-message.ng-chat-message-received>div.received-chat-message-container{float:left;margin-left:40px;padding-top:7px;padding-bottom:7px;border-style:solid;border-width:3px;margin-top:0;margin-bottom:5px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container{float:right;width:202px;border-style:solid;border-width:3px;border-radius:5px;overflow:hidden;margin-bottom:5px;display:block;text-decoration:none;font-size:.9em;padding:0;box-sizing:border-box}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container.received{float:left;margin-left:40px;width:208px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container{width:20px;height:35px;padding:10px 5px;float:left}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container i{margin-top:8px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details{float:left;padding:10px;width:calc(100% - 60px);color:currentColor;text-decoration:none}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details:hover{text-decoration:underline}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details span{display:block;width:100%;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-title{font-weight:700}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-size{font-size:.8em;margin-top:5px}.ng-chat-window .image-message{width:100%;height:auto}@media only screen and (max-width:581px){.ng-chat-window{position:static}}\"],\n  encapsulation: 2\n});\n\nNgChatWindowComponent.ctorParameters = () => [];\n\nNgChatWindowComponent.propDecorators = {\n  fileUploadAdapter: [{\n    type: Input\n  }],\n  window: [{\n    type: Input\n  }],\n  userId: [{\n    type: Input\n  }],\n  localization: [{\n    type: Input\n  }],\n  showOptions: [{\n    type: Input\n  }],\n  emojisEnabled: [{\n    type: Input\n  }],\n  linkfyEnabled: [{\n    type: Input\n  }],\n  showMessageDate: [{\n    type: Input\n  }],\n  messageDatePipeFormat: [{\n    type: Input\n  }],\n  hasPagedHistory: [{\n    type: Input\n  }],\n  onChatWindowClosed: [{\n    type: Output\n  }],\n  onMessagesSeen: [{\n    type: Output\n  }],\n  onMessageSent: [{\n    type: Output\n  }],\n  onTabTriggered: [{\n    type: Output\n  }],\n  onOptionTriggered: [{\n    type: Output\n  }],\n  onLoadHistoryTriggered: [{\n    type: Output\n  }],\n  chatMessages: [{\n    type: ViewChild,\n    args: ['chatMessages']\n  }],\n  nativeFileInput: [{\n    type: ViewChild,\n    args: ['nativeFileInput']\n  }],\n  chatWindowInput: [{\n    type: ViewChild,\n    args: ['chatWindowInput']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChatWindowComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-chat-window',\n      template: \"<ng-container *ngIf=\\\"window && window.isCollapsed\\\">\\r\\n\\t<div class=\\\"ng-chat-title secondary-background\\\">\\r\\n\\t\\t<div class=\\\"ng-chat-title-visibility-toggle-area\\\" (click)=\\\"onChatWindowClicked(window)\\\">\\r\\n\\t\\t\\t<strong title=\\\"{{window.participant.displayName}}\\\">\\r\\n\\t\\t\\t\\t{{window.participant.displayName}}\\r\\n\\t\\t\\t</strong>\\r\\n\\t\\t\\t<span [ngClass]=\\\"{'ng-chat-participant-status': true, 'online': window.participant.status == ChatParticipantStatus.Online, 'busy': window.participant.status == ChatParticipantStatus.Busy, 'away': window.participant.status == ChatParticipantStatus.Away, 'offline': window.participant.status == ChatParticipantStatus.Offline}\\\" title=\\\"{{chatParticipantStatusDescriptor(window.participant.status, localization)}}\\\"></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"unreadMessagesTotal(window).length > 0\\\" class=\\\"ng-chat-unread-messages-count unread-messages-counter-container primary-text\\\">{{unreadMessagesTotal(window)}}</span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-close primary-text\\\" (click)=\\\"onCloseChatWindow()\\\">X</a>\\r\\n\\t</div>\\r\\n</ng-container>\\r\\n<ng-container *ngIf=\\\"window && !window.isCollapsed\\\">\\r\\n\\t<div class=\\\"ng-chat-title secondary-background\\\">\\r\\n\\t\\t<div class=\\\"ng-chat-title-visibility-toggle-area\\\" (click)=\\\"onChatWindowClicked(window)\\\">\\r\\n\\t\\t\\t<strong title=\\\"{{window.participant.displayName}}\\\">\\r\\n\\t\\t\\t\\t{{window.participant.displayName}}\\r\\n\\t\\t\\t</strong>\\r\\n\\t\\t\\t<span [ngClass]=\\\"{'ng-chat-participant-status': true, 'online': window.participant.status == ChatParticipantStatus.Online, 'busy': window.participant.status == ChatParticipantStatus.Busy, 'away': window.participant.status == ChatParticipantStatus.Away, 'offline': window.participant.status == ChatParticipantStatus.Offline}\\\" title=\\\"{{chatParticipantStatusDescriptor(window.participant.status, localization)}}\\\"></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"unreadMessagesTotal(window).length > 0\\\" class=\\\"ng-chat-unread-messages-count unread-messages-counter-container primary-text\\\">{{unreadMessagesTotal(window)}}</span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-close primary-text\\\" (click)=\\\"onCloseChatWindow()\\\">X</a>\\r\\n\\t\\t<ng-chat-options [ngClass]=\\\"'ng-chat-options-container'\\\" [options]=\\\"defaultWindowOptions(window)\\\" (activeOptionTrackerChange)=\\\"activeOptionTrackerChange($event)\\\"></ng-chat-options>\\r\\n\\t</div>\\r\\n\\t<div #chatMessages class=\\\"ng-chat-messages primary-background\\\">\\r\\n\\t\\t<div *ngIf=\\\"window.isLoadingHistory\\\" class=\\\"ng-chat-loading-wrapper\\\">\\r\\n\\t\\t\\t<div class=\\\"loader\\\">Loading history...</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"hasPagedHistory && window.hasMoreMessages && !window.isLoadingHistory\\\" class=\\\"ng-chat-load-history\\\">\\r\\n\\t\\t\\t<a class=\\\"load-history-action\\\" (click)=\\\"fetchMessageHistory(window)\\\">{{localization.loadMessageHistoryPlaceholder}}</a>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div *ngFor=\\\"let message of window.messages; let i = index\\\" [ngClass]=\\\"{'ng-chat-message': true, 'ng-chat-message-received': message.fromId != userId}\\\">\\r\\n\\t\\t\\t<ng-container *ngIf=\\\"isAvatarVisible(window, message, i)\\\">\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"!getChatWindowAvatar(window.participant, message)\\\" class=\\\"icon-wrapper\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"user-icon\\\"></i>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<img *ngIf=\\\"getChatWindowAvatar(window.participant, message)\\\" alt=\\\"\\\" class=\\\"avatar\\\" height=\\\"30\\\" width=\\\"30\\\" [src]=\\\"getChatWindowAvatar(window.participant, message) | sanitize\\\" />\\r\\n\\t\\t\\t\\t<span *ngIf=\\\"window.participant.participantType == ChatParticipantType.Group\\\" class=\\\"ng-chat-participant-name\\\">{{window.participant | groupMessageDisplayName:message}}</span>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t<ng-container [ngSwitch]=\\\"message.type\\\">\\r\\n\\t\\t\\t\\t<div *ngSwitchCase=\\\"MessageType.Text\\\" [ngClass]=\\\"{'sent-chat-message-container': message.fromId == userId, 'received-chat-message-container': message.fromId != userId}\\\">\\r\\n          <span [innerHtml]=\\\"message.message | emojify:emojisEnabled | linkfy:linkfyEnabled\\\"></span>\\r\\n\\t\\t\\t\\t\\t<span *ngIf=\\\"showMessageDate && message.dateSent\\\" class=\\\"message-sent-date\\\">{{message.dateSent | date:messageDatePipeFormat}}</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n        <div *ngSwitchCase=\\\"MessageType.Image\\\" [ngClass]=\\\"{'sent-chat-message-container': message.fromId == userId, 'received-chat-message-container': message.fromId != userId}\\\">\\r\\n\\r\\n          <img src=\\\"{{message.message}}\\\" class=\\\"image-message\\\" />\\r\\n\\r\\n\\t\\t\\t\\t\\t<span *ngIf=\\\"showMessageDate && message.dateSent\\\" class=\\\"message-sent-date\\\">{{message.dateSent | date:messageDatePipeFormat}}</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div *ngSwitchCase=\\\"MessageType.File\\\" [ngClass]=\\\"{'file-message-container': true, 'received': message.fromId != userId}\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"file-message-icon-container\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"paperclip-icon\\\"></i>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<a class=\\\"file-details\\\" [attr.href]=\\\"message.downloadUrl\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" (click)=\\\"this.markMessagesAsRead([message])\\\" download>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"file-message-title\\\" [attr.title]=\\\"message.message\\\">{{message.message}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"message.fileSizeInBytes\\\"  class=\\\"file-message-size\\\">{{message.fileSizeInBytes}} Bytes</span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"ng-chat-footer primary-outline-color primary-background\\\">\\r\\n\\t\\t<input #chatWindowInput\\r\\n\\t\\t\\ttype=\\\"text\\\"\\r\\n\\t\\t\\t[ngModel]=\\\"window.newMessage | emojify:emojisEnabled\\\"\\r\\n\\t\\t\\t(ngModelChange)=\\\"window.newMessage=$event\\\"\\r\\n\\t\\t\\t[placeholder]=\\\"localization.messagePlaceholder\\\"\\r\\n\\t\\t\\t[ngClass]=\\\"{'chat-window-input': true, 'has-side-action': fileUploadAdapter}\\\"\\r\\n\\t\\t\\t(keydown)=\\\"onChatInputTyped($event, window)\\\"\\r\\n\\t\\t\\t(blur)=\\\"toggleWindowFocus(window)\\\"\\r\\n\\t\\t\\t(focus)=\\\"toggleWindowFocus(window)\\\"/>\\r\\n\\r\\n\\t\\t<!-- File Upload -->\\r\\n\\t\\t<ng-container *ngIf=\\\"fileUploadAdapter\\\">\\r\\n\\t\\t\\t<a *ngIf=\\\"!isUploadingFile(window)\\\" class=\\\"btn-add-file\\\" (click)=\\\"triggerNativeFileUpload(window)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"upload-icon\\\"></i>\\r\\n\\t\\t\\t</a>\\r\\n\\t\\t\\t<input\\r\\n\\t\\t\\t\\ttype=\\\"file\\\"\\r\\n\\t\\t\\t\\t#nativeFileInput\\r\\n\\t\\t\\t\\tstyle=\\\"display: none;\\\"\\r\\n\\t\\t\\t\\t[attr.id]=\\\"getUniqueFileUploadInstanceId(window)\\\"\\r\\n\\t\\t\\t\\t(change)=\\\"onFileChosen(window)\\\" />\\r\\n\\t\\t\\t<div *ngIf=\\\"isUploadingFile(window)\\\" class=\\\"loader\\\"></div>\\r\\n\\t\\t</ng-container>\\r\\n\\t</div>\\r\\n</ng-container>\\r\\n\",\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ng-chat-window{right:260px;height:360px;z-index:999;bottom:0;width:300px;position:fixed;border-width:1px;border-style:solid;border-bottom:0;box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-window-collapsed{height:30px!important}.ng-chat-window .ng-chat-footer{box-sizing:border-box;padding:0;display:block;height:calc(10%);width:100%;border:none;border-top:1px solid transparent;border-color:inherit}.ng-chat-window .ng-chat-footer>input{font-size:.8em;box-sizing:border-box;padding:0 5px;display:block;height:100%;width:100%;border:none}.ng-chat-window .ng-chat-footer>input.has-side-action{width:calc(100% - 30px)}.ng-chat-window .ng-chat-footer .btn-add-file{position:absolute;right:5px;bottom:7px;height:20px;width:20px;cursor:pointer}.ng-chat-window .ng-chat-footer .loader{position:absolute;right:14px;bottom:8px}.ng-chat-window .ng-chat-load-history{height:30px;text-align:center;font-size:.8em}.ng-chat-window .ng-chat-load-history>a{border-radius:15px;cursor:pointer;padding:5px 10px}.ng-chat-window .ng-chat-messages{padding:10px;width:100%;height:calc(90% - 30px);box-sizing:border-box;position:relative;overflow:auto}.ng-chat-window .ng-chat-messages .ng-chat-message{clear:both}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper,.ng-chat-window .ng-chat-messages .ng-chat-message>img.avatar{position:absolute;left:10px;border-radius:25px}.ng-chat-window .ng-chat-messages .ng-chat-message .ng-chat-participant-name{display:inline-block;margin-left:40px;padding-bottom:5px;font-weight:700;font-size:.8em;text-overflow:ellipsis;max-width:180px}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px;padding:0}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper>i{color:#fff;transform:scale(.7)}.ng-chat-window .ng-chat-messages .ng-chat-message .message-sent-date{font-size:.8em;display:block;text-align:right;margin-top:5px}.ng-chat-window .ng-chat-messages .ng-chat-message>div{float:right;width:182px;border-radius:5px;padding:10px;margin-top:0;margin-bottom:5px;font-size:.9em;word-wrap:break-word}.ng-chat-window .ng-chat-messages .ng-chat-message.ng-chat-message-received>div.received-chat-message-container{float:left;margin-left:40px;padding-top:7px;padding-bottom:7px;border-style:solid;border-width:3px;margin-top:0;margin-bottom:5px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container{float:right;width:202px;border-style:solid;border-width:3px;border-radius:5px;overflow:hidden;margin-bottom:5px;display:block;text-decoration:none;font-size:.9em;padding:0;box-sizing:border-box}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container.received{float:left;margin-left:40px;width:208px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container{width:20px;height:35px;padding:10px 5px;float:left}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container i{margin-top:8px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details{float:left;padding:10px;width:calc(100% - 60px);color:currentColor;text-decoration:none}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details:hover{text-decoration:underline}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details span{display:block;width:100%;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-title{font-weight:700}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-size{font-size:.8em;margin-top:5px}.ng-chat-window .image-message{width:100%;height:auto}@media only screen and (max-width:581px){.ng-chat-window{position:static}}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    emojisEnabled: [{\n      type: Input\n    }],\n    linkfyEnabled: [{\n      type: Input\n    }],\n    showMessageDate: [{\n      type: Input\n    }],\n    messageDatePipeFormat: [{\n      type: Input\n    }],\n    hasPagedHistory: [{\n      type: Input\n    }],\n    onChatWindowClosed: [{\n      type: Output\n    }],\n    onMessagesSeen: [{\n      type: Output\n    }],\n    onMessageSent: [{\n      type: Output\n    }],\n    onTabTriggered: [{\n      type: Output\n    }],\n    onOptionTriggered: [{\n      type: Output\n    }],\n    onLoadHistoryTriggered: [{\n      type: Output\n    }],\n    fileUploadAdapter: [{\n      type: Input\n    }],\n    window: [{\n      type: Input\n    }],\n    userId: [{\n      type: Input\n    }],\n    localization: [{\n      type: Input\n    }],\n    showOptions: [{\n      type: Input\n    }],\n    chatMessages: [{\n      type: ViewChild,\n      args: ['chatMessages']\n    }],\n    nativeFileInput: [{\n      type: ViewChild,\n      args: ['nativeFileInput']\n    }],\n    chatWindowInput: [{\n      type: ViewChild,\n      args: ['chatWindowInput']\n    }]\n  });\n})();\n\nclass NgChatModule {}\n\nNgChatModule.ɵfac = function NgChatModule_Factory(t) {\n  return new (t || NgChatModule)();\n};\n\nNgChatModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NgChatModule\n});\nNgChatModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule, FormsModule, HttpClientModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChatModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, HttpClientModule],\n      declarations: [NgChat, EmojifyPipe, LinkfyPipe, SanitizePipe, GroupMessageDisplayNamePipe, NgChatOptionsComponent, NgChatFriendsListComponent, NgChatWindowComponent],\n      exports: [NgChat]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgChatModule, {\n    declarations: function () {\n      return [NgChat, EmojifyPipe, LinkfyPipe, SanitizePipe, GroupMessageDisplayNamePipe, NgChatOptionsComponent, NgChatFriendsListComponent, NgChatWindowComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, HttpClientModule];\n    },\n    exports: function () {\n      return [NgChat];\n    }\n  });\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { ChatAdapter, ChatParticipantStatus, ChatParticipantType, Group, Message, MessageType, NgChatModule, PagedHistoryChatAdapter, ParticipantMetadata, ParticipantResponse, Theme, User, Window, NgChat as ɵa, EmojifyPipe as ɵb, LinkfyPipe as ɵc, SanitizePipe as ɵd, GroupMessageDisplayNamePipe as ɵe, NgChatOptionsComponent as ɵf, NgChatFriendsListComponent as ɵg, NgChatWindowComponent as ɵh };","map":{"version":3,"names":["CommonModule","EventEmitter","Component","ViewEncapsulation","Input","Output","ViewChildren","HostListener","Pipe","ViewChild","NgModule","FormsModule","HttpClient","HttpClientModule","__awaiter","map","DomSanitizer","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","_c0","NgChat_link_0_Template","rf","ctx","ɵɵelement","ɵɵpipe","ctx_r0","ɵɵnextContext","ɵɵproperty","ɵɵpipeBind1","customTheme","ɵɵsanitizeResourceUrl","_c1","a2","_c2","a0","NgChat_div_1_div_2_Template","_r7","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","NgChat_div_1_div_2_Template_ng_chat_window_onMessagesSeen_1_listener","$event","ɵɵrestoreView","ctx_r6","ɵɵresetView","onWindowMessagesSeen","NgChat_div_1_div_2_Template_ng_chat_window_onMessageSent_1_listener","ctx_r8","onWindowMessageSent","NgChat_div_1_div_2_Template_ng_chat_window_onTabTriggered_1_listener","ctx_r9","onWindowTabTriggered","NgChat_div_1_div_2_Template_ng_chat_window_onChatWindowClosed_1_listener","ctx_r10","onWindowChatClosed","NgChat_div_1_div_2_Template_ng_chat_window_onOptionTriggered_1_listener","ctx_r11","onWindowOptionTriggered","NgChat_div_1_div_2_Template_ng_chat_window_onLoadHistoryTriggered_1_listener","ctx_r12","fetchMessageHistory","ɵɵelementEnd","window_r3","$implicit","i_r4","index","ctx_r2","ɵɵpureFunction1","isCollapsed","hideFriendsList","friendsListWidth","windowSizeFactor","ɵɵadvance","fileUploadAdapter","localization","userId","groupAdapter","emojisEnabled","linkfyEnabled","showMessageDate","messageDatePipeFormat","hasPagedHistory","NgChat_div_1_Template","_r14","NgChat_div_1_Template_ng_chat_friends_list_onParticipantClicked_1_listener","ctx_r13","onParticipantClickedFromFriendsList","NgChat_div_1_Template_ng_chat_friends_list_onOptionPromptCanceled_1_listener","ctx_r15","onOptionPromptCanceled","NgChat_div_1_Template_ng_chat_friends_list_onOptionPromptConfirmed_1_listener","ctx_r16","onOptionPromptConfirmed","ɵɵtemplate","ctx_r1","theme","searchEnabled","participants","participantsResponse","participantsInteractedWith","windows","currentActiveOption","NgChatOptionsComponent_div_0_a_5_Template","_r5","NgChatOptionsComponent_div_0_a_5_Template_a_click_0_listener","restoredCtx","option_r2","ctx_r4","onOptionClicked","ɵɵtext","ɵɵtextInterpolate1","displayLabel","NgChatOptionsComponent_div_0_Template","options","NgChatFriendsListComponent_div_0_div_4_Template","NgChatFriendsListComponent_div_0_div_4_Template_div_click_0_listener","onFriendsListActionCancelClicked","NgChatFriendsListComponent_div_0_div_4_Template_a_click_3_listener","onFriendsListActionConfirmClicked","NgChatFriendsListComponent_div_0_input_5_Template","_r8","NgChatFriendsListComponent_div_0_input_5_Template_input_ngModelChange_0_listener","ctx_r7","searchInput","searchPlaceholder","NgChatFriendsListComponent_div_0_ul_6_li_1_input_1_Template","_r17","NgChatFriendsListComponent_div_0_ul_6_li_1_input_1_Template_input_change_0_listener","user_r10","onFriendsListCheckboxChange","target","checked","isUserSelectedFromFriendsList","NgChatFriendsListComponent_div_0_ul_6_li_1_div_3_Template","NgChatFriendsListComponent_div_0_ul_6_li_1_img_4_Template","avatar","ɵɵsanitizeUrl","NgChatFriendsListComponent_div_0_ul_6_li_1_span_8_Template","ctx_r14","ɵɵtextInterpolate","unreadMessagesTotalByParticipant","_c3","_c4","a1","a3","a4","NgChatFriendsListComponent_div_0_ul_6_li_1_Template","_r22","NgChatFriendsListComponent_div_0_ul_6_li_1_Template_div_click_2_listener","ctx_r21","onUserClick","validateContext","ɵɵpropertyInterpolate","displayName","chatParticipantStatusDescriptor","status","ɵɵpureFunction4","ChatParticipantStatus","Online","Busy","Away","Offline","length","_c5","NgChatFriendsListComponent_div_0_ul_6_Template","ctx_r3","filteredParticipants","_c6","NgChatFriendsListComponent_div_0_Template","_r24","NgChatFriendsListComponent_div_0_Template_a_click_1_listener","ctx_r23","onChatTitleClicked","title","_c7","_c8","_c9","NgChatWindowComponent_ng_container_0_span_6_Template","unreadMessagesTotal","window","NgChatWindowComponent_ng_container_0_Template","_r4","ɵɵelementContainerStart","NgChatWindowComponent_ng_container_0_Template_div_click_2_listener","onChatWindowClicked","NgChatWindowComponent_ng_container_0_Template_a_click_7_listener","ctx_r5","onCloseChatWindow","ɵɵelementContainerEnd","participant","NgChatWindowComponent_ng_container_1_span_6_Template","NgChatWindowComponent_ng_container_1_div_12_Template","NgChatWindowComponent_ng_container_1_div_13_Template","NgChatWindowComponent_ng_container_1_div_13_Template_a_click_1_listener","loadMessageHistoryPlaceholder","NgChatWindowComponent_ng_container_1_div_14_ng_container_1_div_1_Template","NgChatWindowComponent_ng_container_1_div_14_ng_container_1_img_2_Template","message_r15","ctx_r22","getChatWindowAvatar","NgChatWindowComponent_ng_container_1_div_14_ng_container_1_span_3_Template","ɵɵpipeBind2","NgChatWindowComponent_ng_container_1_div_14_ng_container_1_Template","ctx_r17","participantType","ChatParticipantType","Group","NgChatWindowComponent_ng_container_1_div_14_div_3_span_4_Template","ctx_r27","dateSent","_c10","NgChatWindowComponent_ng_container_1_div_14_div_3_Template","ctx_r18","ɵɵpureFunction2","fromId","message","ɵɵsanitizeHtml","NgChatWindowComponent_ng_container_1_div_14_div_4_span_2_Template","ctx_r30","NgChatWindowComponent_ng_container_1_div_14_div_4_Template","ctx_r19","NgChatWindowComponent_ng_container_1_div_14_div_5_span_6_Template","fileSizeInBytes","_c11","NgChatWindowComponent_ng_container_1_div_14_div_5_Template","_r37","NgChatWindowComponent_ng_container_1_div_14_div_5_Template_a_click_3_listener","ctx_r35","markMessagesAsRead","ctx_r20","ɵɵattribute","downloadUrl","_c12","NgChatWindowComponent_ng_container_1_div_14_Template","i_r16","isAvatarVisible","type","MessageType","Text","Image","File","NgChatWindowComponent_ng_container_1_ng_container_19_a_1_Template","_r43","NgChatWindowComponent_ng_container_1_ng_container_19_a_1_Template_a_click_0_listener","ctx_r42","triggerNativeFileUpload","NgChatWindowComponent_ng_container_1_ng_container_19_div_4_Template","NgChatWindowComponent_ng_container_1_ng_container_19_Template","_r45","NgChatWindowComponent_ng_container_1_ng_container_19_Template_input_change_2_listener","ctx_r44","onFileChosen","isUploadingFile","getUniqueFileUploadInstanceId","_c13","NgChatWindowComponent_ng_container_1_Template","_r47","NgChatWindowComponent_ng_container_1_Template_div_click_2_listener","ctx_r46","NgChatWindowComponent_ng_container_1_Template_a_click_7_listener","ctx_r48","NgChatWindowComponent_ng_container_1_Template_ng_chat_options_activeOptionTrackerChange_9_listener","ctx_r49","activeOptionTrackerChange","NgChatWindowComponent_ng_container_1_Template_input_ngModelChange_16_listener","ctx_r50","newMessage","NgChatWindowComponent_ng_container_1_Template_input_keydown_16_listener","ctx_r51","onChatInputTyped","NgChatWindowComponent_ng_container_1_Template_input_blur_16_listener","ctx_r52","toggleWindowFocus","NgChatWindowComponent_ng_container_1_Template_input_focus_16_listener","ctx_r53","defaultWindowOptions","isLoadingHistory","hasMoreMessages","messages","messagePlaceholder","ChatAdapter","constructor","friendsListChangedHandler","messageReceivedHandler","onFriendsListChanged","onMessageReceived","Message","User","ParticipantResponse","ParticipantMetadata","totalUnreadMessages","Window","hasFocus","historyPage","PagedHistoryChatAdapter","Theme","Guid","newGuid","replace","c","r","Math","random","v","toString","id","chattingTo","p","sort","first","second","join","ScrollDirection","DefaultFileUploadAdapter","_serverEndpointUrl","_http","uploadFile","file","participantId","formData","FormData","append","name","post","NgChat","_httpClient","_isDisabled","maximizeWindowOnNewMessage","pollFriendsList","pollingInterval","historyEnabled","audioEnabled","audioSource","persistWindowsState","browserNotificationsEnabled","browserNotificationIconSource","browserNotificationTitle","historyPageSize","hideFriendsListOnUnsupportedViewport","Light","isViewportOnMobileEnabled","onParticipantClicked","onParticipantChatOpened","onParticipantChatClosed","onMessagesSeen","browserNotificationsBootstrapped","statusDescription","online","busy","away","offline","unsupportedViewport","isBootstrapped","isDisabled","value","clearInterval","pollingIntervalWindowInstance","activateFriendListFetch","localStorageKey","ngOnInit","bootstrapChat","onResize","event","viewPortTotalArea","innerWidth","NormalizeWindows","maxSupportedOpenedWindows","floor","difference","splice","updateWindowsState","initializationException","adapter","initializeTheme","initializeDefaultText","initializeBrowserNotifications","msg","bufferAudioFile","fileUploadUrl","ex","console","error","fetchFriendsList","setInterval","Notification","requestPermission","Custom","Dark","Error","isBootstrapping","listFriends","pipe","response","subscribe","restoreWindowsState","getMessageHistoryByPage","result","forEach","assertMessageType","concat","direction","Bottom","Top","setTimeout","onFetchMessageHistoryLoaded","getMessageHistory","forceMarkMessagesAsSeen","scrollChatWindow","unseenMessages","filter","m","dateSeen","chatWindow","openChatWindow","push","emitMessageSound","emitBrowserNotification","cancelOptionPrompt","isActive","confirmNewGroup","users","newGroup","groupCreated","focusOnNewWindow","invokedByUserClick","openedWindow","find","x","emit","collapseWindow","newChatWindow","unshift","pop","focusOnWindow","callback","windowIndex","indexOf","chatWindows","chatWindowToFocus","toArray","chatWindowInput","nativeElement","focus","currentDate","Date","audioFile","Audio","src","load","play","notification","close","participantIds","w","localStorage","setItem","JSON","stringify","stringfiedParticipantIds","getItem","parse","participantsToRestore","u","getClosestWindow","closeWindow","getChatWindowComponentInstance","targetWindow","messagesSeen","payload","closedWindow","closedViaEscapeKey","closestWindow","triggeringWindow","shiftKeyPressed","currentWindowIndex","windowToFocus","messageSent","sendMessage","option","triggerOpenChatWindow","user","triggerCloseChatWindow","triggerToggleChatWindowVisibility","ɵfac","NgChat_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","NgChat_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostBindings","NgChat_HostBindings","NgChat_resize_HostBindingHandler","ɵɵresolveWindow","inputs","outputs","decls","vars","consts","template","NgChat_Template","dependencies","NgClass","NgForOf","NgIf","NgStyle","NgChatFriendsListComponent","NgChatWindowComponent","SanitizePipe","styles","encapsulation","ctorParameters","propDecorators","args","ngDevMode","ɵsetClassMetadata","selector","None","emojiDictionary","patterns","unicode","EmojifyPipe","transform","pipeEnabled","emoji","pattern","EmojifyPipe_Factory","ɵpipe","ɵɵdefinePipe","pure","LinkfyPipe","replacedText","replacePatternProtocol","replacePatternWWW","replacePatternMailTo","LinkfyPipe_Factory","sanitizer","url","bypassSecurityTrustResourceUrl","SanitizePipe_Factory","GroupMessageDisplayNamePipe","group","userIndex","findIndex","GroupMessageDisplayNamePipe_Factory","NgChatOptionsComponent","action","NgChatOptionsComponent_Factory","activeOptionTracker","NgChatOptionsComponent_Template","MessageCounter","formatUnreadMessagesTotal","String","currentUserId","currentStatus","toLowerCase","selectedUsersFromFriendsList","cleanUpUserSelection","ngOnChanges","changes","currentOptionTriggeredBy","isActivatedUserInSelectedList","item","toUpperCase","includes","metadata","participantResponse","selectedUser","isChecked","clickedUser","NgChatFriendsListComponent_Factory","shouldDisplay","features","ɵɵNgOnChangesFeature","NgChatFriendsListComponent_Template","DefaultValueAccessor","NgControlStatus","NgModel","onChatWindowClosed","onMessageSent","onTabTriggered","onOptionTriggered","onLoadHistoryTriggered","fileUploadersInUse","currentWindow","showOptions","fileUploadInstanceId","chatMessages","element","position","scrollHeight","scrollTop","nativeFileInput","click","unreadMessages","toId","keyCode","trim","preventDefault","shiftKey","clearInUseFileUploader","uploaderInstanceIdIndex","uploadElementRef","files","fileMessage","NgChatWindowComponent_Factory","NgChatWindowComponent_Query","NgChatWindowComponent_Template","NgSwitch","NgSwitchCase","DatePipe","NgChatModule","NgChatModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope","ɵa","ɵb","ɵc","ɵd","ɵe","ɵf","ɵg","ɵh"],"sources":["D:/Source/Repos/Chat/Try1/UI/ClientApp/node_modules/ng-chat/__ivy_ngcc__/fesm2015/ng-chat.js"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { EventEmitter, Component, ViewEncapsulation, Input, Output, ViewChildren, HostListener, Pipe, ViewChild, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { __awaiter } from 'tslib';\nimport { map } from 'rxjs/operators';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/platform-browser';\nimport * as ɵngcc4 from '@angular/forms';\n\nconst _c0 = [\"chatWindow\"];\nfunction NgChat_link_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"link\", 2);\n    ɵngcc0.ɵɵpipe(1, \"sanitize\");\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"href\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r0.customTheme), ɵngcc0.ɵɵsanitizeResourceUrl);\n} }\nconst _c1 = function (a2) { return { \"ng-chat-window\": true, \"primary-outline-color\": true, \"ng-chat-window-collapsed\": a2 }; };\nconst _c2 = function (a0) { return { \"right\": a0 }; };\nfunction NgChat_div_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6)(1, \"ng-chat-window\", 7, 8);\n    ɵngcc0.ɵɵlistener(\"onMessagesSeen\", function NgChat_div_1_div_2_Template_ng_chat_window_onMessagesSeen_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r6.onWindowMessagesSeen($event)); })(\"onMessageSent\", function NgChat_div_1_div_2_Template_ng_chat_window_onMessageSent_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r8.onWindowMessageSent($event)); })(\"onTabTriggered\", function NgChat_div_1_div_2_Template_ng_chat_window_onTabTriggered_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r9.onWindowTabTriggered($event)); })(\"onChatWindowClosed\", function NgChat_div_1_div_2_Template_ng_chat_window_onChatWindowClosed_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r10 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r10.onWindowChatClosed($event)); })(\"onOptionTriggered\", function NgChat_div_1_div_2_Template_ng_chat_window_onOptionTriggered_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r11.onWindowOptionTriggered($event)); })(\"onLoadHistoryTriggered\", function NgChat_div_1_div_2_Template_ng_chat_window_onLoadHistoryTriggered_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r12 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r12.fetchMessageHistory($event)); });\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const window_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(12, _c1, window_r3.isCollapsed))(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(14, _c2, (!ctx_r2.hideFriendsList ? ctx_r2.friendsListWidth : 0) + 20 + ctx_r2.windowSizeFactor * i_r4 + \"px\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"fileUploadAdapter\", ctx_r2.fileUploadAdapter)(\"localization\", ctx_r2.localization)(\"userId\", ctx_r2.userId)(\"window\", window_r3)(\"showOptions\", ctx_r2.groupAdapter)(\"emojisEnabled\", ctx_r2.emojisEnabled)(\"linkfyEnabled\", ctx_r2.linkfyEnabled)(\"showMessageDate\", ctx_r2.showMessageDate)(\"messageDatePipeFormat\", ctx_r2.messageDatePipeFormat)(\"hasPagedHistory\", ctx_r2.hasPagedHistory);\n} }\nfunction NgChat_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3)(1, \"ng-chat-friends-list\", 4);\n    ɵngcc0.ɵɵlistener(\"onParticipantClicked\", function NgChat_div_1_Template_ng_chat_friends_list_onParticipantClicked_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r13.onParticipantClickedFromFriendsList($event)); })(\"onOptionPromptCanceled\", function NgChat_div_1_Template_ng_chat_friends_list_onOptionPromptCanceled_1_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r15.onOptionPromptCanceled()); })(\"onOptionPromptConfirmed\", function NgChat_div_1_Template_ng_chat_friends_list_onOptionPromptConfirmed_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r16.onOptionPromptConfirmed($event)); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(2, NgChat_div_1_div_2_Template, 3, 16, \"div\", 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1.theme);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"localization\", ctx_r1.localization)(\"shouldDisplay\", !ctx_r1.hideFriendsList)(\"userId\", ctx_r1.userId)(\"isCollapsed\", ctx_r1.isCollapsed)(\"searchEnabled\", ctx_r1.searchEnabled)(\"participants\", ctx_r1.participants)(\"participantsResponse\", ctx_r1.participantsResponse)(\"participantsInteractedWith\", ctx_r1.participantsInteractedWith)(\"windows\", ctx_r1.windows)(\"currentActiveOption\", ctx_r1.currentActiveOption);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.windows);\n} }\nfunction NgChatOptionsComponent_div_0_a_5_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatOptionsComponent_div_0_a_5_Template_a_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const option_r2 = restoredCtx.$implicit; const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r4.onOptionClicked(option_r2)); });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"primary-text\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", option_r2.displayLabel, \" \");\n} }\nfunction NgChatOptionsComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1)(1, \"button\", 2)(2, \"span\", 3);\n    ɵngcc0.ɵɵtext(3, \"...\");\n    ɵngcc0.ɵɵelementEnd()();\n    ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(5, NgChatOptionsComponent_div_0_a_5_Template, 2, 2, \"a\", 5);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.options);\n} }\nfunction NgChatFriendsListComponent_div_0_div_4_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_div_4_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r4.onFriendsListActionCancelClicked()); });\n    ɵngcc0.ɵɵelementStart(1, \"a\", 7);\n    ɵngcc0.ɵɵelement(2, \"i\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"a\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_div_4_Template_a_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r6.onFriendsListActionConfirmClicked()); });\n    ɵngcc0.ɵɵelement(4, \"i\", 10);\n    ɵngcc0.ɵɵelementEnd()();\n} }\nfunction NgChatFriendsListComponent_div_0_input_5_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 11);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function NgChatFriendsListComponent_div_0_input_5_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r7.searchInput = $event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"placeholder\", ctx_r2.localization.searchPlaceholder)(\"ngModel\", ctx_r2.searchInput);\n} }\nfunction NgChatFriendsListComponent_div_0_ul_6_li_1_input_1_Template(rf, ctx) { if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 21);\n    ɵngcc0.ɵɵlistener(\"change\", function NgChatFriendsListComponent_div_0_ul_6_li_1_input_1_Template_input_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const user_r10 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r15 = ɵngcc0.ɵɵnextContext(3); return ɵngcc0.ɵɵresetView(ctx_r15.onFriendsListCheckboxChange(user_r10, $event.target.checked)); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const user_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r11 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r11.isUserSelectedFromFriendsList(user_r10));\n} }\nfunction NgChatFriendsListComponent_div_0_ul_6_li_1_div_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 22);\n    ɵngcc0.ɵɵelement(1, \"i\", 23);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NgChatFriendsListComponent_div_0_ul_6_li_1_img_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"img\", 24);\n    ɵngcc0.ɵɵpipe(1, \"sanitize\");\n} if (rf & 2) {\n    const user_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"src\", ɵngcc0.ɵɵpipeBind1(1, 1, user_r10.avatar), ɵngcc0.ɵɵsanitizeUrl);\n} }\nfunction NgChatFriendsListComponent_div_0_ul_6_li_1_span_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 25);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const user_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r14.unreadMessagesTotalByParticipant(user_r10));\n} }\nconst _c3 = function (a0) { return { \"ng-chat-friends-list-selectable-offset\": a0, \"ng-chat-friends-list-container\": true }; };\nconst _c4 = function (a1, a2, a3, a4) { return { \"ng-chat-participant-status\": true, \"online\": a1, \"busy\": a2, \"away\": a3, \"offline\": a4 }; };\nfunction NgChatFriendsListComponent_div_0_ul_6_li_1_Template(rf, ctx) { if (rf & 1) {\n    const _r22 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵtemplate(1, NgChatFriendsListComponent_div_0_ul_6_li_1_input_1_Template, 1, 1, \"input\", 14);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 15);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_ul_6_li_1_Template_div_click_2_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r22); const user_r10 = restoredCtx.$implicit; const ctx_r21 = ɵngcc0.ɵɵnextContext(3); return ɵngcc0.ɵɵresetView(ctx_r21.onUserClick(user_r10)); });\n    ɵngcc0.ɵɵtemplate(3, NgChatFriendsListComponent_div_0_ul_6_li_1_div_3_Template, 2, 0, \"div\", 16);\n    ɵngcc0.ɵɵtemplate(4, NgChatFriendsListComponent_div_0_ul_6_li_1_img_4_Template, 2, 3, \"img\", 17);\n    ɵngcc0.ɵɵelementStart(5, \"strong\", 18);\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(7, \"span\", 19);\n    ɵngcc0.ɵɵtemplate(8, NgChatFriendsListComponent_div_0_ul_6_li_1_span_8_Template, 2, 1, \"span\", 20);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const user_r10 = ctx.$implicit;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.currentActiveOption && ctx_r9.currentActiveOption.validateContext(user_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(9, _c3, ctx_r9.currentActiveOption));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !user_r10.avatar);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", user_r10.avatar);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", user_r10.displayName);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(user_r10.displayName);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r9.chatParticipantStatusDescriptor(user_r10.status, ctx_r9.localization));\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(11, _c4, user_r10.status == ctx_r9.ChatParticipantStatus.Online, user_r10.status == ctx_r9.ChatParticipantStatus.Busy, user_r10.status == ctx_r9.ChatParticipantStatus.Away, user_r10.status == ctx_r9.ChatParticipantStatus.Offline));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.unreadMessagesTotalByParticipant(user_r10).length > 0);\n} }\nconst _c5 = function (a0) { return { \"offset-search\": a0 }; };\nfunction NgChatFriendsListComponent_div_0_ul_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 12);\n    ɵngcc0.ɵɵtemplate(1, NgChatFriendsListComponent_div_0_ul_6_li_1_Template, 9, 16, \"li\", 13);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(2, _c5, ctx_r3.searchEnabled));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.filteredParticipants);\n} }\nconst _c6 = function (a2) { return { \"primary-outline-color\": true, \"primary-background\": true, \"ng-chat-people-collapsed\": a2 }; };\nfunction NgChatFriendsListComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r24 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1)(1, \"a\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_Template_a_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r24); const ctx_r23 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r23.onChatTitleClicked()); });\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd()();\n    ɵngcc0.ɵɵtemplate(4, NgChatFriendsListComponent_div_0_div_4_Template, 5, 0, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(5, NgChatFriendsListComponent_div_0_input_5_Template, 1, 2, \"input\", 4);\n    ɵngcc0.ɵɵtemplate(6, NgChatFriendsListComponent_div_0_ul_6_Template, 2, 4, \"ul\", 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c6, ctx_r0.isCollapsed));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.localization.title, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.currentActiveOption);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.searchEnabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.isCollapsed);\n} }\nconst _c7 = [\"chatMessages\"];\nconst _c8 = [\"nativeFileInput\"];\nconst _c9 = [\"chatWindowInput\"];\nfunction NgChatWindowComponent_ng_container_0_span_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.unreadMessagesTotal(ctx_r2.window));\n} }\nfunction NgChatWindowComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_0_Template_div_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r3.onChatWindowClicked(ctx_r3.window)); });\n    ɵngcc0.ɵɵelementStart(3, \"strong\", 3);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(5, \"span\", 4);\n    ɵngcc0.ɵɵtemplate(6, NgChatWindowComponent_ng_container_0_span_6_Template, 2, 1, \"span\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(7, \"a\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_0_Template_a_click_7_listener() { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r5.onCloseChatWindow()); });\n    ɵngcc0.ɵɵtext(8, \"X\");\n    ɵngcc0.ɵɵelementEnd()();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r0.window.participant.displayName);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.window.participant.displayName, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r0.chatParticipantStatusDescriptor(ctx_r0.window.participant.status, ctx_r0.localization));\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(5, _c4, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Online, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Busy, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Away, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Offline));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.unreadMessagesTotal(ctx_r0.window).length > 0);\n} }\nfunction NgChatWindowComponent_ng_container_1_span_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6.unreadMessagesTotal(ctx_r6.window));\n} }\nfunction NgChatWindowComponent_ng_container_1_div_12_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18);\n    ɵngcc0.ɵɵtext(2, \"Loading history...\");\n    ɵngcc0.ɵɵelementEnd()();\n} }\nfunction NgChatWindowComponent_ng_container_1_div_13_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19)(1, \"a\", 20);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_1_div_13_Template_a_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r13.fetchMessageHistory(ctx_r13.window)); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r9.localization.loadMessageHistoryPlaceholder);\n} }\nfunction NgChatWindowComponent_ng_container_1_div_14_ng_container_1_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 27);\n    ɵngcc0.ɵɵelement(1, \"i\", 28);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NgChatWindowComponent_ng_container_1_div_14_ng_container_1_img_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"img\", 29);\n    ɵngcc0.ɵɵpipe(1, \"sanitize\");\n} if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"src\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r22.getChatWindowAvatar(ctx_r22.window.participant, message_r15)), ɵngcc0.ɵɵsanitizeUrl);\n} }\nfunction NgChatWindowComponent_ng_container_1_div_14_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 30);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"groupMessageDisplayName\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r23 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(2, 1, ctx_r23.window.participant, message_r15));\n} }\nfunction NgChatWindowComponent_ng_container_1_div_14_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgChatWindowComponent_ng_container_1_div_14_ng_container_1_div_1_Template, 2, 0, \"div\", 24);\n    ɵngcc0.ɵɵtemplate(2, NgChatWindowComponent_ng_container_1_div_14_ng_container_1_img_2_Template, 2, 3, \"img\", 25);\n    ɵngcc0.ɵɵtemplate(3, NgChatWindowComponent_ng_container_1_div_14_ng_container_1_span_3_Template, 3, 4, \"span\", 26);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r17.getChatWindowAvatar(ctx_r17.window.participant, message_r15));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r17.getChatWindowAvatar(ctx_r17.window.participant, message_r15));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r17.window.participant.participantType == ctx_r17.ChatParticipantType.Group);\n} }\nfunction NgChatWindowComponent_ng_container_1_div_14_div_3_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 33);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"date\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r27 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(2, 1, message_r15.dateSent, ctx_r27.messageDatePipeFormat));\n} }\nconst _c10 = function (a0, a1) { return { \"sent-chat-message-container\": a0, \"received-chat-message-container\": a1 }; };\nfunction NgChatWindowComponent_ng_container_1_div_14_div_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21);\n    ɵngcc0.ɵɵelement(1, \"span\", 31);\n    ɵngcc0.ɵɵpipe(2, \"linkfy\");\n    ɵngcc0.ɵɵpipe(3, \"emojify\");\n    ɵngcc0.ɵɵtemplate(4, NgChatWindowComponent_ng_container_1_div_14_div_3_span_4_Template, 3, 4, \"span\", 32);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r18 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(9, _c10, message_r15.fromId == ctx_r18.userId, message_r15.fromId != ctx_r18.userId));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHtml\", ɵngcc0.ɵɵpipeBind2(2, 3, ɵngcc0.ɵɵpipeBind2(3, 6, message_r15.message, ctx_r18.emojisEnabled), ctx_r18.linkfyEnabled), ɵngcc0.ɵɵsanitizeHtml);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r18.showMessageDate && message_r15.dateSent);\n} }\nfunction NgChatWindowComponent_ng_container_1_div_14_div_4_span_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 33);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"date\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r30 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(2, 1, message_r15.dateSent, ctx_r30.messageDatePipeFormat));\n} }\nfunction NgChatWindowComponent_ng_container_1_div_14_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21);\n    ɵngcc0.ɵɵelement(1, \"img\", 34);\n    ɵngcc0.ɵɵtemplate(2, NgChatWindowComponent_ng_container_1_div_14_div_4_span_2_Template, 3, 4, \"span\", 32);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(3, _c10, message_r15.fromId == ctx_r19.userId, message_r15.fromId != ctx_r19.userId));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"src\", message_r15.message, ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r19.showMessageDate && message_r15.dateSent);\n} }\nfunction NgChatWindowComponent_ng_container_1_div_14_div_5_span_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 40);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", message_r15.fileSizeInBytes, \" Bytes\");\n} }\nconst _c11 = function (a1) { return { \"file-message-container\": true, \"received\": a1 }; };\nfunction NgChatWindowComponent_ng_container_1_div_14_div_5_Template(rf, ctx) { if (rf & 1) {\n    const _r37 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21)(1, \"div\", 35);\n    ɵngcc0.ɵɵelement(2, \"i\", 36);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"a\", 37);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_1_div_14_div_5_Template_a_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r37); const message_r15 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r35 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r35.markMessagesAsRead([message_r15])); });\n    ɵngcc0.ɵɵelementStart(4, \"span\", 38);\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(6, NgChatWindowComponent_ng_container_1_div_14_div_5_span_6_Template, 2, 1, \"span\", 39);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const message_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c11, message_r15.fromId != ctx_r20.userId));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵattribute(\"href\", message_r15.downloadUrl, ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"title\", message_r15.message);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(message_r15.message);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", message_r15.fileSizeInBytes);\n} }\nconst _c12 = function (a1) { return { \"ng-chat-message\": true, \"ng-chat-message-received\": a1 }; };\nfunction NgChatWindowComponent_ng_container_1_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21);\n    ɵngcc0.ɵɵtemplate(1, NgChatWindowComponent_ng_container_1_div_14_ng_container_1_Template, 4, 3, \"ng-container\", 0);\n    ɵngcc0.ɵɵelementContainerStart(2, 22);\n    ɵngcc0.ɵɵtemplate(3, NgChatWindowComponent_ng_container_1_div_14_div_3_Template, 5, 12, \"div\", 23);\n    ɵngcc0.ɵɵtemplate(4, NgChatWindowComponent_ng_container_1_div_14_div_4_Template, 3, 6, \"div\", 23);\n    ɵngcc0.ɵɵtemplate(5, NgChatWindowComponent_ng_container_1_div_14_div_5_Template, 7, 7, \"div\", 23);\n    ɵngcc0.ɵɵelementContainerEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const message_r15 = ctx.$implicit;\n    const i_r16 = ctx.index;\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(6, _c12, message_r15.fromId != ctx_r10.userId));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r10.isAvatarVisible(ctx_r10.window, message_r15, i_r16));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", message_r15.type);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", ctx_r10.MessageType.Text);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", ctx_r10.MessageType.Image);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", ctx_r10.MessageType.File);\n} }\nfunction NgChatWindowComponent_ng_container_1_ng_container_19_a_1_Template(rf, ctx) { if (rf & 1) {\n    const _r43 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 45);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_1_ng_container_19_a_1_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r43); const ctx_r42 = ɵngcc0.ɵɵnextContext(3); return ɵngcc0.ɵɵresetView(ctx_r42.triggerNativeFileUpload(ctx_r42.window)); });\n    ɵngcc0.ɵɵelement(1, \"i\", 46);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NgChatWindowComponent_ng_container_1_ng_container_19_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 18);\n} }\nfunction NgChatWindowComponent_ng_container_1_ng_container_19_Template(rf, ctx) { if (rf & 1) {\n    const _r45 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgChatWindowComponent_ng_container_1_ng_container_19_a_1_Template, 2, 0, \"a\", 41);\n    ɵngcc0.ɵɵelementStart(2, \"input\", 42, 43);\n    ɵngcc0.ɵɵlistener(\"change\", function NgChatWindowComponent_ng_container_1_ng_container_19_Template_input_change_2_listener() { ɵngcc0.ɵɵrestoreView(_r45); const ctx_r44 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r44.onFileChosen(ctx_r44.window)); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, NgChatWindowComponent_ng_container_1_ng_container_19_div_4_Template, 1, 0, \"div\", 44);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r12.isUploadingFile(ctx_r12.window));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r12.getUniqueFileUploadInstanceId(ctx_r12.window));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r12.isUploadingFile(ctx_r12.window));\n} }\nconst _c13 = function (a1) { return { \"chat-window-input\": true, \"has-side-action\": a1 }; };\nfunction NgChatWindowComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    const _r47 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_1_Template_div_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r46 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r46.onChatWindowClicked(ctx_r46.window)); });\n    ɵngcc0.ɵɵelementStart(3, \"strong\", 3);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(5, \"span\", 4);\n    ɵngcc0.ɵɵtemplate(6, NgChatWindowComponent_ng_container_1_span_6_Template, 2, 1, \"span\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(7, \"a\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_1_Template_a_click_7_listener() { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r48 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r48.onCloseChatWindow()); });\n    ɵngcc0.ɵɵtext(8, \"X\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(9, \"ng-chat-options\", 8);\n    ɵngcc0.ɵɵlistener(\"activeOptionTrackerChange\", function NgChatWindowComponent_ng_container_1_Template_ng_chat_options_activeOptionTrackerChange_9_listener($event) { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r49 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r49.activeOptionTrackerChange($event)); });\n    ɵngcc0.ɵɵelementEnd()();\n    ɵngcc0.ɵɵelementStart(10, \"div\", 9, 10);\n    ɵngcc0.ɵɵtemplate(12, NgChatWindowComponent_ng_container_1_div_12_Template, 3, 0, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(13, NgChatWindowComponent_ng_container_1_div_13_Template, 3, 1, \"div\", 12);\n    ɵngcc0.ɵɵtemplate(14, NgChatWindowComponent_ng_container_1_div_14_Template, 6, 8, \"div\", 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(15, \"div\", 14)(16, \"input\", 15, 16);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function NgChatWindowComponent_ng_container_1_Template_input_ngModelChange_16_listener($event) { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r50 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r50.window.newMessage = $event); })(\"keydown\", function NgChatWindowComponent_ng_container_1_Template_input_keydown_16_listener($event) { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r51 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r51.onChatInputTyped($event, ctx_r51.window)); })(\"blur\", function NgChatWindowComponent_ng_container_1_Template_input_blur_16_listener() { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r52 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r52.toggleWindowFocus(ctx_r52.window)); })(\"focus\", function NgChatWindowComponent_ng_container_1_Template_input_focus_16_listener() { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r53 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r53.toggleWindowFocus(ctx_r53.window)); });\n    ɵngcc0.ɵɵpipe(18, \"emojify\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(19, NgChatWindowComponent_ng_container_1_ng_container_19_Template, 5, 3, \"ng-container\", 0);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r1.window.participant.displayName);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.window.participant.displayName, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r1.chatParticipantStatusDescriptor(ctx_r1.window.participant.status, ctx_r1.localization));\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(17, _c4, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Online, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Busy, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Away, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Offline));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.unreadMessagesTotal(ctx_r1.window).length > 0);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"ng-chat-options-container\")(\"options\", ctx_r1.defaultWindowOptions(ctx_r1.window));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.window.isLoadingHistory);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.hasPagedHistory && ctx_r1.window.hasMoreMessages && !ctx_r1.window.isLoadingHistory);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.window.messages);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ɵngcc0.ɵɵpipeBind2(18, 14, ctx_r1.window.newMessage, ctx_r1.emojisEnabled))(\"placeholder\", ctx_r1.localization.messagePlaceholder)(\"ngClass\", ɵngcc0.ɵɵpureFunction1(22, _c13, ctx_r1.fileUploadAdapter));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.fileUploadAdapter);\n} }\nclass ChatAdapter {\r\n    constructor() {\r\n        // ### Abstract adapter methods ###\r\n        // Event handlers\r\n        /** @internal */\r\n        this.friendsListChangedHandler = (participantsResponse) => { };\r\n        /** @internal */\r\n        this.messageReceivedHandler = (participant, message) => { };\r\n    }\r\n    // ### Adapter/Chat income/ingress events ###\r\n    onFriendsListChanged(participantsResponse) {\r\n        this.friendsListChangedHandler(participantsResponse);\r\n    }\r\n    onMessageReceived(participant, message) {\r\n        this.messageReceivedHandler(participant, message);\r\n    }\r\n}\n\nvar MessageType;\r\n(function (MessageType) {\r\n    MessageType[MessageType[\"Text\"] = 1] = \"Text\";\r\n    MessageType[MessageType[\"File\"] = 2] = \"File\";\r\n    MessageType[MessageType[\"Image\"] = 3] = \"Image\";\r\n})(MessageType || (MessageType = {}));\n\nclass Message {\r\n    constructor() {\r\n        this.type = MessageType.Text;\r\n    }\r\n}\n\nvar ChatParticipantStatus;\r\n(function (ChatParticipantStatus) {\r\n    ChatParticipantStatus[ChatParticipantStatus[\"Online\"] = 0] = \"Online\";\r\n    ChatParticipantStatus[ChatParticipantStatus[\"Busy\"] = 1] = \"Busy\";\r\n    ChatParticipantStatus[ChatParticipantStatus[\"Away\"] = 2] = \"Away\";\r\n    ChatParticipantStatus[ChatParticipantStatus[\"Offline\"] = 3] = \"Offline\";\r\n})(ChatParticipantStatus || (ChatParticipantStatus = {}));\n\nvar ChatParticipantType;\r\n(function (ChatParticipantType) {\r\n    ChatParticipantType[ChatParticipantType[\"User\"] = 0] = \"User\";\r\n    ChatParticipantType[ChatParticipantType[\"Group\"] = 1] = \"Group\";\r\n})(ChatParticipantType || (ChatParticipantType = {}));\n\nclass User {\r\n    constructor() {\r\n        this.participantType = ChatParticipantType.User;\r\n    }\r\n}\n\nclass ParticipantResponse {\r\n}\n\nclass ParticipantMetadata {\r\n    constructor() {\r\n        this.totalUnreadMessages = 0;\r\n    }\r\n}\n\nclass Window {\r\n    constructor(participant, isLoadingHistory, isCollapsed) {\r\n        this.messages = [];\r\n        this.newMessage = \"\";\r\n        // UI Behavior properties\r\n        this.isCollapsed = false;\r\n        this.isLoadingHistory = false;\r\n        this.hasFocus = false;\r\n        this.hasMoreMessages = true;\r\n        this.historyPage = 0;\r\n        this.participant = participant;\r\n        this.messages = [];\r\n        this.isLoadingHistory = isLoadingHistory;\r\n        this.hasFocus = false; // This will be triggered when the 'newMessage' input gets the current focus\r\n        this.isCollapsed = isCollapsed;\r\n        this.hasMoreMessages = false;\r\n        this.historyPage = 0;\r\n    }\r\n}\n\n/**\r\n * @description Chat Adapter decorator class that adds pagination to load the history of messagesr.\r\n * You will need an existing @see ChatAdapter implementation\r\n */\r\nclass PagedHistoryChatAdapter extends ChatAdapter {\r\n}\n\nvar Theme;\r\n(function (Theme) {\r\n    Theme[\"Custom\"] = \"custom-theme\";\r\n    Theme[\"Light\"] = \"light-theme\";\r\n    Theme[\"Dark\"] = \"dark-theme\";\r\n})(Theme || (Theme = {}));\n\n// Poached from: https://github.com/Steve-Fenton/TypeScriptUtilities\r\n// @dynamic\r\nclass Guid {\r\n    static newGuid() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n}\n\nclass Group {\r\n    constructor(participants) {\r\n        this.id = Guid.newGuid();\r\n        this.participantType = ChatParticipantType.Group;\r\n        this.chattingTo = participants;\r\n        this.status = ChatParticipantStatus.Online;\r\n        // TODO: Add some customization for this in future releases\r\n        this.displayName = participants.map((p) => p.displayName).sort((first, second) => second > first ? -1 : 1).join(\", \");\r\n    }\r\n}\n\nvar ScrollDirection;\r\n(function (ScrollDirection) {\r\n    ScrollDirection[ScrollDirection[\"Top\"] = 0] = \"Top\";\r\n    ScrollDirection[ScrollDirection[\"Bottom\"] = 1] = \"Bottom\";\r\n})(ScrollDirection || (ScrollDirection = {}));\n\nclass DefaultFileUploadAdapter {\r\n    /**\r\n     * @summary Basic file upload adapter implementation for HTTP request form file consumption\r\n     * @param _serverEndpointUrl The API endpoint full qualified address that will receive a form file to process and return the metadata.\r\n     */\r\n    constructor(_serverEndpointUrl, _http) {\r\n        this._serverEndpointUrl = _serverEndpointUrl;\r\n        this._http = _http;\r\n    }\r\n    uploadFile(file, participantId) {\r\n        const formData = new FormData();\r\n        //formData.append('ng-chat-sender-userid', currentUserId);\r\n        formData.append('ng-chat-participant-id', participantId);\r\n        formData.append('file', file, file.name);\r\n        return this._http.post(this._serverEndpointUrl, formData);\r\n        // TODO: Leaving this if we want to track upload progress in detail in the future. Might need a different Subject generic type wrapper\r\n        // const fileRequest = new HttpRequest('POST', this._serverEndpointUrl, formData, {\r\n        //     reportProgress: true\r\n        // });\r\n        // const uploadProgress = new Subject<number>();\r\n        // const uploadStatus = uploadProgress.asObservable();\r\n        //const responsePromise = new Subject<Message>();\r\n        // this._http\r\n        //     .request(fileRequest)\r\n        //     .subscribe(event => {\r\n        //         // if (event.type == HttpEventType.UploadProgress)\r\n        //         // {\r\n        //         //     const percentDone = Math.round(100 * event.loaded / event.total);\r\n        //         //     uploadProgress.next(percentDone);\r\n        //         // }\r\n        //         // else if (event instanceof HttpResponse)\r\n        //         // {\r\n        //         //     uploadProgress.complete();\r\n        //         // }\r\n        //     });\r\n    }\r\n}\n\nclass NgChat {\r\n    constructor(_httpClient) {\r\n        this._httpClient = _httpClient;\r\n        // Exposes enums for the ng-template\r\n        this.ChatParticipantType = ChatParticipantType;\r\n        this.ChatParticipantStatus = ChatParticipantStatus;\r\n        this.MessageType = MessageType;\r\n        this._isDisabled = false;\r\n        this.isCollapsed = false;\r\n        this.maximizeWindowOnNewMessage = true;\r\n        this.pollFriendsList = false;\r\n        this.pollingInterval = 5000;\r\n        this.historyEnabled = true;\r\n        this.emojisEnabled = true;\r\n        this.linkfyEnabled = true;\r\n        this.audioEnabled = true;\r\n        this.searchEnabled = true;\r\n        this.audioSource = 'https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.wav';\r\n        this.persistWindowsState = true;\r\n        this.title = \"Friends\";\r\n        this.messagePlaceholder = \"Type a message\";\r\n        this.searchPlaceholder = \"Search\";\r\n        this.browserNotificationsEnabled = true;\r\n        this.browserNotificationIconSource = 'https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.png';\r\n        this.browserNotificationTitle = \"New message from\";\r\n        this.historyPageSize = 10;\r\n        this.hideFriendsList = false;\r\n        this.hideFriendsListOnUnsupportedViewport = true;\r\n        this.theme = Theme.Light;\r\n        this.messageDatePipeFormat = \"short\";\r\n        this.showMessageDate = true;\r\n        this.isViewportOnMobileEnabled = false;\r\n        this.onParticipantClicked = new EventEmitter();\r\n        this.onParticipantChatOpened = new EventEmitter();\r\n        this.onParticipantChatClosed = new EventEmitter();\r\n        this.onMessagesSeen = new EventEmitter();\r\n        this.browserNotificationsBootstrapped = false;\r\n        this.hasPagedHistory = false;\r\n        // Don't want to add this as a setting to simplify usage. Previous placeholder and title settings available to be used, or use full Localization object.\r\n        this.statusDescription = {\r\n            online: 'Online',\r\n            busy: 'Busy',\r\n            away: 'Away',\r\n            offline: 'Offline'\r\n        };\r\n        this.participantsInteractedWith = [];\r\n        // Defines the size of each opened window to calculate how many windows can be opened on the viewport at the same time.\r\n        this.windowSizeFactor = 320;\r\n        // Total width size of the friends list section\r\n        this.friendsListWidth = 262;\r\n        // Set to true if there is no space to display at least one chat window and 'hideFriendsListOnUnsupportedViewport' is true\r\n        this.unsupportedViewport = false;\r\n        this.windows = [];\r\n        this.isBootstrapped = false;\r\n    }\r\n    get isDisabled() {\r\n        return this._isDisabled;\r\n    }\r\n    set isDisabled(value) {\r\n        this._isDisabled = value;\r\n        if (value) {\r\n            // To address issue https://github.com/rpaschoal/ng-chat/issues/120\r\n            window.clearInterval(this.pollingIntervalWindowInstance);\r\n        }\r\n        else {\r\n            this.activateFriendListFetch();\r\n        }\r\n    }\r\n    get localStorageKey() {\r\n        return `ng-chat-users-${this.userId}`; // Appending the user id so the state is unique per user in a computer.\r\n    }\r\n    ;\r\n    ngOnInit() {\r\n        this.bootstrapChat();\r\n    }\r\n    onResize(event) {\r\n        this.viewPortTotalArea = event.target.innerWidth;\r\n        this.NormalizeWindows();\r\n    }\r\n    // Checks if there are more opened windows than the view port can display\r\n    NormalizeWindows() {\r\n        const maxSupportedOpenedWindows = Math.floor((this.viewPortTotalArea - (!this.hideFriendsList ? this.friendsListWidth : 0)) / this.windowSizeFactor);\r\n        const difference = this.windows.length - maxSupportedOpenedWindows;\r\n        if (difference >= 0) {\r\n            this.windows.splice(this.windows.length - difference);\r\n        }\r\n        this.updateWindowsState(this.windows);\r\n        // Viewport should have space for at least one chat window but should show in mobile if option is enabled.\r\n        this.unsupportedViewport = this.isViewportOnMobileEnabled ? false : this.hideFriendsListOnUnsupportedViewport && maxSupportedOpenedWindows < 1;\r\n    }\r\n    // Initializes the chat plugin and the messaging adapter\r\n    bootstrapChat() {\r\n        let initializationException = null;\r\n        if (this.adapter != null && this.userId != null) {\r\n            try {\r\n                this.viewPortTotalArea = window.innerWidth;\r\n                this.initializeTheme();\r\n                this.initializeDefaultText();\r\n                this.initializeBrowserNotifications();\r\n                // Binding event listeners\r\n                this.adapter.messageReceivedHandler = (participant, msg) => this.onMessageReceived(participant, msg);\r\n                this.adapter.friendsListChangedHandler = (participantsResponse) => this.onFriendsListChanged(participantsResponse);\r\n                this.activateFriendListFetch();\r\n                this.bufferAudioFile();\r\n                this.hasPagedHistory = this.adapter instanceof PagedHistoryChatAdapter;\r\n                if (this.fileUploadUrl && this.fileUploadUrl !== \"\") {\r\n                    this.fileUploadAdapter = new DefaultFileUploadAdapter(this.fileUploadUrl, this._httpClient);\r\n                }\r\n                this.NormalizeWindows();\r\n                this.isBootstrapped = true;\r\n            }\r\n            catch (ex) {\r\n                initializationException = ex;\r\n            }\r\n        }\r\n        if (!this.isBootstrapped) {\r\n            console.error(\"ng-chat component couldn't be bootstrapped.\");\r\n            if (this.userId == null) {\r\n                console.error(\"ng-chat can't be initialized without an user id. Please make sure you've provided an userId as a parameter of the ng-chat component.\");\r\n            }\r\n            if (this.adapter == null) {\r\n                console.error(\"ng-chat can't be bootstrapped without a ChatAdapter. Please make sure you've provided a ChatAdapter implementation as a parameter of the ng-chat component.\");\r\n            }\r\n            if (initializationException) {\r\n                console.error(`An exception has occurred while initializing ng-chat. Details: ${initializationException.message}`);\r\n                console.error(initializationException);\r\n            }\r\n        }\r\n    }\r\n    activateFriendListFetch() {\r\n        if (this.adapter) {\r\n            // Loading current users list\r\n            if (this.pollFriendsList) {\r\n                // Setting a long poll interval to update the friends list\r\n                this.fetchFriendsList(true);\r\n                this.pollingIntervalWindowInstance = window.setInterval(() => this.fetchFriendsList(false), this.pollingInterval);\r\n            }\r\n            else {\r\n                // Since polling was disabled, a friends list update mechanism will have to be implemented in the ChatAdapter.\r\n                this.fetchFriendsList(true);\r\n            }\r\n        }\r\n    }\r\n    // Initializes browser notifications\r\n    initializeBrowserNotifications() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.browserNotificationsEnabled && (\"Notification\" in window)) {\r\n                if ((yield Notification.requestPermission()) === \"granted\") {\r\n                    this.browserNotificationsBootstrapped = true;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    // Initializes default text\r\n    initializeDefaultText() {\r\n        if (!this.localization) {\r\n            this.localization = {\r\n                messagePlaceholder: this.messagePlaceholder,\r\n                searchPlaceholder: this.searchPlaceholder,\r\n                title: this.title,\r\n                statusDescription: this.statusDescription,\r\n                browserNotificationTitle: this.browserNotificationTitle,\r\n                loadMessageHistoryPlaceholder: \"Load older messages\"\r\n            };\r\n        }\r\n    }\r\n    initializeTheme() {\r\n        if (this.customTheme) {\r\n            this.theme = Theme.Custom;\r\n        }\r\n        else if (this.theme != Theme.Light && this.theme != Theme.Dark) {\r\n            // TODO: Use es2017 in future with Object.values(Theme).includes(this.theme) to do this check\r\n            throw new Error(`Invalid theme configuration for ng-chat. \"${this.theme}\" is not a valid theme value.`);\r\n        }\r\n    }\r\n    // Sends a request to load the friends list\r\n    fetchFriendsList(isBootstrapping) {\r\n        this.adapter.listFriends()\r\n            .pipe(map((participantsResponse) => {\r\n            this.participantsResponse = participantsResponse;\r\n            this.participants = participantsResponse.map((response) => {\r\n                return response.participant;\r\n            });\r\n        })).subscribe(() => {\r\n            if (isBootstrapping) {\r\n                this.restoreWindowsState();\r\n            }\r\n        });\r\n    }\r\n    fetchMessageHistory(window) {\r\n        // Not ideal but will keep this until we decide if we are shipping pagination with the default adapter\r\n        if (this.adapter instanceof PagedHistoryChatAdapter) {\r\n            window.isLoadingHistory = true;\r\n            this.adapter.getMessageHistoryByPage(window.participant.id, this.historyPageSize, ++window.historyPage)\r\n                .pipe(map((result) => {\r\n                result.forEach((message) => this.assertMessageType(message));\r\n                window.messages = result.concat(window.messages);\r\n                window.isLoadingHistory = false;\r\n                const direction = (window.historyPage == 1) ? ScrollDirection.Bottom : ScrollDirection.Top;\r\n                window.hasMoreMessages = result.length == this.historyPageSize;\r\n                setTimeout(() => this.onFetchMessageHistoryLoaded(result, window, direction, true));\r\n            })).subscribe();\r\n        }\r\n        else {\r\n            this.adapter.getMessageHistory(window.participant.id)\r\n                .pipe(map((result) => {\r\n                result.forEach((message) => this.assertMessageType(message));\r\n                window.messages = result.concat(window.messages);\r\n                window.isLoadingHistory = false;\r\n                setTimeout(() => this.onFetchMessageHistoryLoaded(result, window, ScrollDirection.Bottom));\r\n            })).subscribe();\r\n        }\r\n    }\r\n    onFetchMessageHistoryLoaded(messages, window, direction, forceMarkMessagesAsSeen = false) {\r\n        this.scrollChatWindow(window, direction);\r\n        if (window.hasFocus || forceMarkMessagesAsSeen) {\r\n            const unseenMessages = messages.filter(m => !m.dateSeen);\r\n            this.markMessagesAsRead(unseenMessages);\r\n        }\r\n    }\r\n    // Updates the friends list via the event handler\r\n    onFriendsListChanged(participantsResponse) {\r\n        if (participantsResponse) {\r\n            this.participantsResponse = participantsResponse;\r\n            this.participants = participantsResponse.map((response) => {\r\n                return response.participant;\r\n            });\r\n            this.participantsInteractedWith = [];\r\n        }\r\n    }\r\n    // Handles received messages by the adapter\r\n    onMessageReceived(participant, message) {\r\n        if (participant && message) {\r\n            const chatWindow = this.openChatWindow(participant);\r\n            this.assertMessageType(message);\r\n            if (!chatWindow[1] || !this.historyEnabled) {\r\n                chatWindow[0].messages.push(message);\r\n                this.scrollChatWindow(chatWindow[0], ScrollDirection.Bottom);\r\n                if (chatWindow[0].hasFocus) {\r\n                    this.markMessagesAsRead([message]);\r\n                }\r\n            }\r\n            this.emitMessageSound(chatWindow[0]);\r\n            // Github issue #58\r\n            // Do not push browser notifications with message content for privacy purposes if the 'maximizeWindowOnNewMessage' setting is off and this is a new chat window.\r\n            if (this.maximizeWindowOnNewMessage || (!chatWindow[1] && !chatWindow[0].isCollapsed)) {\r\n                // Some messages are not pushed because they are loaded by fetching the history hence why we supply the message here\r\n                this.emitBrowserNotification(chatWindow[0], message);\r\n            }\r\n        }\r\n    }\r\n    onParticipantClickedFromFriendsList(participant) {\r\n        this.openChatWindow(participant, true, true);\r\n    }\r\n    cancelOptionPrompt() {\r\n        if (this.currentActiveOption) {\r\n            this.currentActiveOption.isActive = false;\r\n            this.currentActiveOption = null;\r\n        }\r\n    }\r\n    onOptionPromptCanceled() {\r\n        this.cancelOptionPrompt();\r\n    }\r\n    onOptionPromptConfirmed(event) {\r\n        // For now this is fine as there is only one option available. Introduce option types and type checking if a new option is added.\r\n        this.confirmNewGroup(event);\r\n        // Canceling current state\r\n        this.cancelOptionPrompt();\r\n    }\r\n    confirmNewGroup(users) {\r\n        const newGroup = new Group(users);\r\n        this.openChatWindow(newGroup);\r\n        if (this.groupAdapter) {\r\n            this.groupAdapter.groupCreated(newGroup);\r\n        }\r\n    }\r\n    // Opens a new chat whindow. Takes care of available viewport\r\n    // Works for opening a chat window for an user or for a group\r\n    // Returns => [Window: Window object reference, boolean: Indicates if this window is a new chat window]\r\n    openChatWindow(participant, focusOnNewWindow = false, invokedByUserClick = false) {\r\n        // Is this window opened?\r\n        const openedWindow = this.windows.find(x => x.participant.id == participant.id);\r\n        if (!openedWindow) {\r\n            if (invokedByUserClick) {\r\n                this.onParticipantClicked.emit(participant);\r\n            }\r\n            // Refer to issue #58 on Github\r\n            const collapseWindow = invokedByUserClick ? false : !this.maximizeWindowOnNewMessage;\r\n            const newChatWindow = new Window(participant, this.historyEnabled, collapseWindow);\r\n            // Loads the chat history via an RxJs Observable\r\n            if (this.historyEnabled) {\r\n                this.fetchMessageHistory(newChatWindow);\r\n            }\r\n            this.windows.unshift(newChatWindow);\r\n            // Is there enough space left in the view port ? but should be displayed in mobile if option is enabled\r\n            if (!this.isViewportOnMobileEnabled) {\r\n                if (this.windows.length * this.windowSizeFactor >= this.viewPortTotalArea - (!this.hideFriendsList ? this.friendsListWidth : 0)) {\r\n                    this.windows.pop();\r\n                }\r\n            }\r\n            this.updateWindowsState(this.windows);\r\n            if (focusOnNewWindow && !collapseWindow) {\r\n                this.focusOnWindow(newChatWindow);\r\n            }\r\n            this.participantsInteractedWith.push(participant);\r\n            this.onParticipantChatOpened.emit(participant);\r\n            return [newChatWindow, true];\r\n        }\r\n        else {\r\n            // Returns the existing chat window\r\n            return [openedWindow, false];\r\n        }\r\n    }\r\n    // Focus on the input element of the supplied window\r\n    focusOnWindow(window, callback = () => { }) {\r\n        const windowIndex = this.windows.indexOf(window);\r\n        if (windowIndex >= 0) {\r\n            setTimeout(() => {\r\n                if (this.chatWindows) {\r\n                    const chatWindowToFocus = this.chatWindows.toArray()[windowIndex];\r\n                    chatWindowToFocus.chatWindowInput.nativeElement.focus();\r\n                }\r\n                callback();\r\n            });\r\n        }\r\n    }\r\n    assertMessageType(message) {\r\n        // Always fallback to \"Text\" messages to avoid rendenring issues\r\n        if (!message.type) {\r\n            message.type = MessageType.Text;\r\n        }\r\n    }\r\n    // Marks all messages provided as read with the current time.\r\n    markMessagesAsRead(messages) {\r\n        const currentDate = new Date();\r\n        messages.forEach((msg) => {\r\n            msg.dateSeen = currentDate;\r\n        });\r\n        this.onMessagesSeen.emit(messages);\r\n    }\r\n    // Buffers audio file (For component's bootstrapping)\r\n    bufferAudioFile() {\r\n        if (this.audioSource && this.audioSource.length > 0) {\r\n            this.audioFile = new Audio();\r\n            this.audioFile.src = this.audioSource;\r\n            this.audioFile.load();\r\n        }\r\n    }\r\n    // Emits a message notification audio if enabled after every message received\r\n    emitMessageSound(window) {\r\n        if (this.audioEnabled && !window.hasFocus && this.audioFile) {\r\n            this.audioFile.play();\r\n        }\r\n    }\r\n    // Emits a browser notification\r\n    emitBrowserNotification(window, message) {\r\n        if (this.browserNotificationsBootstrapped && !window.hasFocus && message) {\r\n            const notification = new Notification(`${this.localization.browserNotificationTitle} ${window.participant.displayName}`, {\r\n                'body': message.message,\r\n                'icon': this.browserNotificationIconSource\r\n            });\r\n            setTimeout(() => {\r\n                notification.close();\r\n            }, message.message.length <= 50 ? 5000 : 7000); // More time to read longer messages\r\n        }\r\n    }\r\n    // Saves current windows state into local storage if persistence is enabled\r\n    updateWindowsState(windows) {\r\n        if (this.persistWindowsState) {\r\n            const participantIds = windows.map((w) => {\r\n                return w.participant.id;\r\n            });\r\n            localStorage.setItem(this.localStorageKey, JSON.stringify(participantIds));\r\n        }\r\n    }\r\n    restoreWindowsState() {\r\n        try {\r\n            if (this.persistWindowsState) {\r\n                const stringfiedParticipantIds = localStorage.getItem(this.localStorageKey);\r\n                if (stringfiedParticipantIds && stringfiedParticipantIds.length > 0) {\r\n                    const participantIds = JSON.parse(stringfiedParticipantIds);\r\n                    const participantsToRestore = this.participants.filter(u => participantIds.indexOf(u.id) >= 0);\r\n                    participantsToRestore.forEach((participant) => {\r\n                        this.openChatWindow(participant);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        catch (ex) {\r\n            console.error(`An error occurred while restoring ng-chat windows state. Details: ${ex}`);\r\n        }\r\n    }\r\n    // Gets closest open window if any. Most recent opened has priority (Right)\r\n    getClosestWindow(window) {\r\n        const index = this.windows.indexOf(window);\r\n        if (index > 0) {\r\n            return this.windows[index - 1];\r\n        }\r\n        else if (index == 0 && this.windows.length > 1) {\r\n            return this.windows[index + 1];\r\n        }\r\n    }\r\n    closeWindow(window) {\r\n        const index = this.windows.indexOf(window);\r\n        this.windows.splice(index, 1);\r\n        this.updateWindowsState(this.windows);\r\n        this.onParticipantChatClosed.emit(window.participant);\r\n    }\r\n    getChatWindowComponentInstance(targetWindow) {\r\n        const windowIndex = this.windows.indexOf(targetWindow);\r\n        if (this.chatWindows) {\r\n            let targetWindow = this.chatWindows.toArray()[windowIndex];\r\n            return targetWindow;\r\n        }\r\n        return null;\r\n    }\r\n    // Scrolls a chat window message flow to the bottom\r\n    scrollChatWindow(window, direction) {\r\n        const chatWindow = this.getChatWindowComponentInstance(window);\r\n        if (chatWindow) {\r\n            chatWindow.scrollChatWindow(window, direction);\r\n        }\r\n    }\r\n    onWindowMessagesSeen(messagesSeen) {\r\n        this.markMessagesAsRead(messagesSeen);\r\n    }\r\n    onWindowChatClosed(payload) {\r\n        const { closedWindow, closedViaEscapeKey } = payload;\r\n        if (closedViaEscapeKey) {\r\n            let closestWindow = this.getClosestWindow(closedWindow);\r\n            if (closestWindow) {\r\n                this.focusOnWindow(closestWindow, () => { this.closeWindow(closedWindow); });\r\n            }\r\n            else {\r\n                this.closeWindow(closedWindow);\r\n            }\r\n        }\r\n        else {\r\n            this.closeWindow(closedWindow);\r\n        }\r\n    }\r\n    onWindowTabTriggered(payload) {\r\n        const { triggeringWindow, shiftKeyPressed } = payload;\r\n        const currentWindowIndex = this.windows.indexOf(triggeringWindow);\r\n        let windowToFocus = this.windows[currentWindowIndex + (shiftKeyPressed ? 1 : -1)]; // Goes back on shift + tab\r\n        if (!windowToFocus) {\r\n            // Edge windows, go to start or end\r\n            windowToFocus = this.windows[currentWindowIndex > 0 ? 0 : this.chatWindows.length - 1];\r\n        }\r\n        this.focusOnWindow(windowToFocus);\r\n    }\r\n    onWindowMessageSent(messageSent) {\r\n        this.adapter.sendMessage(messageSent);\r\n    }\r\n    onWindowOptionTriggered(option) {\r\n        this.currentActiveOption = option;\r\n    }\r\n    triggerOpenChatWindow(user) {\r\n        if (user) {\r\n            this.openChatWindow(user);\r\n        }\r\n    }\r\n    triggerCloseChatWindow(userId) {\r\n        const openedWindow = this.windows.find(x => x.participant.id == userId);\r\n        if (openedWindow) {\r\n            this.closeWindow(openedWindow);\r\n        }\r\n    }\r\n    triggerToggleChatWindowVisibility(userId) {\r\n        const openedWindow = this.windows.find(x => x.participant.id == userId);\r\n        if (openedWindow) {\r\n            const chatWindow = this.getChatWindowComponentInstance(openedWindow);\r\n            if (chatWindow) {\r\n                chatWindow.onChatWindowClicked(openedWindow);\r\n            }\r\n        }\r\n    }\r\n}\nNgChat.ɵfac = function NgChat_Factory(t) { return new (t || NgChat)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.HttpClient)); };\nNgChat.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgChat, selectors: [[\"ng-chat\"]], viewQuery: function NgChat_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chatWindows = _t);\n    } }, hostBindings: function NgChat_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"resize\", function NgChat_resize_HostBindingHandler($event) { return ctx.onResize($event); }, false, ɵngcc0.ɵɵresolveWindow);\n    } }, inputs: { isCollapsed: \"isCollapsed\", maximizeWindowOnNewMessage: \"maximizeWindowOnNewMessage\", pollFriendsList: \"pollFriendsList\", pollingInterval: \"pollingInterval\", historyEnabled: \"historyEnabled\", emojisEnabled: \"emojisEnabled\", linkfyEnabled: \"linkfyEnabled\", audioEnabled: \"audioEnabled\", searchEnabled: \"searchEnabled\", audioSource: \"audioSource\", persistWindowsState: \"persistWindowsState\", title: \"title\", messagePlaceholder: \"messagePlaceholder\", searchPlaceholder: \"searchPlaceholder\", browserNotificationsEnabled: \"browserNotificationsEnabled\", browserNotificationIconSource: \"browserNotificationIconSource\", browserNotificationTitle: \"browserNotificationTitle\", historyPageSize: \"historyPageSize\", hideFriendsList: \"hideFriendsList\", hideFriendsListOnUnsupportedViewport: \"hideFriendsListOnUnsupportedViewport\", theme: \"theme\", messageDatePipeFormat: \"messageDatePipeFormat\", showMessageDate: \"showMessageDate\", isViewportOnMobileEnabled: \"isViewportOnMobileEnabled\", isDisabled: \"isDisabled\", fileUploadAdapter: \"fileUploadAdapter\", localization: \"localization\", adapter: \"adapter\", groupAdapter: \"groupAdapter\", userId: \"userId\", fileUploadUrl: \"fileUploadUrl\", customTheme: \"customTheme\" }, outputs: { onParticipantClicked: \"onParticipantClicked\", onParticipantChatOpened: \"onParticipantChatOpened\", onParticipantChatClosed: \"onParticipantChatClosed\", onMessagesSeen: \"onMessagesSeen\" }, decls: 2, vars: 2, consts: [[\"rel\", \"stylesheet\", 3, \"href\", 4, \"ngIf\"], [\"id\", \"ng-chat\", 3, \"ngClass\", 4, \"ngIf\"], [\"rel\", \"stylesheet\", 3, \"href\"], [\"id\", \"ng-chat\", 3, \"ngClass\"], [3, \"localization\", \"shouldDisplay\", \"userId\", \"isCollapsed\", \"searchEnabled\", \"participants\", \"participantsResponse\", \"participantsInteractedWith\", \"windows\", \"currentActiveOption\", \"onParticipantClicked\", \"onOptionPromptCanceled\", \"onOptionPromptConfirmed\"], [3, \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"ngStyle\"], [3, \"fileUploadAdapter\", \"localization\", \"userId\", \"window\", \"showOptions\", \"emojisEnabled\", \"linkfyEnabled\", \"showMessageDate\", \"messageDatePipeFormat\", \"hasPagedHistory\", \"onMessagesSeen\", \"onMessageSent\", \"onTabTriggered\", \"onChatWindowClosed\", \"onOptionTriggered\", \"onLoadHistoryTriggered\"], [\"chatWindow\", \"\"]], template: function NgChat_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgChat_link_0_Template, 2, 3, \"link\", 0);\n        ɵngcc0.ɵɵtemplate(1, NgChat_div_1_Template, 3, 12, \"div\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.customTheme);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isDisabled && ctx.isBootstrapped && !ctx.unsupportedViewport);\n    } }, dependencies: function () { return [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc2.NgStyle, NgChatFriendsListComponent, NgChatWindowComponent, SanitizePipe]; }, styles: [\".user-icon{box-sizing:border-box;background-color:#fff;border:2px solid;width:32px;height:20px;border-radius:64px 64px 0 0/64px;margin-top:14px;margin-left:-1px;display:inline-block;vertical-align:middle;position:relative;font-style:normal;color:#ddd;text-align:left;text-indent:-9999px}.user-icon:before{border:2px solid;background-color:#fff;width:12px;height:12px;top:-19px;border-radius:50%;position:absolute;left:50%;transform:translateX(-50%)}.user-icon:after,.user-icon:before{content:\\\"\\\";pointer-events:none}.upload-icon{position:absolute;margin-left:3px;margin-top:12px;width:13px;height:4px;border:1px solid;border-top:none;border-radius:1px}.upload-icon:before{content:\\\"\\\";position:absolute;top:-8px;left:6px;width:1px;height:9px;background-color:currentColor}.upload-icon:after{content:\\\"\\\";top:-8px;left:4px;width:4px;height:4px;transform:rotate(-45deg)}.paperclip-icon,.upload-icon:after{position:absolute;border-top:1px solid;border-right:1px solid}.paperclip-icon{margin-left:9px;margin-top:2px;width:6px;height:12px;border-radius:4px 4px 0 0;border-left:1px solid;transform:rotate(45deg)}.paperclip-icon:before{top:11px;left:-1px;width:4px;height:6px;border-radius:0 0 3px 3px;border-bottom:1px solid}.paperclip-icon:after,.paperclip-icon:before{content:\\\"\\\";position:absolute;border-left:1px solid;border-right:1px solid}.paperclip-icon:after{left:1px;top:1px;width:2px;height:10px;border-radius:4px 4px 0 0;border-top:1px solid}.check-icon{margin-top:4px;width:14px;height:8px;border-bottom:1px solid;border-left:1px solid;transform:rotate(-45deg)}.check-icon,.remove-icon{color:#000;position:absolute;margin-left:3px}.remove-icon{margin-top:10px}.remove-icon:before{transform:rotate(45deg)}.remove-icon:after,.remove-icon:before{content:\\\"\\\";position:absolute;width:15px;height:1px;background-color:currentColor}.remove-icon:after{transform:rotate(-45deg)}\", \".loader,.loader:after,.loader:before{background:#e3e3e3;-webkit-animation:load1 1s ease-in-out infinite;animation:load1 1s ease-in-out infinite;width:1em;height:4em}.loader{color:#e3e3e3;text-indent:-9999em;margin:4px auto 0;position:relative;font-size:4px;transform:translateZ(0);-webkit-animation-delay:-.16s;animation-delay:-.16s}.loader:after,.loader:before{position:absolute;top:0;content:\\\"\\\"}.loader:before{left:-1.5em;-webkit-animation-delay:-.32s;animation-delay:-.32s}.loader:after{left:1.5em}@-webkit-keyframes load1{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}@keyframes load1{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}\", \"#ng-chat{position:fixed;z-index:999;right:0;bottom:0;box-sizing:content-box;box-sizing:initial;font-size:11pt;text-align:left}#ng-chat input{outline:none}#ng-chat .shadowed{box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-loading-wrapper{height:30px;text-align:center;font-size:.9em}.ng-chat-close{text-decoration:none;float:right}.ng-chat-title,.ng-chat-title:hover{position:relative;z-index:2;height:30px;line-height:30px;font-size:.9em;padding:0 10px;display:block;text-decoration:none;color:inherit;font-weight:400;cursor:pointer}.ng-chat-title .ng-chat-title-visibility-toggle-area{display:inline-block;width:85%}.ng-chat-title .ng-chat-title-visibility-toggle-area>strong{font-weight:600;display:block;overflow:hidden;height:30px;text-overflow:ellipsis;white-space:nowrap;max-width:85%;float:left}.ng-chat-title .ng-chat-title-visibility-toggle-area .ng-chat-participant-status{float:left;margin-left:5px}.ng-chat-participant-status{display:inline-block;border-radius:25px;width:8px;height:8px;margin-top:10px}.ng-chat-participant-status.online{background-color:#92a400}.ng-chat-participant-status.busy{background-color:#f91c1e}.ng-chat-participant-status.away{background-color:#f7d21b}.ng-chat-participant-status.offline{background-color:#bababa}.ng-chat-unread-messages-count{margin-left:5px;padding:0 5px;border-radius:25px;font-size:.9em;line-height:30px}.ng-chat-options-container{float:right;margin-right:5px}\", \"#ng-chat.light-theme,#ng-chat.light-theme .primary-text{color:#5c5c5c;font-family:Arial,Helvetica,sans-serif}#ng-chat.light-theme .primary-background{background-color:#fff}#ng-chat.light-theme .secondary-background{background-color:#fafafa}#ng-chat.light-theme .primary-outline-color{border-color:#a3a3a3}#ng-chat.light-theme .friends-search-bar{background-color:#fff}#ng-chat.light-theme .ng-chat-people-action,#ng-chat.light-theme .ng-chat-people-action>i,#ng-chat.light-theme .unread-messages-counter-container{color:#5c5c5c;background-color:#e3e3e3}#ng-chat.light-theme .load-history-action{background-color:#e3e3e3}#ng-chat.light-theme .chat-window-input{background-color:#fff}#ng-chat.light-theme .file-message-container,#ng-chat.light-theme .sent-chat-message-container{background-color:#e3e3e3;border-color:#e3e3e3}#ng-chat.light-theme .file-message-container.received,#ng-chat.light-theme .received-chat-message-container{background-color:#fff;border-color:#e3e3e3}\", \"#ng-chat.dark-theme,#ng-chat.dark-theme .primary-text{color:#fff;font-family:Arial,Helvetica,sans-serif}#ng-chat.dark-theme .primary-background{background-color:#565656}#ng-chat.dark-theme .secondary-background{background-color:#444}#ng-chat.dark-theme .primary-outline-color{border-color:#353535}#ng-chat.dark-theme .friends-search-bar{background-color:#444;border:1px solid #444;color:#fff}#ng-chat.dark-theme .ng-chat-people-action,#ng-chat.dark-theme .ng-chat-people-action>i,#ng-chat.dark-theme .unread-messages-counter-container{background-color:#fff;color:#444}#ng-chat.dark-theme .load-history-action{background-color:#444}#ng-chat.dark-theme .chat-window-input{background-color:#444;color:#fff}#ng-chat.dark-theme .file-message-container,#ng-chat.dark-theme .sent-chat-message-container{border-color:#444;background-color:#444}#ng-chat.dark-theme .file-message-container.received,#ng-chat.dark-theme .received-chat-message-container{background-color:#565656;border-color:#444}#ng-chat.dark-theme .ng-chat-footer{background-color:#444}#ng-chat.dark-theme .ng-chat-message a{color:#fff}\"], encapsulation: 2 });\r\nNgChat.ctorParameters = () => [\r\n    { type: HttpClient }\r\n];\r\nNgChat.propDecorators = {\r\n    isDisabled: [{ type: Input }],\r\n    adapter: [{ type: Input }],\r\n    groupAdapter: [{ type: Input }],\r\n    userId: [{ type: Input }],\r\n    isCollapsed: [{ type: Input }],\r\n    maximizeWindowOnNewMessage: [{ type: Input }],\r\n    pollFriendsList: [{ type: Input }],\r\n    pollingInterval: [{ type: Input }],\r\n    historyEnabled: [{ type: Input }],\r\n    emojisEnabled: [{ type: Input }],\r\n    linkfyEnabled: [{ type: Input }],\r\n    audioEnabled: [{ type: Input }],\r\n    searchEnabled: [{ type: Input }],\r\n    audioSource: [{ type: Input }],\r\n    persistWindowsState: [{ type: Input }],\r\n    title: [{ type: Input }],\r\n    messagePlaceholder: [{ type: Input }],\r\n    searchPlaceholder: [{ type: Input }],\r\n    browserNotificationsEnabled: [{ type: Input }],\r\n    browserNotificationIconSource: [{ type: Input }],\r\n    browserNotificationTitle: [{ type: Input }],\r\n    historyPageSize: [{ type: Input }],\r\n    localization: [{ type: Input }],\r\n    hideFriendsList: [{ type: Input }],\r\n    hideFriendsListOnUnsupportedViewport: [{ type: Input }],\r\n    fileUploadUrl: [{ type: Input }],\r\n    theme: [{ type: Input }],\r\n    customTheme: [{ type: Input }],\r\n    messageDatePipeFormat: [{ type: Input }],\r\n    showMessageDate: [{ type: Input }],\r\n    isViewportOnMobileEnabled: [{ type: Input }],\r\n    fileUploadAdapter: [{ type: Input }],\r\n    onParticipantClicked: [{ type: Output }],\r\n    onParticipantChatOpened: [{ type: Output }],\r\n    onParticipantChatClosed: [{ type: Output }],\r\n    onMessagesSeen: [{ type: Output }],\r\n    chatWindows: [{ type: ViewChildren, args: ['chatWindow',] }],\r\n    onResize: [{ type: HostListener, args: ['window:resize', ['$event'],] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChat, [{\n        type: Component,\n        args: [{ selector: 'ng-chat', template: \"<link *ngIf=\\\"customTheme\\\" rel=\\\"stylesheet\\\" [href]='customTheme | sanitize'>\\r\\n\\r\\n<div id=\\\"ng-chat\\\" *ngIf=\\\"!isDisabled && isBootstrapped && !unsupportedViewport\\\" [ngClass]=\\\"theme\\\">\\r\\n    <ng-chat-friends-list\\r\\n        [localization]=\\\"localization\\\"\\r\\n        [shouldDisplay]=\\\"!hideFriendsList\\\"\\r\\n        [userId]=\\\"userId\\\"\\r\\n        [isCollapsed]=\\\"isCollapsed\\\"\\r\\n        [searchEnabled]=\\\"searchEnabled\\\"\\r\\n        [participants]=\\\"participants\\\"\\r\\n        [participantsResponse]=\\\"participantsResponse\\\"\\r\\n        [participantsInteractedWith]=\\\"participantsInteractedWith\\\"\\r\\n        [windows]=\\\"windows\\\"\\r\\n        [currentActiveOption]=\\\"currentActiveOption\\\"\\r\\n        (onParticipantClicked)=\\\"onParticipantClickedFromFriendsList($event)\\\"\\r\\n        (onOptionPromptCanceled)=\\\"onOptionPromptCanceled()\\\"\\r\\n        (onOptionPromptConfirmed)=\\\"onOptionPromptConfirmed($event)\\\"\\r\\n    >\\r\\n    </ng-chat-friends-list>\\r\\n\\r\\n    <div *ngFor=\\\"let window of windows; let i = index\\\" [ngClass]=\\\"{'ng-chat-window': true, 'primary-outline-color': true, 'ng-chat-window-collapsed': window.isCollapsed}\\\" [ngStyle]=\\\"{'right': (!hideFriendsList ? friendsListWidth : 0) + 20 + windowSizeFactor * i + 'px'}\\\">\\r\\n        <ng-chat-window\\r\\n            #chatWindow\\r\\n            [fileUploadAdapter]=\\\"fileUploadAdapter\\\"\\r\\n            [localization]=\\\"localization\\\"\\r\\n            [userId]=\\\"userId\\\"\\r\\n            [window]=\\\"window\\\"\\r\\n            [showOptions]=\\\"groupAdapter\\\"\\r\\n            [emojisEnabled]=\\\"emojisEnabled\\\"\\r\\n            [linkfyEnabled]=\\\"linkfyEnabled\\\"\\r\\n            [showMessageDate]=\\\"showMessageDate\\\"\\r\\n            [messageDatePipeFormat]=\\\"messageDatePipeFormat\\\"\\r\\n            [hasPagedHistory]=\\\"hasPagedHistory\\\"\\r\\n            (onMessagesSeen)=\\\"onWindowMessagesSeen($event)\\\"\\r\\n            (onMessageSent)=\\\"onWindowMessageSent($event)\\\"\\r\\n            (onTabTriggered)=\\\"onWindowTabTriggered($event)\\\"\\r\\n            (onChatWindowClosed)=\\\"onWindowChatClosed($event)\\\"\\r\\n            (onOptionTriggered)=\\\"onWindowOptionTriggered($event)\\\"\\r\\n            (onLoadHistoryTriggered)=\\\"fetchMessageHistory($event)\\\"\\r\\n        >\\r\\n        </ng-chat-window>\\r\\n    </div>\\r\\n</div>\\r\\n\", encapsulation: ViewEncapsulation.None, styles: [\".user-icon{box-sizing:border-box;background-color:#fff;border:2px solid;width:32px;height:20px;border-radius:64px 64px 0 0/64px;margin-top:14px;margin-left:-1px;display:inline-block;vertical-align:middle;position:relative;font-style:normal;color:#ddd;text-align:left;text-indent:-9999px}.user-icon:before{border:2px solid;background-color:#fff;width:12px;height:12px;top:-19px;border-radius:50%;position:absolute;left:50%;transform:translateX(-50%)}.user-icon:after,.user-icon:before{content:\\\"\\\";pointer-events:none}.upload-icon{position:absolute;margin-left:3px;margin-top:12px;width:13px;height:4px;border:1px solid;border-top:none;border-radius:1px}.upload-icon:before{content:\\\"\\\";position:absolute;top:-8px;left:6px;width:1px;height:9px;background-color:currentColor}.upload-icon:after{content:\\\"\\\";top:-8px;left:4px;width:4px;height:4px;transform:rotate(-45deg)}.paperclip-icon,.upload-icon:after{position:absolute;border-top:1px solid;border-right:1px solid}.paperclip-icon{margin-left:9px;margin-top:2px;width:6px;height:12px;border-radius:4px 4px 0 0;border-left:1px solid;transform:rotate(45deg)}.paperclip-icon:before{top:11px;left:-1px;width:4px;height:6px;border-radius:0 0 3px 3px;border-bottom:1px solid}.paperclip-icon:after,.paperclip-icon:before{content:\\\"\\\";position:absolute;border-left:1px solid;border-right:1px solid}.paperclip-icon:after{left:1px;top:1px;width:2px;height:10px;border-radius:4px 4px 0 0;border-top:1px solid}.check-icon{margin-top:4px;width:14px;height:8px;border-bottom:1px solid;border-left:1px solid;transform:rotate(-45deg)}.check-icon,.remove-icon{color:#000;position:absolute;margin-left:3px}.remove-icon{margin-top:10px}.remove-icon:before{transform:rotate(45deg)}.remove-icon:after,.remove-icon:before{content:\\\"\\\";position:absolute;width:15px;height:1px;background-color:currentColor}.remove-icon:after{transform:rotate(-45deg)}\", \".loader,.loader:after,.loader:before{background:#e3e3e3;-webkit-animation:load1 1s ease-in-out infinite;animation:load1 1s ease-in-out infinite;width:1em;height:4em}.loader{color:#e3e3e3;text-indent:-9999em;margin:4px auto 0;position:relative;font-size:4px;transform:translateZ(0);-webkit-animation-delay:-.16s;animation-delay:-.16s}.loader:after,.loader:before{position:absolute;top:0;content:\\\"\\\"}.loader:before{left:-1.5em;-webkit-animation-delay:-.32s;animation-delay:-.32s}.loader:after{left:1.5em}@-webkit-keyframes load1{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}@keyframes load1{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}\", \"#ng-chat{position:fixed;z-index:999;right:0;bottom:0;box-sizing:content-box;box-sizing:initial;font-size:11pt;text-align:left}#ng-chat input{outline:none}#ng-chat .shadowed{box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-loading-wrapper{height:30px;text-align:center;font-size:.9em}.ng-chat-close{text-decoration:none;float:right}.ng-chat-title,.ng-chat-title:hover{position:relative;z-index:2;height:30px;line-height:30px;font-size:.9em;padding:0 10px;display:block;text-decoration:none;color:inherit;font-weight:400;cursor:pointer}.ng-chat-title .ng-chat-title-visibility-toggle-area{display:inline-block;width:85%}.ng-chat-title .ng-chat-title-visibility-toggle-area>strong{font-weight:600;display:block;overflow:hidden;height:30px;text-overflow:ellipsis;white-space:nowrap;max-width:85%;float:left}.ng-chat-title .ng-chat-title-visibility-toggle-area .ng-chat-participant-status{float:left;margin-left:5px}.ng-chat-participant-status{display:inline-block;border-radius:25px;width:8px;height:8px;margin-top:10px}.ng-chat-participant-status.online{background-color:#92a400}.ng-chat-participant-status.busy{background-color:#f91c1e}.ng-chat-participant-status.away{background-color:#f7d21b}.ng-chat-participant-status.offline{background-color:#bababa}.ng-chat-unread-messages-count{margin-left:5px;padding:0 5px;border-radius:25px;font-size:.9em;line-height:30px}.ng-chat-options-container{float:right;margin-right:5px}\", \"#ng-chat.light-theme,#ng-chat.light-theme .primary-text{color:#5c5c5c;font-family:Arial,Helvetica,sans-serif}#ng-chat.light-theme .primary-background{background-color:#fff}#ng-chat.light-theme .secondary-background{background-color:#fafafa}#ng-chat.light-theme .primary-outline-color{border-color:#a3a3a3}#ng-chat.light-theme .friends-search-bar{background-color:#fff}#ng-chat.light-theme .ng-chat-people-action,#ng-chat.light-theme .ng-chat-people-action>i,#ng-chat.light-theme .unread-messages-counter-container{color:#5c5c5c;background-color:#e3e3e3}#ng-chat.light-theme .load-history-action{background-color:#e3e3e3}#ng-chat.light-theme .chat-window-input{background-color:#fff}#ng-chat.light-theme .file-message-container,#ng-chat.light-theme .sent-chat-message-container{background-color:#e3e3e3;border-color:#e3e3e3}#ng-chat.light-theme .file-message-container.received,#ng-chat.light-theme .received-chat-message-container{background-color:#fff;border-color:#e3e3e3}\", \"#ng-chat.dark-theme,#ng-chat.dark-theme .primary-text{color:#fff;font-family:Arial,Helvetica,sans-serif}#ng-chat.dark-theme .primary-background{background-color:#565656}#ng-chat.dark-theme .secondary-background{background-color:#444}#ng-chat.dark-theme .primary-outline-color{border-color:#353535}#ng-chat.dark-theme .friends-search-bar{background-color:#444;border:1px solid #444;color:#fff}#ng-chat.dark-theme .ng-chat-people-action,#ng-chat.dark-theme .ng-chat-people-action>i,#ng-chat.dark-theme .unread-messages-counter-container{background-color:#fff;color:#444}#ng-chat.dark-theme .load-history-action{background-color:#444}#ng-chat.dark-theme .chat-window-input{background-color:#444;color:#fff}#ng-chat.dark-theme .file-message-container,#ng-chat.dark-theme .sent-chat-message-container{border-color:#444;background-color:#444}#ng-chat.dark-theme .file-message-container.received,#ng-chat.dark-theme .received-chat-message-container{background-color:#565656;border-color:#444}#ng-chat.dark-theme .ng-chat-footer{background-color:#444}#ng-chat.dark-theme .ng-chat-message a{color:#fff}\"] }]\n    }], function () { return [{ type: ɵngcc1.HttpClient }]; }, { isCollapsed: [{\n            type: Input\n        }], maximizeWindowOnNewMessage: [{\n            type: Input\n        }], pollFriendsList: [{\n            type: Input\n        }], pollingInterval: [{\n            type: Input\n        }], historyEnabled: [{\n            type: Input\n        }], emojisEnabled: [{\n            type: Input\n        }], linkfyEnabled: [{\n            type: Input\n        }], audioEnabled: [{\n            type: Input\n        }], searchEnabled: [{\n            type: Input\n        }], audioSource: [{\n            type: Input\n        }], persistWindowsState: [{\n            type: Input\n        }], title: [{\n            type: Input\n        }], messagePlaceholder: [{\n            type: Input\n        }], searchPlaceholder: [{\n            type: Input\n        }], browserNotificationsEnabled: [{\n            type: Input\n        }], browserNotificationIconSource: [{\n            type: Input\n        }], browserNotificationTitle: [{\n            type: Input\n        }], historyPageSize: [{\n            type: Input\n        }], hideFriendsList: [{\n            type: Input\n        }], hideFriendsListOnUnsupportedViewport: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }], messageDatePipeFormat: [{\n            type: Input\n        }], showMessageDate: [{\n            type: Input\n        }], isViewportOnMobileEnabled: [{\n            type: Input\n        }], onParticipantClicked: [{\n            type: Output\n        }], onParticipantChatOpened: [{\n            type: Output\n        }], onParticipantChatClosed: [{\n            type: Output\n        }], onMessagesSeen: [{\n            type: Output\n        }], isDisabled: [{\n            type: Input\n        }], onResize: [{\n            type: HostListener,\n            args: ['window:resize', ['$event']]\n        }], fileUploadAdapter: [{\n            type: Input\n        }], localization: [{\n            type: Input\n        }], adapter: [{\n            type: Input\n        }], groupAdapter: [{\n            type: Input\n        }], userId: [{\n            type: Input\n        }], fileUploadUrl: [{\n            type: Input\n        }], customTheme: [{\n            type: Input\n        }], chatWindows: [{\n            type: ViewChildren,\n            args: ['chatWindow']\n        }] }); })();\n\nlet emojiDictionary = [\r\n    { patterns: [':)', ':-)', '=)'], unicode: '😃' },\r\n    { patterns: [':D', ':-D', '=D'], unicode: '😀' },\r\n    { patterns: [':(', ':-(', '=('], unicode: '🙁' },\r\n    { patterns: [':|', ':-|', '=|'], unicode: '😐' },\r\n    { patterns: [':*', ':-*', '=*'], unicode: '😙' },\r\n    { patterns: ['T_T', 'T.T'], unicode: '😭' },\r\n    { patterns: [':O', ':-O', '=O', ':o', ':-o', '=o'], unicode: '😮' },\r\n    { patterns: [':P', ':-P', '=P', ':p', ':-p', '=p'], unicode: '😋' },\r\n    { patterns: ['>.<'], unicode: '😣' },\r\n    { patterns: ['@.@'], unicode: '😵' },\r\n    { patterns: ['*.*'], unicode: '😍' },\r\n    { patterns: ['<3'], unicode: '❤️' },\r\n    { patterns: ['^.^'], unicode: '😊' },\r\n    { patterns: [':+1'], unicode: '👍' },\r\n    { patterns: [':-1'], unicode: '👎' }\r\n];\r\n/*\r\n * Transforms common emoji text to UTF encoded emojis\r\n*/\r\nclass EmojifyPipe {\r\n    transform(message, pipeEnabled) {\r\n        if (pipeEnabled && message && message.length > 1) {\r\n            emojiDictionary.forEach(emoji => {\r\n                emoji.patterns.forEach(pattern => {\r\n                    message = message.replace(pattern, emoji.unicode);\r\n                });\r\n            });\r\n        }\r\n        return message;\r\n    }\r\n}\nEmojifyPipe.ɵfac = function EmojifyPipe_Factory(t) { return new (t || EmojifyPipe)(); };\nEmojifyPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"emojify\", type: EmojifyPipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EmojifyPipe, [{\n        type: Pipe,\n        args: [{ name: 'emojify' }]\n    }], null, null); })();\n\n/*\r\n * Transforms text containing URLs or E-mails to valid links/mailtos\r\n*/\r\nclass LinkfyPipe {\r\n    transform(message, pipeEnabled) {\r\n        if (pipeEnabled && message && message.length > 1) {\r\n            let replacedText;\r\n            let replacePatternProtocol;\r\n            let replacePatternWWW;\r\n            let replacePatternMailTo;\r\n            // URLs starting with http://, https://, or ftp://\r\n            replacePatternProtocol = /(\\b(https?|ftp):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gim;\r\n            replacedText = message.replace(replacePatternProtocol, '<a href=\"$1\" target=\"_blank\">$1</a>');\r\n            // URLs starting with \"www.\" (ignoring // before it).\r\n            replacePatternWWW = /(^|[^\\/])(www\\.[\\S]+(\\b|$))/gim;\r\n            replacedText = replacedText.replace(replacePatternWWW, '$1<a href=\"http://$2\" target=\"_blank\">$2</a>');\r\n            // Change email addresses to mailto:: links.\r\n            replacePatternMailTo = /(([a-zA-Z0-9\\-\\_\\.])+@[a-zA-Z\\_]+?(\\.[a-zA-Z]{2,6})+)/gim;\r\n            replacedText = replacedText.replace(replacePatternMailTo, '<a href=\"mailto:$1\">$1</a>');\r\n            return replacedText;\r\n        }\r\n        else\r\n            return message;\r\n    }\r\n}\nLinkfyPipe.ɵfac = function LinkfyPipe_Factory(t) { return new (t || LinkfyPipe)(); };\nLinkfyPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"linkfy\", type: LinkfyPipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LinkfyPipe, [{\n        type: Pipe,\n        args: [{ name: 'linkfy' }]\n    }], null, null); })();\n\n/*\r\n * Sanitizes an URL resource\r\n*/\r\nclass SanitizePipe {\r\n    constructor(sanitizer) {\r\n        this.sanitizer = sanitizer;\r\n    }\r\n    transform(url) {\r\n        return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n    }\r\n}\nSanitizePipe.ɵfac = function SanitizePipe_Factory(t) { return new (t || SanitizePipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.DomSanitizer, 16)); };\nSanitizePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"sanitize\", type: SanitizePipe, pure: true });\r\nSanitizePipe.ctorParameters = () => [\r\n    { type: DomSanitizer }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SanitizePipe, [{\n        type: Pipe,\n        args: [{ name: 'sanitize' }]\n    }], function () { return [{ type: ɵngcc3.DomSanitizer }]; }, null); })();\n\n/*\r\n * Renders the display name of a participant in a group based on who's sent the message\r\n*/\r\nclass GroupMessageDisplayNamePipe {\r\n    transform(participant, message) {\r\n        if (participant && participant.participantType == ChatParticipantType.Group) {\r\n            let group = participant;\r\n            let userIndex = group.chattingTo.findIndex(x => x.id == message.fromId);\r\n            return group.chattingTo[userIndex >= 0 ? userIndex : 0].displayName;\r\n        }\r\n        else\r\n            return \"\";\r\n    }\r\n}\nGroupMessageDisplayNamePipe.ɵfac = function GroupMessageDisplayNamePipe_Factory(t) { return new (t || GroupMessageDisplayNamePipe)(); };\nGroupMessageDisplayNamePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"groupMessageDisplayName\", type: GroupMessageDisplayNamePipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GroupMessageDisplayNamePipe, [{\n        type: Pipe,\n        args: [{ name: 'groupMessageDisplayName' }]\n    }], null, null); })();\n\nclass NgChatOptionsComponent {\r\n    constructor() {\r\n        this.activeOptionTrackerChange = new EventEmitter();\r\n    }\r\n    onOptionClicked(option) {\r\n        option.isActive = true;\r\n        if (option.action) {\r\n            option.action(option.chattingTo);\r\n        }\r\n        this.activeOptionTrackerChange.emit(option);\r\n    }\r\n}\nNgChatOptionsComponent.ɵfac = function NgChatOptionsComponent_Factory(t) { return new (t || NgChatOptionsComponent)(); };\nNgChatOptionsComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgChatOptionsComponent, selectors: [[\"ng-chat-options\"]], inputs: { options: \"options\", activeOptionTracker: \"activeOptionTracker\" }, outputs: { activeOptionTrackerChange: \"activeOptionTrackerChange\" }, decls: 1, vars: 1, consts: [[\"class\", \"ng-chat-options\", 4, \"ngIf\"], [1, \"ng-chat-options\"], [1, \"ng-chat-options-activator\"], [1, \"primary-text\"], [1, \"ng-chat-options-content\", \"primary-background\", \"shadowed\"], [3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"click\"]], template: function NgChatOptionsComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgChatOptionsComponent_div_0_Template, 6, 1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.options && ctx.options.length > 0);\n    } }, dependencies: [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf], styles: [\".ng-chat-options-activator[_ngcontent-%COMP%]{background-color:unset;color:#fff;line-height:28px;border:none;position:relative}.ng-chat-options-activator[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{position:relative;top:-5px;left:0}.ng-chat-options[_ngcontent-%COMP%]{position:relative;display:inline-block}.ng-chat-options[_ngcontent-%COMP%]:hover   .ng-chat-options-content[_ngcontent-%COMP%]{display:block}.ng-chat-options[_ngcontent-%COMP%]:hover   .ng-chat-options-activator[_ngcontent-%COMP%]{background-color:#ddd}.ng-chat-options-content[_ngcontent-%COMP%]{display:none;position:absolute;min-width:160px;z-index:1}.ng-chat-options-content[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{background-color:#ddd}.ng-chat-options-content[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{padding:6px 16px;text-decoration:none;display:block}@media only screen and (max-width:581px){.ng-chat-options-content[_ngcontent-%COMP%]{right:0}}\"] });\r\nNgChatOptionsComponent.ctorParameters = () => [];\r\nNgChatOptionsComponent.propDecorators = {\r\n    options: [{ type: Input }],\r\n    activeOptionTracker: [{ type: Input }],\r\n    activeOptionTrackerChange: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChatOptionsComponent, [{\n        type: Component,\n        args: [{ selector: 'ng-chat-options', template: \"<div *ngIf=\\\"options && options.length > 0\\\" class=\\\"ng-chat-options\\\">\\r\\n\\t\\t<button class=\\\"ng-chat-options-activator\\\">\\r\\n\\t\\t\\t<span class=\\\"primary-text\\\">...</span>\\r\\n\\t\\t</button>\\r\\n\\t<div class=\\\"ng-chat-options-content primary-background shadowed\\\">\\r\\n\\t\\t<a *ngFor=\\\"let option of options; let i = index\\\" [ngClass]=\\\"'primary-text'\\\" (click)=\\\"onOptionClicked(option)\\\">\\r\\n\\t\\t\\t{{option.displayLabel}}\\r\\n\\t\\t</a>\\r\\n\\t</div>      \\r\\n</div>\\r\\n\", styles: [\".ng-chat-options-activator{background-color:unset;color:#fff;line-height:28px;border:none;position:relative}.ng-chat-options-activator>span{position:relative;top:-5px;left:0}.ng-chat-options{position:relative;display:inline-block}.ng-chat-options:hover .ng-chat-options-content{display:block}.ng-chat-options:hover .ng-chat-options-activator{background-color:#ddd}.ng-chat-options-content{display:none;position:absolute;min-width:160px;z-index:1}.ng-chat-options-content a:hover{background-color:#ddd}.ng-chat-options-content a{padding:6px 16px;text-decoration:none;display:block}@media only screen and (max-width:581px){.ng-chat-options-content{right:0}}\"] }]\n    }], function () { return []; }, { activeOptionTrackerChange: [{\n            type: Output\n        }], options: [{\n            type: Input\n        }], activeOptionTracker: [{\n            type: Input\n        }] }); })();\n\nclass MessageCounter {\r\n    static formatUnreadMessagesTotal(totalUnreadMessages) {\r\n        if (totalUnreadMessages > 0) {\r\n            if (totalUnreadMessages > 99)\r\n                return \"99+\";\r\n            else\r\n                return String(totalUnreadMessages);\r\n        }\r\n        // Empty fallback.\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Returns a formatted string containing the total unread messages of a chat window.\r\n     * @param window The window instance to count the unread total messages.\r\n     * @param currentUserId The current chat instance user id. In this context it would be the sender.\r\n     */\r\n    static unreadMessagesTotal(window, currentUserId) {\r\n        let totalUnreadMessages = 0;\r\n        if (window) {\r\n            totalUnreadMessages = window.messages.filter(x => x.fromId != currentUserId && !x.dateSeen).length;\r\n        }\r\n        return MessageCounter.formatUnreadMessagesTotal(totalUnreadMessages);\r\n    }\r\n}\n\nfunction chatParticipantStatusDescriptor(status, localization) {\r\n    const currentStatus = ChatParticipantStatus[status].toString().toLowerCase();\r\n    return localization.statusDescription[currentStatus];\r\n}\n\nclass NgChatFriendsListComponent {\r\n    constructor() {\r\n        this.participantsInteractedWith = [];\r\n        this.onParticipantClicked = new EventEmitter();\r\n        this.onOptionPromptCanceled = new EventEmitter();\r\n        this.onOptionPromptConfirmed = new EventEmitter();\r\n        this.selectedUsersFromFriendsList = [];\r\n        this.searchInput = '';\r\n        // Exposes enums and functions for the ng-template\r\n        this.ChatParticipantStatus = ChatParticipantStatus;\r\n        this.chatParticipantStatusDescriptor = chatParticipantStatusDescriptor;\r\n        this.cleanUpUserSelection = () => this.selectedUsersFromFriendsList = [];\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (this.currentActiveOption) {\r\n            const currentOptionTriggeredBy = this.currentActiveOption && this.currentActiveOption.chattingTo.participant.id;\r\n            const isActivatedUserInSelectedList = (this.selectedUsersFromFriendsList.filter(item => item.id == currentOptionTriggeredBy)).length > 0;\r\n            if (!isActivatedUserInSelectedList) {\r\n                this.selectedUsersFromFriendsList = this.selectedUsersFromFriendsList.concat(this.currentActiveOption.chattingTo.participant);\r\n            }\r\n        }\r\n    }\r\n    get filteredParticipants() {\r\n        if (this.searchInput.length > 0) {\r\n            // Searches in the friend list by the inputted search string\r\n            return this.participants.filter(x => x.displayName.toUpperCase().includes(this.searchInput.toUpperCase()));\r\n        }\r\n        return this.participants;\r\n    }\r\n    isUserSelectedFromFriendsList(user) {\r\n        return (this.selectedUsersFromFriendsList.filter(item => item.id == user.id)).length > 0;\r\n    }\r\n    unreadMessagesTotalByParticipant(participant) {\r\n        let openedWindow = this.windows.find(x => x.participant.id == participant.id);\r\n        if (openedWindow) {\r\n            return MessageCounter.unreadMessagesTotal(openedWindow, this.userId);\r\n        }\r\n        else {\r\n            let totalUnreadMessages = this.participantsResponse\r\n                .filter(x => x.participant.id == participant.id && !this.participantsInteractedWith.find(u => u.id == participant.id) && x.metadata && x.metadata.totalUnreadMessages > 0)\r\n                .map((participantResponse) => {\r\n                return participantResponse.metadata.totalUnreadMessages;\r\n            })[0];\r\n            return MessageCounter.formatUnreadMessagesTotal(totalUnreadMessages);\r\n        }\r\n    }\r\n    // Toggle friends list visibility\r\n    onChatTitleClicked() {\r\n        this.isCollapsed = !this.isCollapsed;\r\n    }\r\n    onFriendsListCheckboxChange(selectedUser, isChecked) {\r\n        if (isChecked) {\r\n            this.selectedUsersFromFriendsList.push(selectedUser);\r\n        }\r\n        else {\r\n            this.selectedUsersFromFriendsList.splice(this.selectedUsersFromFriendsList.indexOf(selectedUser), 1);\r\n        }\r\n    }\r\n    onUserClick(clickedUser) {\r\n        this.onParticipantClicked.emit(clickedUser);\r\n    }\r\n    onFriendsListActionCancelClicked() {\r\n        this.onOptionPromptCanceled.emit();\r\n        this.cleanUpUserSelection();\r\n    }\r\n    onFriendsListActionConfirmClicked() {\r\n        this.onOptionPromptConfirmed.emit(this.selectedUsersFromFriendsList);\r\n        this.cleanUpUserSelection();\r\n    }\r\n}\nNgChatFriendsListComponent.ɵfac = function NgChatFriendsListComponent_Factory(t) { return new (t || NgChatFriendsListComponent)(); };\nNgChatFriendsListComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgChatFriendsListComponent, selectors: [[\"ng-chat-friends-list\"]], inputs: { participantsInteractedWith: \"participantsInteractedWith\", isCollapsed: \"isCollapsed\", participants: \"participants\", participantsResponse: \"participantsResponse\", windows: \"windows\", userId: \"userId\", localization: \"localization\", shouldDisplay: \"shouldDisplay\", searchEnabled: \"searchEnabled\", currentActiveOption: \"currentActiveOption\" }, outputs: { onParticipantClicked: \"onParticipantClicked\", onOptionPromptCanceled: \"onOptionPromptCanceled\", onOptionPromptConfirmed: \"onOptionPromptConfirmed\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[\"id\", \"ng-chat-people\", 3, \"ngClass\", 4, \"ngIf\"], [\"id\", \"ng-chat-people\", 3, \"ngClass\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-title\", \"secondary-background\", \"shadowed\", 3, \"click\"], [\"class\", \"ng-chat-people-actions\", 3, \"click\", 4, \"ngIf\"], [\"id\", \"ng-chat-search_friend\", \"class\", \"friends-search-bar\", \"type\", \"search\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"id\", \"ng-chat-users\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"ng-chat-people-actions\", 3, \"click\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-people-action\"], [1, \"remove-icon\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-people-action\", 3, \"click\"], [1, \"check-icon\"], [\"id\", \"ng-chat-search_friend\", \"type\", \"search\", 1, \"friends-search-bar\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"id\", \"ng-chat-users\", 3, \"ngClass\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", \"class\", \"ng-chat-users-checkbox\", 3, \"checked\", \"change\", 4, \"ngIf\"], [3, \"ngClass\", \"click\"], [\"class\", \"icon-wrapper\", 4, \"ngIf\"], [\"alt\", \"\", \"class\", \"avatar\", \"height\", \"30\", \"width\", \"30\", 3, \"src\", 4, \"ngIf\"], [3, \"title\"], [3, \"ngClass\", \"title\"], [\"class\", \"ng-chat-unread-messages-count unread-messages-counter-container primary-text\", 4, \"ngIf\"], [\"type\", \"checkbox\", 1, \"ng-chat-users-checkbox\", 3, \"checked\", \"change\"], [1, \"icon-wrapper\"], [1, \"user-icon\"], [\"alt\", \"\", \"height\", \"30\", \"width\", \"30\", 1, \"avatar\", 3, \"src\"], [1, \"ng-chat-unread-messages-count\", \"unread-messages-counter-container\", \"primary-text\"]], template: function NgChatFriendsListComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgChatFriendsListComponent_div_0_Template, 7, 7, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.shouldDisplay);\n    } }, dependencies: [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, SanitizePipe], styles: [\"#ng-chat-people{position:relative;width:240px;height:360px;border-width:1px;border-style:solid;margin-right:20px;box-shadow:0 4px 8px rgba(0,0,0,.25);border-bottom:0}#ng-chat-people.ng-chat-people-collapsed{height:30px}#ng-chat-search_friend{display:block;padding:7px 10px;width:calc(100% - 20px);margin:10px auto 0;font-size:.9em;-webkit-appearance:searchfield}#ng-chat-users{padding:0 10px;list-style:none;margin:0;overflow:auto;position:absolute;top:42px;bottom:0;width:100%;box-sizing:border-box}#ng-chat-users.offset-search{top:84px}#ng-chat-users .ng-chat-users-checkbox{float:left;margin-right:5px;margin-top:8px}#ng-chat-users li{clear:both;margin-bottom:10px;overflow:hidden;cursor:pointer;max-height:30px}#ng-chat-users li>.ng-chat-friends-list-selectable-offset{margin-left:22px}#ng-chat-users li .ng-chat-friends-list-container{display:inline-block;width:100%}#ng-chat-users li>.ng-chat-friends-list-selectable-offset.ng-chat-friends-list-container{display:block;width:auto}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper,#ng-chat-users li .ng-chat-friends-list-container>img.avatar{float:left;margin-right:5px;border-radius:25px}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper>i{color:#fff;transform:scale(.7)}#ng-chat-users li .ng-chat-friends-list-container>strong{float:left;line-height:30px;font-size:.8em;max-width:57%;max-height:30px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}#ng-chat-users li .ng-chat-friends-list-container>.ng-chat-participant-status{float:right}.ng-chat-people-actions{position:absolute;top:4px;right:5px;margin:0;padding:0;z-index:2}.ng-chat-people-actions>a.ng-chat-people-action{display:inline-block;width:21px;height:21px;margin-right:8px;text-decoration:none;border:none;border-radius:25px;padding:1px}@media only screen and (max-width:581px){#ng-chat-people{width:300px;height:360px;margin-right:0}}\"], encapsulation: 2 });\r\nNgChatFriendsListComponent.ctorParameters = () => [];\r\nNgChatFriendsListComponent.propDecorators = {\r\n    participants: [{ type: Input }],\r\n    participantsResponse: [{ type: Input }],\r\n    participantsInteractedWith: [{ type: Input }],\r\n    windows: [{ type: Input }],\r\n    userId: [{ type: Input }],\r\n    localization: [{ type: Input }],\r\n    shouldDisplay: [{ type: Input }],\r\n    isCollapsed: [{ type: Input }],\r\n    searchEnabled: [{ type: Input }],\r\n    currentActiveOption: [{ type: Input }],\r\n    onParticipantClicked: [{ type: Output }],\r\n    onOptionPromptCanceled: [{ type: Output }],\r\n    onOptionPromptConfirmed: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChatFriendsListComponent, [{\n        type: Component,\n        args: [{ selector: 'ng-chat-friends-list', template: \"<div *ngIf=\\\"shouldDisplay\\\" id=\\\"ng-chat-people\\\" [ngClass]=\\\"{'primary-outline-color': true, 'primary-background': true, 'ng-chat-people-collapsed': isCollapsed}\\\">\\r\\n\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-title secondary-background shadowed\\\" (click)=\\\"onChatTitleClicked()\\\">\\r\\n\\t\\t<span>\\r\\n\\t\\t\\t{{localization.title}}\\r\\n\\t\\t</span>\\r\\n\\t</a>\\r\\n\\t<div *ngIf=\\\"currentActiveOption\\\" class=\\\"ng-chat-people-actions\\\" (click)=\\\"onFriendsListActionCancelClicked()\\\">\\r\\n\\t\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-people-action\\\">\\r\\n\\t\\t\\t<i class=\\\"remove-icon\\\"></i>\\r\\n\\t\\t</a>\\r\\n\\t\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-people-action\\\" (click)=\\\"onFriendsListActionConfirmClicked()\\\">\\r\\n\\t\\t\\t<i class=\\\"check-icon\\\"></i>\\r\\n\\t\\t</a>\\r\\n\\t</div>\\r\\n\\t<input *ngIf=\\\"searchEnabled\\\" id=\\\"ng-chat-search_friend\\\" class=\\\"friends-search-bar\\\" type=\\\"search\\\" [placeholder]=\\\"localization.searchPlaceholder\\\" [(ngModel)]=\\\"searchInput\\\" />\\r\\n\\t<ul id=\\\"ng-chat-users\\\" *ngIf=\\\"!isCollapsed\\\" [ngClass]=\\\"{'offset-search': searchEnabled}\\\">\\r\\n\\t\\t<li *ngFor=\\\"let user of filteredParticipants\\\">\\r\\n\\t\\t\\t<input \\r\\n\\t\\t\\t\\t*ngIf=\\\"currentActiveOption && currentActiveOption.validateContext(user)\\\" \\r\\n\\t\\t\\t\\ttype=\\\"checkbox\\\" \\r\\n\\t\\t\\t\\tclass=\\\"ng-chat-users-checkbox\\\" \\r\\n\\t\\t\\t\\t(change)=\\\"onFriendsListCheckboxChange(user, $event.target.checked)\\\" \\r\\n\\t\\t\\t\\t[checked]=\\\"isUserSelectedFromFriendsList(user)\\\"/>\\r\\n\\t\\t\\t<div [ngClass]=\\\"{'ng-chat-friends-list-selectable-offset': currentActiveOption, 'ng-chat-friends-list-container': true}\\\" (click)=\\\"onUserClick(user)\\\">\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"!user.avatar\\\" class=\\\"icon-wrapper\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"user-icon\\\"></i>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<img *ngIf=\\\"user.avatar\\\" alt=\\\"\\\" class=\\\"avatar\\\" height=\\\"30\\\" width=\\\"30\\\"  [src]=\\\"user.avatar | sanitize\\\"/>\\r\\n\\t\\t\\t\\t<strong title=\\\"{{user.displayName}}\\\">{{user.displayName}}</strong>\\r\\n\\t\\t\\t\\t<span [ngClass]=\\\"{'ng-chat-participant-status': true, 'online': user.status == ChatParticipantStatus.Online, 'busy': user.status == ChatParticipantStatus.Busy, 'away': user.status == ChatParticipantStatus.Away, 'offline': user.status == ChatParticipantStatus.Offline}\\\" title=\\\"{{chatParticipantStatusDescriptor(user.status, localization)}}\\\"></span>\\r\\n\\t\\t\\t\\t<span *ngIf=\\\"unreadMessagesTotalByParticipant(user).length > 0\\\" class=\\\"ng-chat-unread-messages-count unread-messages-counter-container primary-text\\\">{{unreadMessagesTotalByParticipant(user)}}</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</li>\\r\\n\\t</ul>\\r\\n</div>\", encapsulation: ViewEncapsulation.None, styles: [\"#ng-chat-people{position:relative;width:240px;height:360px;border-width:1px;border-style:solid;margin-right:20px;box-shadow:0 4px 8px rgba(0,0,0,.25);border-bottom:0}#ng-chat-people.ng-chat-people-collapsed{height:30px}#ng-chat-search_friend{display:block;padding:7px 10px;width:calc(100% - 20px);margin:10px auto 0;font-size:.9em;-webkit-appearance:searchfield}#ng-chat-users{padding:0 10px;list-style:none;margin:0;overflow:auto;position:absolute;top:42px;bottom:0;width:100%;box-sizing:border-box}#ng-chat-users.offset-search{top:84px}#ng-chat-users .ng-chat-users-checkbox{float:left;margin-right:5px;margin-top:8px}#ng-chat-users li{clear:both;margin-bottom:10px;overflow:hidden;cursor:pointer;max-height:30px}#ng-chat-users li>.ng-chat-friends-list-selectable-offset{margin-left:22px}#ng-chat-users li .ng-chat-friends-list-container{display:inline-block;width:100%}#ng-chat-users li>.ng-chat-friends-list-selectable-offset.ng-chat-friends-list-container{display:block;width:auto}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper,#ng-chat-users li .ng-chat-friends-list-container>img.avatar{float:left;margin-right:5px;border-radius:25px}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper>i{color:#fff;transform:scale(.7)}#ng-chat-users li .ng-chat-friends-list-container>strong{float:left;line-height:30px;font-size:.8em;max-width:57%;max-height:30px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}#ng-chat-users li .ng-chat-friends-list-container>.ng-chat-participant-status{float:right}.ng-chat-people-actions{position:absolute;top:4px;right:5px;margin:0;padding:0;z-index:2}.ng-chat-people-actions>a.ng-chat-people-action{display:inline-block;width:21px;height:21px;margin-right:8px;text-decoration:none;border:none;border-radius:25px;padding:1px}@media only screen and (max-width:581px){#ng-chat-people{width:300px;height:360px;margin-right:0}}\"] }]\n    }], function () { return []; }, { participantsInteractedWith: [{\n            type: Input\n        }], onParticipantClicked: [{\n            type: Output\n        }], onOptionPromptCanceled: [{\n            type: Output\n        }], onOptionPromptConfirmed: [{\n            type: Output\n        }], isCollapsed: [{\n            type: Input\n        }], participants: [{\n            type: Input\n        }], participantsResponse: [{\n            type: Input\n        }], windows: [{\n            type: Input\n        }], userId: [{\n            type: Input\n        }], localization: [{\n            type: Input\n        }], shouldDisplay: [{\n            type: Input\n        }], searchEnabled: [{\n            type: Input\n        }], currentActiveOption: [{\n            type: Input\n        }] }); })();\n\nclass NgChatWindowComponent {\r\n    constructor() {\r\n        this.emojisEnabled = true;\r\n        this.linkfyEnabled = true;\r\n        this.showMessageDate = true;\r\n        this.messageDatePipeFormat = \"short\";\r\n        this.hasPagedHistory = true;\r\n        this.onChatWindowClosed = new EventEmitter();\r\n        this.onMessagesSeen = new EventEmitter();\r\n        this.onMessageSent = new EventEmitter();\r\n        this.onTabTriggered = new EventEmitter();\r\n        this.onOptionTriggered = new EventEmitter();\r\n        this.onLoadHistoryTriggered = new EventEmitter();\r\n        // File upload state\r\n        this.fileUploadersInUse = []; // Id bucket of uploaders in use\r\n        // Exposes enums and functions for the ng-template\r\n        this.ChatParticipantType = ChatParticipantType;\r\n        this.ChatParticipantStatus = ChatParticipantStatus;\r\n        this.MessageType = MessageType;\r\n        this.chatParticipantStatusDescriptor = chatParticipantStatusDescriptor;\r\n    }\r\n    defaultWindowOptions(currentWindow) {\r\n        if (this.showOptions && currentWindow.participant.participantType == ChatParticipantType.User) {\r\n            return [{\r\n                    isActive: false,\r\n                    chattingTo: currentWindow,\r\n                    validateContext: (participant) => {\r\n                        return participant.participantType == ChatParticipantType.User;\r\n                    },\r\n                    displayLabel: 'Add People' // TODO: Localize this\r\n                }];\r\n        }\r\n        return [];\r\n    }\r\n    // Asserts if a user avatar is visible in a chat cluster\r\n    isAvatarVisible(window, message, index) {\r\n        if (message.fromId != this.userId) {\r\n            if (index == 0) {\r\n                return true; // First message, good to show the thumbnail\r\n            }\r\n            else {\r\n                // Check if the previous message belongs to the same user, if it belongs there is no need to show the avatar again to form the message cluster\r\n                if (window.messages[index - 1].fromId != message.fromId) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    getChatWindowAvatar(participant, message) {\r\n        if (participant.participantType == ChatParticipantType.User) {\r\n            return participant.avatar;\r\n        }\r\n        else if (participant.participantType == ChatParticipantType.Group) {\r\n            let group = participant;\r\n            let userIndex = group.chattingTo.findIndex(x => x.id == message.fromId);\r\n            return group.chattingTo[userIndex >= 0 ? userIndex : 0].avatar;\r\n        }\r\n        return null;\r\n    }\r\n    isUploadingFile(window) {\r\n        const fileUploadInstanceId = this.getUniqueFileUploadInstanceId(window);\r\n        return this.fileUploadersInUse.indexOf(fileUploadInstanceId) > -1;\r\n    }\r\n    // Generates a unique file uploader id for each participant\r\n    getUniqueFileUploadInstanceId(window) {\r\n        if (window && window.participant) {\r\n            return `ng-chat-file-upload-${window.participant.id}`;\r\n        }\r\n        return 'ng-chat-file-upload';\r\n    }\r\n    unreadMessagesTotal(window) {\r\n        return MessageCounter.unreadMessagesTotal(window, this.userId);\r\n    }\r\n    // Scrolls a chat window message flow to the bottom\r\n    scrollChatWindow(window, direction) {\r\n        if (!window.isCollapsed) {\r\n            setTimeout(() => {\r\n                if (this.chatMessages) {\r\n                    let element = this.chatMessages.nativeElement;\r\n                    let position = (direction === ScrollDirection.Top) ? 0 : element.scrollHeight;\r\n                    element.scrollTop = position;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    activeOptionTrackerChange(option) {\r\n        this.onOptionTriggered.emit(option);\r\n    }\r\n    // Triggers native file upload for file selection from the user\r\n    triggerNativeFileUpload(window) {\r\n        if (window) {\r\n            if (this.nativeFileInput)\r\n                this.nativeFileInput.nativeElement.click();\r\n        }\r\n    }\r\n    // Toggles a window focus on the focus/blur of a 'newMessage' input\r\n    toggleWindowFocus(window) {\r\n        window.hasFocus = !window.hasFocus;\r\n        if (window.hasFocus) {\r\n            const unreadMessages = window.messages\r\n                .filter(message => message.dateSeen == null\r\n                && (message.toId == this.userId || window.participant.participantType === ChatParticipantType.Group));\r\n            if (unreadMessages && unreadMessages.length > 0) {\r\n                this.onMessagesSeen.emit(unreadMessages);\r\n            }\r\n        }\r\n    }\r\n    markMessagesAsRead(messages) {\r\n        this.onMessagesSeen.emit(messages);\r\n    }\r\n    fetchMessageHistory(window) {\r\n        this.onLoadHistoryTriggered.emit(window);\r\n    }\r\n    // Closes a chat window via the close 'X' button\r\n    onCloseChatWindow() {\r\n        this.onChatWindowClosed.emit({ closedWindow: this.window, closedViaEscapeKey: false });\r\n    }\r\n    /*  Monitors pressed keys on a chat window\r\n        - Dispatches a message when the ENTER key is pressed\r\n        - Tabs between windows on TAB or SHIFT + TAB\r\n        - Closes the current focused window on ESC\r\n    */\r\n    onChatInputTyped(event, window) {\r\n        switch (event.keyCode) {\r\n            case 13:\r\n                if (window.newMessage && window.newMessage.trim() != \"\") {\r\n                    let message = new Message();\r\n                    message.fromId = this.userId;\r\n                    message.toId = window.participant.id;\r\n                    message.message = window.newMessage;\r\n                    message.dateSent = new Date();\r\n                    window.messages.push(message);\r\n                    this.onMessageSent.emit(message);\r\n                    window.newMessage = \"\"; // Resets the new message input\r\n                    this.scrollChatWindow(window, ScrollDirection.Bottom);\r\n                }\r\n                break;\r\n            case 9:\r\n                event.preventDefault();\r\n                this.onTabTriggered.emit({ triggeringWindow: window, shiftKeyPressed: event.shiftKey });\r\n                break;\r\n            case 27:\r\n                this.onChatWindowClosed.emit({ closedWindow: window, closedViaEscapeKey: true });\r\n                break;\r\n        }\r\n    }\r\n    // Toggles a chat window visibility between maximized/minimized\r\n    onChatWindowClicked(window) {\r\n        window.isCollapsed = !window.isCollapsed;\r\n        this.scrollChatWindow(window, ScrollDirection.Bottom);\r\n    }\r\n    clearInUseFileUploader(fileUploadInstanceId) {\r\n        const uploaderInstanceIdIndex = this.fileUploadersInUse.indexOf(fileUploadInstanceId);\r\n        if (uploaderInstanceIdIndex > -1) {\r\n            this.fileUploadersInUse.splice(uploaderInstanceIdIndex, 1);\r\n        }\r\n    }\r\n    // Handles file selection and uploads the selected file using the file upload adapter\r\n    onFileChosen(window) {\r\n        const fileUploadInstanceId = this.getUniqueFileUploadInstanceId(window);\r\n        const uploadElementRef = this.nativeFileInput;\r\n        if (uploadElementRef) {\r\n            const file = uploadElementRef.nativeElement.files[0];\r\n            this.fileUploadersInUse.push(fileUploadInstanceId);\r\n            this.fileUploadAdapter.uploadFile(file, window.participant.id)\r\n                .subscribe(fileMessage => {\r\n                this.clearInUseFileUploader(fileUploadInstanceId);\r\n                fileMessage.fromId = this.userId;\r\n                // Push file message to current user window   \r\n                window.messages.push(fileMessage);\r\n                this.onMessageSent.emit(fileMessage);\r\n                this.scrollChatWindow(window, ScrollDirection.Bottom);\r\n                // Resets the file upload element\r\n                uploadElementRef.nativeElement.value = '';\r\n            }, (error) => {\r\n                this.clearInUseFileUploader(fileUploadInstanceId);\r\n                // Resets the file upload element\r\n                uploadElementRef.nativeElement.value = '';\r\n                // TODO: Invoke a file upload adapter error here\r\n            });\r\n        }\r\n    }\r\n}\nNgChatWindowComponent.ɵfac = function NgChatWindowComponent_Factory(t) { return new (t || NgChatWindowComponent)(); };\nNgChatWindowComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgChatWindowComponent, selectors: [[\"ng-chat-window\"]], viewQuery: function NgChatWindowComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n        ɵngcc0.ɵɵviewQuery(_c9, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chatMessages = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nativeFileInput = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chatWindowInput = _t.first);\n    } }, inputs: { emojisEnabled: \"emojisEnabled\", linkfyEnabled: \"linkfyEnabled\", showMessageDate: \"showMessageDate\", messageDatePipeFormat: \"messageDatePipeFormat\", hasPagedHistory: \"hasPagedHistory\", fileUploadAdapter: \"fileUploadAdapter\", window: \"window\", userId: \"userId\", localization: \"localization\", showOptions: \"showOptions\" }, outputs: { onChatWindowClosed: \"onChatWindowClosed\", onMessagesSeen: \"onMessagesSeen\", onMessageSent: \"onMessageSent\", onTabTriggered: \"onTabTriggered\", onOptionTriggered: \"onOptionTriggered\", onLoadHistoryTriggered: \"onLoadHistoryTriggered\" }, decls: 2, vars: 2, consts: [[4, \"ngIf\"], [1, \"ng-chat-title\", \"secondary-background\"], [1, \"ng-chat-title-visibility-toggle-area\", 3, \"click\"], [3, \"title\"], [3, \"ngClass\", \"title\"], [\"class\", \"ng-chat-unread-messages-count unread-messages-counter-container primary-text\", 4, \"ngIf\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-close\", \"primary-text\", 3, \"click\"], [1, \"ng-chat-unread-messages-count\", \"unread-messages-counter-container\", \"primary-text\"], [3, \"ngClass\", \"options\", \"activeOptionTrackerChange\"], [1, \"ng-chat-messages\", \"primary-background\"], [\"chatMessages\", \"\"], [\"class\", \"ng-chat-loading-wrapper\", 4, \"ngIf\"], [\"class\", \"ng-chat-load-history\", 4, \"ngIf\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"ng-chat-footer\", \"primary-outline-color\", \"primary-background\"], [\"type\", \"text\", 3, \"ngModel\", \"placeholder\", \"ngClass\", \"ngModelChange\", \"keydown\", \"blur\", \"focus\"], [\"chatWindowInput\", \"\"], [1, \"ng-chat-loading-wrapper\"], [1, \"loader\"], [1, \"ng-chat-load-history\"], [1, \"load-history-action\", 3, \"click\"], [3, \"ngClass\"], [3, \"ngSwitch\"], [3, \"ngClass\", 4, \"ngSwitchCase\"], [\"class\", \"icon-wrapper\", 4, \"ngIf\"], [\"alt\", \"\", \"class\", \"avatar\", \"height\", \"30\", \"width\", \"30\", 3, \"src\", 4, \"ngIf\"], [\"class\", \"ng-chat-participant-name\", 4, \"ngIf\"], [1, \"icon-wrapper\"], [1, \"user-icon\"], [\"alt\", \"\", \"height\", \"30\", \"width\", \"30\", 1, \"avatar\", 3, \"src\"], [1, \"ng-chat-participant-name\"], [3, \"innerHtml\"], [\"class\", \"message-sent-date\", 4, \"ngIf\"], [1, \"message-sent-date\"], [1, \"image-message\", 3, \"src\"], [1, \"file-message-icon-container\"], [1, \"paperclip-icon\"], [\"target\", \"_blank\", \"rel\", \"noopener noreferrer\", \"download\", \"\", 1, \"file-details\", 3, \"click\"], [1, \"file-message-title\"], [\"class\", \"file-message-size\", 4, \"ngIf\"], [1, \"file-message-size\"], [\"class\", \"btn-add-file\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"file\", 2, \"display\", \"none\", 3, \"change\"], [\"nativeFileInput\", \"\"], [\"class\", \"loader\", 4, \"ngIf\"], [1, \"btn-add-file\", 3, \"click\"], [1, \"upload-icon\"]], template: function NgChatWindowComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgChatWindowComponent_ng_container_0_Template, 9, 10, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, NgChatWindowComponent_ng_container_1_Template, 20, 24, \"ng-container\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.window && ctx.window.isCollapsed);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.window && !ctx.window.isCollapsed);\n    } }, dependencies: [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase, ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, NgChatOptionsComponent, ɵngcc2.DatePipe, EmojifyPipe, LinkfyPipe, SanitizePipe, GroupMessageDisplayNamePipe], styles: [\".ng-chat-window{right:260px;height:360px;z-index:999;bottom:0;width:300px;position:fixed;border-width:1px;border-style:solid;border-bottom:0;box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-window-collapsed{height:30px!important}.ng-chat-window .ng-chat-footer{box-sizing:border-box;padding:0;display:block;height:calc(10%);width:100%;border:none;border-top:1px solid transparent;border-color:inherit}.ng-chat-window .ng-chat-footer>input{font-size:.8em;box-sizing:border-box;padding:0 5px;display:block;height:100%;width:100%;border:none}.ng-chat-window .ng-chat-footer>input.has-side-action{width:calc(100% - 30px)}.ng-chat-window .ng-chat-footer .btn-add-file{position:absolute;right:5px;bottom:7px;height:20px;width:20px;cursor:pointer}.ng-chat-window .ng-chat-footer .loader{position:absolute;right:14px;bottom:8px}.ng-chat-window .ng-chat-load-history{height:30px;text-align:center;font-size:.8em}.ng-chat-window .ng-chat-load-history>a{border-radius:15px;cursor:pointer;padding:5px 10px}.ng-chat-window .ng-chat-messages{padding:10px;width:100%;height:calc(90% - 30px);box-sizing:border-box;position:relative;overflow:auto}.ng-chat-window .ng-chat-messages .ng-chat-message{clear:both}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper,.ng-chat-window .ng-chat-messages .ng-chat-message>img.avatar{position:absolute;left:10px;border-radius:25px}.ng-chat-window .ng-chat-messages .ng-chat-message .ng-chat-participant-name{display:inline-block;margin-left:40px;padding-bottom:5px;font-weight:700;font-size:.8em;text-overflow:ellipsis;max-width:180px}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px;padding:0}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper>i{color:#fff;transform:scale(.7)}.ng-chat-window .ng-chat-messages .ng-chat-message .message-sent-date{font-size:.8em;display:block;text-align:right;margin-top:5px}.ng-chat-window .ng-chat-messages .ng-chat-message>div{float:right;width:182px;border-radius:5px;padding:10px;margin-top:0;margin-bottom:5px;font-size:.9em;word-wrap:break-word}.ng-chat-window .ng-chat-messages .ng-chat-message.ng-chat-message-received>div.received-chat-message-container{float:left;margin-left:40px;padding-top:7px;padding-bottom:7px;border-style:solid;border-width:3px;margin-top:0;margin-bottom:5px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container{float:right;width:202px;border-style:solid;border-width:3px;border-radius:5px;overflow:hidden;margin-bottom:5px;display:block;text-decoration:none;font-size:.9em;padding:0;box-sizing:border-box}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container.received{float:left;margin-left:40px;width:208px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container{width:20px;height:35px;padding:10px 5px;float:left}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container i{margin-top:8px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details{float:left;padding:10px;width:calc(100% - 60px);color:currentColor;text-decoration:none}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details:hover{text-decoration:underline}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details span{display:block;width:100%;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-title{font-weight:700}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-size{font-size:.8em;margin-top:5px}.ng-chat-window .image-message{width:100%;height:auto}@media only screen and (max-width:581px){.ng-chat-window{position:static}}\"], encapsulation: 2 });\r\nNgChatWindowComponent.ctorParameters = () => [];\r\nNgChatWindowComponent.propDecorators = {\r\n    fileUploadAdapter: [{ type: Input }],\r\n    window: [{ type: Input }],\r\n    userId: [{ type: Input }],\r\n    localization: [{ type: Input }],\r\n    showOptions: [{ type: Input }],\r\n    emojisEnabled: [{ type: Input }],\r\n    linkfyEnabled: [{ type: Input }],\r\n    showMessageDate: [{ type: Input }],\r\n    messageDatePipeFormat: [{ type: Input }],\r\n    hasPagedHistory: [{ type: Input }],\r\n    onChatWindowClosed: [{ type: Output }],\r\n    onMessagesSeen: [{ type: Output }],\r\n    onMessageSent: [{ type: Output }],\r\n    onTabTriggered: [{ type: Output }],\r\n    onOptionTriggered: [{ type: Output }],\r\n    onLoadHistoryTriggered: [{ type: Output }],\r\n    chatMessages: [{ type: ViewChild, args: ['chatMessages',] }],\r\n    nativeFileInput: [{ type: ViewChild, args: ['nativeFileInput',] }],\r\n    chatWindowInput: [{ type: ViewChild, args: ['chatWindowInput',] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChatWindowComponent, [{\n        type: Component,\n        args: [{ selector: 'ng-chat-window', template: \"<ng-container *ngIf=\\\"window && window.isCollapsed\\\">\\r\\n\\t<div class=\\\"ng-chat-title secondary-background\\\">\\r\\n\\t\\t<div class=\\\"ng-chat-title-visibility-toggle-area\\\" (click)=\\\"onChatWindowClicked(window)\\\">\\r\\n\\t\\t\\t<strong title=\\\"{{window.participant.displayName}}\\\">\\r\\n\\t\\t\\t\\t{{window.participant.displayName}}\\r\\n\\t\\t\\t</strong>\\r\\n\\t\\t\\t<span [ngClass]=\\\"{'ng-chat-participant-status': true, 'online': window.participant.status == ChatParticipantStatus.Online, 'busy': window.participant.status == ChatParticipantStatus.Busy, 'away': window.participant.status == ChatParticipantStatus.Away, 'offline': window.participant.status == ChatParticipantStatus.Offline}\\\" title=\\\"{{chatParticipantStatusDescriptor(window.participant.status, localization)}}\\\"></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"unreadMessagesTotal(window).length > 0\\\" class=\\\"ng-chat-unread-messages-count unread-messages-counter-container primary-text\\\">{{unreadMessagesTotal(window)}}</span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-close primary-text\\\" (click)=\\\"onCloseChatWindow()\\\">X</a>\\r\\n\\t</div>\\r\\n</ng-container>\\r\\n<ng-container *ngIf=\\\"window && !window.isCollapsed\\\">\\r\\n\\t<div class=\\\"ng-chat-title secondary-background\\\">\\r\\n\\t\\t<div class=\\\"ng-chat-title-visibility-toggle-area\\\" (click)=\\\"onChatWindowClicked(window)\\\">\\r\\n\\t\\t\\t<strong title=\\\"{{window.participant.displayName}}\\\">\\r\\n\\t\\t\\t\\t{{window.participant.displayName}}\\r\\n\\t\\t\\t</strong>\\r\\n\\t\\t\\t<span [ngClass]=\\\"{'ng-chat-participant-status': true, 'online': window.participant.status == ChatParticipantStatus.Online, 'busy': window.participant.status == ChatParticipantStatus.Busy, 'away': window.participant.status == ChatParticipantStatus.Away, 'offline': window.participant.status == ChatParticipantStatus.Offline}\\\" title=\\\"{{chatParticipantStatusDescriptor(window.participant.status, localization)}}\\\"></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"unreadMessagesTotal(window).length > 0\\\" class=\\\"ng-chat-unread-messages-count unread-messages-counter-container primary-text\\\">{{unreadMessagesTotal(window)}}</span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<a href=\\\"javascript:void(0);\\\" class=\\\"ng-chat-close primary-text\\\" (click)=\\\"onCloseChatWindow()\\\">X</a>\\r\\n\\t\\t<ng-chat-options [ngClass]=\\\"'ng-chat-options-container'\\\" [options]=\\\"defaultWindowOptions(window)\\\" (activeOptionTrackerChange)=\\\"activeOptionTrackerChange($event)\\\"></ng-chat-options>\\r\\n\\t</div>\\r\\n\\t<div #chatMessages class=\\\"ng-chat-messages primary-background\\\">\\r\\n\\t\\t<div *ngIf=\\\"window.isLoadingHistory\\\" class=\\\"ng-chat-loading-wrapper\\\">\\r\\n\\t\\t\\t<div class=\\\"loader\\\">Loading history...</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"hasPagedHistory && window.hasMoreMessages && !window.isLoadingHistory\\\" class=\\\"ng-chat-load-history\\\">\\r\\n\\t\\t\\t<a class=\\\"load-history-action\\\" (click)=\\\"fetchMessageHistory(window)\\\">{{localization.loadMessageHistoryPlaceholder}}</a>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div *ngFor=\\\"let message of window.messages; let i = index\\\" [ngClass]=\\\"{'ng-chat-message': true, 'ng-chat-message-received': message.fromId != userId}\\\">\\r\\n\\t\\t\\t<ng-container *ngIf=\\\"isAvatarVisible(window, message, i)\\\">\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"!getChatWindowAvatar(window.participant, message)\\\" class=\\\"icon-wrapper\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"user-icon\\\"></i>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<img *ngIf=\\\"getChatWindowAvatar(window.participant, message)\\\" alt=\\\"\\\" class=\\\"avatar\\\" height=\\\"30\\\" width=\\\"30\\\" [src]=\\\"getChatWindowAvatar(window.participant, message) | sanitize\\\" />\\r\\n\\t\\t\\t\\t<span *ngIf=\\\"window.participant.participantType == ChatParticipantType.Group\\\" class=\\\"ng-chat-participant-name\\\">{{window.participant | groupMessageDisplayName:message}}</span>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t<ng-container [ngSwitch]=\\\"message.type\\\">\\r\\n\\t\\t\\t\\t<div *ngSwitchCase=\\\"MessageType.Text\\\" [ngClass]=\\\"{'sent-chat-message-container': message.fromId == userId, 'received-chat-message-container': message.fromId != userId}\\\">\\r\\n          <span [innerHtml]=\\\"message.message | emojify:emojisEnabled | linkfy:linkfyEnabled\\\"></span>\\r\\n\\t\\t\\t\\t\\t<span *ngIf=\\\"showMessageDate && message.dateSent\\\" class=\\\"message-sent-date\\\">{{message.dateSent | date:messageDatePipeFormat}}</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n        <div *ngSwitchCase=\\\"MessageType.Image\\\" [ngClass]=\\\"{'sent-chat-message-container': message.fromId == userId, 'received-chat-message-container': message.fromId != userId}\\\">\\r\\n\\r\\n          <img src=\\\"{{message.message}}\\\" class=\\\"image-message\\\" />\\r\\n\\r\\n\\t\\t\\t\\t\\t<span *ngIf=\\\"showMessageDate && message.dateSent\\\" class=\\\"message-sent-date\\\">{{message.dateSent | date:messageDatePipeFormat}}</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div *ngSwitchCase=\\\"MessageType.File\\\" [ngClass]=\\\"{'file-message-container': true, 'received': message.fromId != userId}\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"file-message-icon-container\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"paperclip-icon\\\"></i>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<a class=\\\"file-details\\\" [attr.href]=\\\"message.downloadUrl\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" (click)=\\\"this.markMessagesAsRead([message])\\\" download>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"file-message-title\\\" [attr.title]=\\\"message.message\\\">{{message.message}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"message.fileSizeInBytes\\\"  class=\\\"file-message-size\\\">{{message.fileSizeInBytes}} Bytes</span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"ng-chat-footer primary-outline-color primary-background\\\">\\r\\n\\t\\t<input #chatWindowInput\\r\\n\\t\\t\\ttype=\\\"text\\\"\\r\\n\\t\\t\\t[ngModel]=\\\"window.newMessage | emojify:emojisEnabled\\\"\\r\\n\\t\\t\\t(ngModelChange)=\\\"window.newMessage=$event\\\"\\r\\n\\t\\t\\t[placeholder]=\\\"localization.messagePlaceholder\\\"\\r\\n\\t\\t\\t[ngClass]=\\\"{'chat-window-input': true, 'has-side-action': fileUploadAdapter}\\\"\\r\\n\\t\\t\\t(keydown)=\\\"onChatInputTyped($event, window)\\\"\\r\\n\\t\\t\\t(blur)=\\\"toggleWindowFocus(window)\\\"\\r\\n\\t\\t\\t(focus)=\\\"toggleWindowFocus(window)\\\"/>\\r\\n\\r\\n\\t\\t<!-- File Upload -->\\r\\n\\t\\t<ng-container *ngIf=\\\"fileUploadAdapter\\\">\\r\\n\\t\\t\\t<a *ngIf=\\\"!isUploadingFile(window)\\\" class=\\\"btn-add-file\\\" (click)=\\\"triggerNativeFileUpload(window)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"upload-icon\\\"></i>\\r\\n\\t\\t\\t</a>\\r\\n\\t\\t\\t<input\\r\\n\\t\\t\\t\\ttype=\\\"file\\\"\\r\\n\\t\\t\\t\\t#nativeFileInput\\r\\n\\t\\t\\t\\tstyle=\\\"display: none;\\\"\\r\\n\\t\\t\\t\\t[attr.id]=\\\"getUniqueFileUploadInstanceId(window)\\\"\\r\\n\\t\\t\\t\\t(change)=\\\"onFileChosen(window)\\\" />\\r\\n\\t\\t\\t<div *ngIf=\\\"isUploadingFile(window)\\\" class=\\\"loader\\\"></div>\\r\\n\\t\\t</ng-container>\\r\\n\\t</div>\\r\\n</ng-container>\\r\\n\", encapsulation: ViewEncapsulation.None, styles: [\".ng-chat-window{right:260px;height:360px;z-index:999;bottom:0;width:300px;position:fixed;border-width:1px;border-style:solid;border-bottom:0;box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-window-collapsed{height:30px!important}.ng-chat-window .ng-chat-footer{box-sizing:border-box;padding:0;display:block;height:calc(10%);width:100%;border:none;border-top:1px solid transparent;border-color:inherit}.ng-chat-window .ng-chat-footer>input{font-size:.8em;box-sizing:border-box;padding:0 5px;display:block;height:100%;width:100%;border:none}.ng-chat-window .ng-chat-footer>input.has-side-action{width:calc(100% - 30px)}.ng-chat-window .ng-chat-footer .btn-add-file{position:absolute;right:5px;bottom:7px;height:20px;width:20px;cursor:pointer}.ng-chat-window .ng-chat-footer .loader{position:absolute;right:14px;bottom:8px}.ng-chat-window .ng-chat-load-history{height:30px;text-align:center;font-size:.8em}.ng-chat-window .ng-chat-load-history>a{border-radius:15px;cursor:pointer;padding:5px 10px}.ng-chat-window .ng-chat-messages{padding:10px;width:100%;height:calc(90% - 30px);box-sizing:border-box;position:relative;overflow:auto}.ng-chat-window .ng-chat-messages .ng-chat-message{clear:both}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper,.ng-chat-window .ng-chat-messages .ng-chat-message>img.avatar{position:absolute;left:10px;border-radius:25px}.ng-chat-window .ng-chat-messages .ng-chat-message .ng-chat-participant-name{display:inline-block;margin-left:40px;padding-bottom:5px;font-weight:700;font-size:.8em;text-overflow:ellipsis;max-width:180px}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px;padding:0}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper>i{color:#fff;transform:scale(.7)}.ng-chat-window .ng-chat-messages .ng-chat-message .message-sent-date{font-size:.8em;display:block;text-align:right;margin-top:5px}.ng-chat-window .ng-chat-messages .ng-chat-message>div{float:right;width:182px;border-radius:5px;padding:10px;margin-top:0;margin-bottom:5px;font-size:.9em;word-wrap:break-word}.ng-chat-window .ng-chat-messages .ng-chat-message.ng-chat-message-received>div.received-chat-message-container{float:left;margin-left:40px;padding-top:7px;padding-bottom:7px;border-style:solid;border-width:3px;margin-top:0;margin-bottom:5px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container{float:right;width:202px;border-style:solid;border-width:3px;border-radius:5px;overflow:hidden;margin-bottom:5px;display:block;text-decoration:none;font-size:.9em;padding:0;box-sizing:border-box}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container.received{float:left;margin-left:40px;width:208px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container{width:20px;height:35px;padding:10px 5px;float:left}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container i{margin-top:8px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details{float:left;padding:10px;width:calc(100% - 60px);color:currentColor;text-decoration:none}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details:hover{text-decoration:underline}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details span{display:block;width:100%;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-title{font-weight:700}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-size{font-size:.8em;margin-top:5px}.ng-chat-window .image-message{width:100%;height:auto}@media only screen and (max-width:581px){.ng-chat-window{position:static}}\"] }]\n    }], function () { return []; }, { emojisEnabled: [{\n            type: Input\n        }], linkfyEnabled: [{\n            type: Input\n        }], showMessageDate: [{\n            type: Input\n        }], messageDatePipeFormat: [{\n            type: Input\n        }], hasPagedHistory: [{\n            type: Input\n        }], onChatWindowClosed: [{\n            type: Output\n        }], onMessagesSeen: [{\n            type: Output\n        }], onMessageSent: [{\n            type: Output\n        }], onTabTriggered: [{\n            type: Output\n        }], onOptionTriggered: [{\n            type: Output\n        }], onLoadHistoryTriggered: [{\n            type: Output\n        }], fileUploadAdapter: [{\n            type: Input\n        }], window: [{\n            type: Input\n        }], userId: [{\n            type: Input\n        }], localization: [{\n            type: Input\n        }], showOptions: [{\n            type: Input\n        }], chatMessages: [{\n            type: ViewChild,\n            args: ['chatMessages']\n        }], nativeFileInput: [{\n            type: ViewChild,\n            args: ['nativeFileInput']\n        }], chatWindowInput: [{\n            type: ViewChild,\n            args: ['chatWindowInput']\n        }] }); })();\n\nclass NgChatModule {\r\n}\nNgChatModule.ɵfac = function NgChatModule_Factory(t) { return new (t || NgChatModule)(); };\nNgChatModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgChatModule });\nNgChatModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule, FormsModule, HttpClientModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgChatModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, FormsModule, HttpClientModule],\n                declarations: [\n                    NgChat,\n                    EmojifyPipe,\n                    LinkfyPipe,\n                    SanitizePipe,\n                    GroupMessageDisplayNamePipe,\n                    NgChatOptionsComponent,\n                    NgChatFriendsListComponent,\n                    NgChatWindowComponent\n                ],\n                exports: [NgChat]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgChatModule, { declarations: function () { return [NgChat, EmojifyPipe, LinkfyPipe, SanitizePipe, GroupMessageDisplayNamePipe, NgChatOptionsComponent, NgChatFriendsListComponent, NgChatWindowComponent]; }, imports: function () { return [CommonModule, FormsModule, HttpClientModule]; }, exports: function () { return [NgChat]; } }); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ChatAdapter, ChatParticipantStatus, ChatParticipantType, Group, Message, MessageType, NgChatModule, PagedHistoryChatAdapter, ParticipantMetadata, ParticipantResponse, Theme, User, Window, NgChat as ɵa, EmojifyPipe as ɵb, LinkfyPipe as ɵc, SanitizePipe as ɵd, GroupMessageDisplayNamePipe as ɵe, NgChatOptionsComponent as ɵf, NgChatFriendsListComponent as ɵg, NgChatWindowComponent as ɵh };\n\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,iBAA7B;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,iBAAlC,EAAqDC,KAArD,EAA4DC,MAA5D,EAAoEC,YAApE,EAAkFC,YAAlF,EAAgGC,IAAhG,EAAsGC,SAAtG,EAAiHC,QAAjH,QAAiI,eAAjI;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,sBAA7C;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AAEA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,2BAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,gBAAxB;AAEA,MAAMC,GAAG,GAAG,CAAC,YAAD,CAAZ;;AACA,SAASC,sBAAT,CAAgCC,EAAhC,EAAoCC,GAApC,EAAyC;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACnDP,MAAM,CAACS,SAAP,CAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;IACAT,MAAM,CAACU,MAAP,CAAc,CAAd,EAAiB,UAAjB;EACH;;EAAC,IAAIH,EAAE,GAAG,CAAT,EAAY;IACV,MAAMI,MAAM,GAAGX,MAAM,CAACY,aAAP,EAAf;IACAZ,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0Bb,MAAM,CAACc,WAAP,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBH,MAAM,CAACI,WAAhC,CAA1B,EAAwEf,MAAM,CAACgB,qBAA/E;EACH;AAAE;;AACH,MAAMC,GAAG,GAAG,UAAUC,EAAV,EAAc;EAAE,OAAO;IAAE,kBAAkB,IAApB;IAA0B,yBAAyB,IAAnD;IAAyD,4BAA4BA;EAArF,CAAP;AAAmG,CAA/H;;AACA,MAAMC,GAAG,GAAG,UAAUC,EAAV,EAAc;EAAE,OAAO;IAAE,SAASA;EAAX,CAAP;AAAyB,CAArD;;AACA,SAASC,2BAAT,CAAqCd,EAArC,EAAyCC,GAAzC,EAA8C;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACxD,MAAMe,GAAG,GAAGtB,MAAM,CAACuB,gBAAP,EAAZ;;IACAvB,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,gBAAtC,EAAwD,CAAxD,EAA2D,CAA3D;IACAxB,MAAM,CAACyB,UAAP,CAAkB,gBAAlB,EAAoC,SAASC,oEAAT,CAA8EC,MAA9E,EAAsF;MAAE3B,MAAM,CAAC4B,aAAP,CAAqBN,GAArB;MAA2B,MAAMO,MAAM,GAAG7B,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAf;MAAwC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmBD,MAAM,CAACE,oBAAP,CAA4BJ,MAA5B,CAAnB,CAAP;IAAiE,CAAhQ,EAAkQ,eAAlQ,EAAmR,SAASK,mEAAT,CAA6EL,MAA7E,EAAqF;MAAE3B,MAAM,CAAC4B,aAAP,CAAqBN,GAArB;MAA2B,MAAMW,MAAM,GAAGjC,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAf;MAAwC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmBG,MAAM,CAACC,mBAAP,CAA2BP,MAA3B,CAAnB,CAAP;IAAgE,CAA7e,EAA+e,gBAA/e,EAAigB,SAASQ,oEAAT,CAA8ER,MAA9E,EAAsF;MAAE3B,MAAM,CAAC4B,aAAP,CAAqBN,GAArB;MAA2B,MAAMc,MAAM,GAAGpC,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAf;MAAwC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmBM,MAAM,CAACC,oBAAP,CAA4BV,MAA5B,CAAnB,CAAP;IAAiE,CAA7tB,EAA+tB,oBAA/tB,EAAqvB,SAASW,wEAAT,CAAkFX,MAAlF,EAA0F;MAAE3B,MAAM,CAAC4B,aAAP,CAAqBN,GAArB;MAA2B,MAAMiB,OAAO,GAAGvC,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;MAAyC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmBS,OAAO,CAACC,kBAAR,CAA2Bb,MAA3B,CAAnB,CAAP;IAAgE,CAAr9B,EAAu9B,mBAAv9B,EAA4+B,SAASc,uEAAT,CAAiFd,MAAjF,EAAyF;MAAE3B,MAAM,CAAC4B,aAAP,CAAqBN,GAArB;MAA2B,MAAMoB,OAAO,GAAG1C,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;MAAyC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmBY,OAAO,CAACC,uBAAR,CAAgChB,MAAhC,CAAnB,CAAP;IAAqE,CAAhtC,EAAktC,wBAAltC,EAA4uC,SAASiB,4EAAT,CAAsFjB,MAAtF,EAA8F;MAAE3B,MAAM,CAAC4B,aAAP,CAAqBN,GAArB;MAA2B,MAAMuB,OAAO,GAAG7C,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;MAAyC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmBe,OAAO,CAACC,mBAAR,CAA4BnB,MAA5B,CAAnB,CAAP;IAAiE,CAAj9C;IACA3B,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAMyC,SAAS,GAAGxC,GAAG,CAACyC,SAAtB;IACA,MAAMC,IAAI,GAAG1C,GAAG,CAAC2C,KAAjB;IACA,MAAMC,MAAM,GAAGpD,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAf;IACAZ,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6Bb,MAAM,CAACqD,eAAP,CAAuB,EAAvB,EAA2BpC,GAA3B,EAAgC+B,SAAS,CAACM,WAA1C,CAA7B,EAAqF,SAArF,EAAgGtD,MAAM,CAACqD,eAAP,CAAuB,EAAvB,EAA2BlC,GAA3B,EAAgC,CAAC,CAACiC,MAAM,CAACG,eAAR,GAA0BH,MAAM,CAACI,gBAAjC,GAAoD,CAArD,IAA0D,EAA1D,GAA+DJ,MAAM,CAACK,gBAAP,GAA0BP,IAAzF,GAAgG,IAAhI,CAAhG;IACAlD,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,mBAAlB,EAAuCuC,MAAM,CAACO,iBAA9C,EAAiE,cAAjE,EAAiFP,MAAM,CAACQ,YAAxF,EAAsG,QAAtG,EAAgHR,MAAM,CAACS,MAAvH,EAA+H,QAA/H,EAAyIb,SAAzI,EAAoJ,aAApJ,EAAmKI,MAAM,CAACU,YAA1K,EAAwL,eAAxL,EAAyMV,MAAM,CAACW,aAAhN,EAA+N,eAA/N,EAAgPX,MAAM,CAACY,aAAvP,EAAsQ,iBAAtQ,EAAyRZ,MAAM,CAACa,eAAhS,EAAiT,uBAAjT,EAA0Ub,MAAM,CAACc,qBAAjV,EAAwW,iBAAxW,EAA2Xd,MAAM,CAACe,eAAlY;EACH;AAAE;;AACH,SAASC,qBAAT,CAA+B7D,EAA/B,EAAmCC,GAAnC,EAAwC;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAClD,MAAM8D,IAAI,GAAGrE,MAAM,CAACuB,gBAAP,EAAb;;IACAvB,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,sBAAtC,EAA8D,CAA9D;IACAxB,MAAM,CAACyB,UAAP,CAAkB,sBAAlB,EAA0C,SAAS6C,0EAAT,CAAoF3C,MAApF,EAA4F;MAAE3B,MAAM,CAAC4B,aAAP,CAAqByC,IAArB;MAA4B,MAAME,OAAO,GAAGvE,MAAM,CAACY,aAAP,EAAhB;MAAwC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmByC,OAAO,CAACC,mCAAR,CAA4C7C,MAA5C,CAAnB,CAAP;IAAiF,CAA7R,EAA+R,wBAA/R,EAAyT,SAAS8C,4EAAT,GAAwF;MAAEzE,MAAM,CAAC4B,aAAP,CAAqByC,IAArB;MAA4B,MAAMK,OAAO,GAAG1E,MAAM,CAACY,aAAP,EAAhB;MAAwC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmB4C,OAAO,CAACC,sBAAR,EAAnB,CAAP;IAA8D,CAArhB,EAAuhB,yBAAvhB,EAAkjB,SAASC,6EAAT,CAAuFjD,MAAvF,EAA+F;MAAE3B,MAAM,CAAC4B,aAAP,CAAqByC,IAArB;MAA4B,MAAMQ,OAAO,GAAG7E,MAAM,CAACY,aAAP,EAAhB;MAAwC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmB+C,OAAO,CAACC,uBAAR,CAAgCnD,MAAhC,CAAnB,CAAP;IAAqE,CAA5xB;IACA3B,MAAM,CAAC+C,YAAP;IACA/C,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqB1D,2BAArB,EAAkD,CAAlD,EAAqD,EAArD,EAAyD,KAAzD,EAAgE,CAAhE;IACArB,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAMyE,MAAM,GAAGhF,MAAM,CAACY,aAAP,EAAf;IACAZ,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6BmE,MAAM,CAACC,KAApC;IACAjF,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,cAAlB,EAAkCmE,MAAM,CAACpB,YAAzC,EAAuD,eAAvD,EAAwE,CAACoB,MAAM,CAACzB,eAAhF,EAAiG,QAAjG,EAA2GyB,MAAM,CAACnB,MAAlH,EAA0H,aAA1H,EAAyImB,MAAM,CAAC1B,WAAhJ,EAA6J,eAA7J,EAA8K0B,MAAM,CAACE,aAArL,EAAoM,cAApM,EAAoNF,MAAM,CAACG,YAA3N,EAAyO,sBAAzO,EAAiQH,MAAM,CAACI,oBAAxQ,EAA8R,4BAA9R,EAA4TJ,MAAM,CAACK,0BAAnU,EAA+V,SAA/V,EAA0WL,MAAM,CAACM,OAAjX,EAA0X,qBAA1X,EAAiZN,MAAM,CAACO,mBAAxZ;IACAvF,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6BmE,MAAM,CAACM,OAApC;EACH;AAAE;;AACH,SAASE,yCAAT,CAAmDjF,EAAnD,EAAuDC,GAAvD,EAA4D;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACtE,MAAMkF,GAAG,GAAGzF,MAAM,CAACuB,gBAAP,EAAZ;;IACAvB,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,GAAzB,EAA8B,CAA9B;IACAxB,MAAM,CAACyB,UAAP,CAAkB,OAAlB,EAA2B,SAASiE,4DAAT,GAAwE;MAAE,MAAMC,WAAW,GAAG3F,MAAM,CAAC4B,aAAP,CAAqB6D,GAArB,CAApB;MAA+C,MAAMG,SAAS,GAAGD,WAAW,CAAC1C,SAA9B;MAAyC,MAAM4C,MAAM,GAAG7F,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAf;MAAwC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmB+D,MAAM,CAACC,eAAP,CAAuBF,SAAvB,CAAnB,CAAP;IAA+D,CAApS;IACA5F,MAAM,CAAC+F,MAAP,CAAc,CAAd;IACA/F,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAMqF,SAAS,GAAGpF,GAAG,CAACyC,SAAtB;IACAjD,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6B,cAA7B;IACAb,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACgG,kBAAP,CAA0B,GAA1B,EAA+BJ,SAAS,CAACK,YAAzC,EAAuD,GAAvD;EACH;AAAE;;AACH,SAASC,qCAAT,CAA+C3F,EAA/C,EAAmDC,GAAnD,EAAwD;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAClEP,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,QAAtC,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,MAAtD,EAA8D,CAA9D;IACAxB,MAAM,CAAC+F,MAAP,CAAc,CAAd,EAAiB,KAAjB;IACA/F,MAAM,CAAC+C,YAAP;IACA/C,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;IACAxB,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBS,yCAArB,EAAgE,CAAhE,EAAmE,CAAnE,EAAsE,GAAtE,EAA2E,CAA3E;IACAxF,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAMI,MAAM,GAAGX,MAAM,CAACY,aAAP,EAAf;IACAZ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6BF,MAAM,CAACwF,OAApC;EACH;AAAE;;AACH,SAASC,+CAAT,CAAyD7F,EAAzD,EAA6DC,GAA7D,EAAkE;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAC5E,MAAMkF,GAAG,GAAGzF,MAAM,CAACuB,gBAAP,EAAZ;;IACAvB,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;IACAxB,MAAM,CAACyB,UAAP,CAAkB,OAAlB,EAA2B,SAAS4E,oEAAT,GAAgF;MAAErG,MAAM,CAAC4B,aAAP,CAAqB6D,GAArB;MAA2B,MAAMI,MAAM,GAAG7F,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAf;MAAwC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmB+D,MAAM,CAACS,gCAAP,EAAnB,CAAP;IAAuE,CAAvP;IACAtG,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,GAAzB,EAA8B,CAA9B;IACAxB,MAAM,CAACS,SAAP,CAAiB,CAAjB,EAAoB,GAApB,EAAyB,CAAzB;IACAT,MAAM,CAAC+C,YAAP;IACA/C,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,GAAzB,EAA8B,CAA9B;IACAxB,MAAM,CAACyB,UAAP,CAAkB,OAAlB,EAA2B,SAAS8E,kEAAT,GAA8E;MAAEvG,MAAM,CAAC4B,aAAP,CAAqB6D,GAArB;MAA2B,MAAM5D,MAAM,GAAG7B,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAf;MAAwC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmBD,MAAM,CAAC2E,iCAAP,EAAnB,CAAP;IAAwE,CAAtP;IACAxG,MAAM,CAACS,SAAP,CAAiB,CAAjB,EAAoB,GAApB,EAAyB,EAAzB;IACAT,MAAM,CAAC+C,YAAP;EACH;AAAE;;AACH,SAAS0D,iDAAT,CAA2DlG,EAA3D,EAA+DC,GAA/D,EAAoE;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAC9E,MAAMmG,GAAG,GAAG1G,MAAM,CAACuB,gBAAP,EAAZ;;IACAvB,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC;IACAxB,MAAM,CAACyB,UAAP,CAAkB,eAAlB,EAAmC,SAASkF,gFAAT,CAA0FhF,MAA1F,EAAkG;MAAE3B,MAAM,CAAC4B,aAAP,CAAqB8E,GAArB;MAA2B,MAAME,MAAM,GAAG5G,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAf;MAAwC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmB8E,MAAM,CAACC,WAAP,GAAqBlF,MAAxC,CAAP;IAAyD,CAAnQ;IACA3B,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAM6C,MAAM,GAAGpD,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAf;IACAZ,MAAM,CAACa,UAAP,CAAkB,aAAlB,EAAiCuC,MAAM,CAACQ,YAAP,CAAoBkD,iBAArD,EAAwE,SAAxE,EAAmF1D,MAAM,CAACyD,WAA1F;EACH;AAAE;;AACH,SAASE,2DAAT,CAAqExG,EAArE,EAAyEC,GAAzE,EAA8E;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACxF,MAAMyG,IAAI,GAAGhH,MAAM,CAACuB,gBAAP,EAAb;;IACAvB,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC;IACAxB,MAAM,CAACyB,UAAP,CAAkB,QAAlB,EAA4B,SAASwF,mFAAT,CAA6FtF,MAA7F,EAAqG;MAAE3B,MAAM,CAAC4B,aAAP,CAAqBoF,IAArB;MAA4B,MAAME,QAAQ,GAAGlH,MAAM,CAACY,aAAP,GAAuBqC,SAAxC;MAAmD,MAAMyB,OAAO,GAAG1E,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;MAAyC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmB4C,OAAO,CAACyC,2BAAR,CAAoCD,QAApC,EAA8CvF,MAAM,CAACyF,MAAP,CAAcC,OAA5D,CAAnB,CAAP;IAAkG,CAA7V;IACArH,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAM2G,QAAQ,GAAGlH,MAAM,CAACY,aAAP,GAAuBqC,SAAxC;IACA,MAAMP,OAAO,GAAG1C,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;IACAZ,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6B6B,OAAO,CAAC4E,6BAAR,CAAsCJ,QAAtC,CAA7B;EACH;AAAE;;AACH,SAASK,yDAAT,CAAmEhH,EAAnE,EAAuEC,GAAvE,EAA4E;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACtFP,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;IACAxB,MAAM,CAACS,SAAP,CAAiB,CAAjB,EAAoB,GAApB,EAAyB,EAAzB;IACAT,MAAM,CAAC+C,YAAP;EACH;AAAE;;AACH,SAASyE,yDAAT,CAAmEjH,EAAnE,EAAuEC,GAAvE,EAA4E;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACtFP,MAAM,CAACS,SAAP,CAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;IACAT,MAAM,CAACU,MAAP,CAAc,CAAd,EAAiB,UAAjB;EACH;;EAAC,IAAIH,EAAE,GAAG,CAAT,EAAY;IACV,MAAM2G,QAAQ,GAAGlH,MAAM,CAACY,aAAP,GAAuBqC,SAAxC;IACAjD,MAAM,CAACa,UAAP,CAAkB,KAAlB,EAAyBb,MAAM,CAACc,WAAP,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBoG,QAAQ,CAACO,MAAlC,CAAzB,EAAoEzH,MAAM,CAAC0H,aAA3E;EACH;AAAE;;AACH,SAASC,0DAAT,CAAoEpH,EAApE,EAAwEC,GAAxE,EAA6E;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACvFP,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,MAAzB,EAAiC,EAAjC;IACAxB,MAAM,CAAC+F,MAAP,CAAc,CAAd;IACA/F,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAM2G,QAAQ,GAAGlH,MAAM,CAACY,aAAP,GAAuBqC,SAAxC;IACA,MAAM2E,OAAO,GAAG5H,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;IACAZ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAAC6H,iBAAP,CAAyBD,OAAO,CAACE,gCAAR,CAAyCZ,QAAzC,CAAzB;EACH;AAAE;;AACH,MAAMa,GAAG,GAAG,UAAU3G,EAAV,EAAc;EAAE,OAAO;IAAE,0CAA0CA,EAA5C;IAAgD,kCAAkC;EAAlF,CAAP;AAAkG,CAA9H;;AACA,MAAM4G,GAAG,GAAG,UAAUC,EAAV,EAAc/G,EAAd,EAAkBgH,EAAlB,EAAsBC,EAAtB,EAA0B;EAAE,OAAO;IAAE,8BAA8B,IAAhC;IAAsC,UAAUF,EAAhD;IAAoD,QAAQ/G,EAA5D;IAAgE,QAAQgH,EAAxE;IAA4E,WAAWC;EAAvF,CAAP;AAAqG,CAA7I;;AACA,SAASC,mDAAT,CAA6D7H,EAA7D,EAAiEC,GAAjE,EAAsE;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAChF,MAAM8H,IAAI,GAAGrI,MAAM,CAACuB,gBAAP,EAAb;;IACAvB,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,IAAzB;IACAxB,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBgC,2DAArB,EAAkF,CAAlF,EAAqF,CAArF,EAAwF,OAAxF,EAAiG,EAAjG;IACA/G,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;IACAxB,MAAM,CAACyB,UAAP,CAAkB,OAAlB,EAA2B,SAAS6G,wEAAT,GAAoF;MAAE,MAAM3C,WAAW,GAAG3F,MAAM,CAAC4B,aAAP,CAAqByG,IAArB,CAApB;MAAgD,MAAMnB,QAAQ,GAAGvB,WAAW,CAAC1C,SAA7B;MAAwC,MAAMsF,OAAO,GAAGvI,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;MAAyC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmByG,OAAO,CAACC,WAAR,CAAoBtB,QAApB,CAAnB,CAAP;IAA2D,CAA7S;IACAlH,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBwC,yDAArB,EAAgF,CAAhF,EAAmF,CAAnF,EAAsF,KAAtF,EAA6F,EAA7F;IACAvH,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqByC,yDAArB,EAAgF,CAAhF,EAAmF,CAAnF,EAAsF,KAAtF,EAA6F,EAA7F;IACAxH,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,QAAzB,EAAmC,EAAnC;IACAxB,MAAM,CAAC+F,MAAP,CAAc,CAAd;IACA/F,MAAM,CAAC+C,YAAP;IACA/C,MAAM,CAACS,SAAP,CAAiB,CAAjB,EAAoB,MAApB,EAA4B,EAA5B;IACAT,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqB4C,0DAArB,EAAiF,CAAjF,EAAoF,CAApF,EAAuF,MAAvF,EAA+F,EAA/F;IACA3H,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAM2G,QAAQ,GAAG1G,GAAG,CAACyC,SAArB;IACA,MAAMb,MAAM,GAAGpC,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAf;IACAZ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BuB,MAAM,CAACmD,mBAAP,IAA8BnD,MAAM,CAACmD,mBAAP,CAA2BkD,eAA3B,CAA2CvB,QAA3C,CAAxD;IACAlH,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6Bb,MAAM,CAACqD,eAAP,CAAuB,CAAvB,EAA0B0E,GAA1B,EAA+B3F,MAAM,CAACmD,mBAAtC,CAA7B;IACAvF,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0B,CAACqG,QAAQ,CAACO,MAApC;IACAzH,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BqG,QAAQ,CAACO,MAAnC;IACAzH,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAAC0I,qBAAP,CAA6B,OAA7B,EAAsCxB,QAAQ,CAACyB,WAA/C;IACA3I,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAAC6H,iBAAP,CAAyBX,QAAQ,CAACyB,WAAlC;IACA3I,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAAC0I,qBAAP,CAA6B,OAA7B,EAAsCtG,MAAM,CAACwG,+BAAP,CAAuC1B,QAAQ,CAAC2B,MAAhD,EAAwDzG,MAAM,CAACwB,YAA/D,CAAtC;IACA5D,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6Bb,MAAM,CAAC8I,eAAP,CAAuB,EAAvB,EAA2Bd,GAA3B,EAAgCd,QAAQ,CAAC2B,MAAT,IAAmBzG,MAAM,CAAC2G,qBAAP,CAA6BC,MAAhF,EAAwF9B,QAAQ,CAAC2B,MAAT,IAAmBzG,MAAM,CAAC2G,qBAAP,CAA6BE,IAAxI,EAA8I/B,QAAQ,CAAC2B,MAAT,IAAmBzG,MAAM,CAAC2G,qBAAP,CAA6BG,IAA9L,EAAoMhC,QAAQ,CAAC2B,MAAT,IAAmBzG,MAAM,CAAC2G,qBAAP,CAA6BI,OAApP,CAA7B;IACAnJ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BuB,MAAM,CAAC0F,gCAAP,CAAwCZ,QAAxC,EAAkDkC,MAAlD,GAA2D,CAArF;EACH;AAAE;;AACH,MAAMC,GAAG,GAAG,UAAUjI,EAAV,EAAc;EAAE,OAAO;IAAE,iBAAiBA;EAAnB,CAAP;AAAiC,CAA7D;;AACA,SAASkI,8CAAT,CAAwD/I,EAAxD,EAA4DC,GAA5D,EAAiE;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAC3EP,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,IAAzB,EAA+B,EAA/B;IACAxB,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBqD,mDAArB,EAA0E,CAA1E,EAA6E,EAA7E,EAAiF,IAAjF,EAAuF,EAAvF;IACApI,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAMgJ,MAAM,GAAGvJ,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAf;IACAZ,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6Bb,MAAM,CAACqD,eAAP,CAAuB,CAAvB,EAA0BgG,GAA1B,EAA+BE,MAAM,CAACrE,aAAtC,CAA7B;IACAlF,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6B0I,MAAM,CAACC,oBAApC;EACH;AAAE;;AACH,MAAMC,GAAG,GAAG,UAAUvI,EAAV,EAAc;EAAE,OAAO;IAAE,yBAAyB,IAA3B;IAAiC,sBAAsB,IAAvD;IAA6D,4BAA4BA;EAAzF,CAAP;AAAuG,CAAnI;;AACA,SAASwI,yCAAT,CAAmDnJ,EAAnD,EAAuDC,GAAvD,EAA4D;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACtE,MAAMoJ,IAAI,GAAG3J,MAAM,CAACuB,gBAAP,EAAb;;IACAvB,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,GAAtC,EAA2C,CAA3C;IACAxB,MAAM,CAACyB,UAAP,CAAkB,OAAlB,EAA2B,SAASmI,4DAAT,GAAwE;MAAE5J,MAAM,CAAC4B,aAAP,CAAqB+H,IAArB;MAA4B,MAAME,OAAO,GAAG7J,MAAM,CAACY,aAAP,EAAhB;MAAwC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmB+H,OAAO,CAACC,kBAAR,EAAnB,CAAP;IAA0D,CAAnO;IACA9J,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,MAAzB;IACAxB,MAAM,CAAC+F,MAAP,CAAc,CAAd;IACA/F,MAAM,CAAC+C,YAAP;IACA/C,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBqB,+CAArB,EAAsE,CAAtE,EAAyE,CAAzE,EAA4E,KAA5E,EAAmF,CAAnF;IACApG,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqB0B,iDAArB,EAAwE,CAAxE,EAA2E,CAA3E,EAA8E,OAA9E,EAAuF,CAAvF;IACAzG,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBuE,8CAArB,EAAqE,CAArE,EAAwE,CAAxE,EAA2E,IAA3E,EAAiF,CAAjF;IACAtJ,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAMI,MAAM,GAAGX,MAAM,CAACY,aAAP,EAAf;IACAZ,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6Bb,MAAM,CAACqD,eAAP,CAAuB,CAAvB,EAA0BoG,GAA1B,EAA+B9I,MAAM,CAAC2C,WAAtC,CAA7B;IACAtD,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACgG,kBAAP,CAA0B,GAA1B,EAA+BrF,MAAM,CAACiD,YAAP,CAAoBmG,KAAnD,EAA0D,GAA1D;IACA/J,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BF,MAAM,CAAC4E,mBAAjC;IACAvF,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BF,MAAM,CAACuE,aAAjC;IACAlF,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0B,CAACF,MAAM,CAAC2C,WAAlC;EACH;AAAE;;AACH,MAAM0G,GAAG,GAAG,CAAC,cAAD,CAAZ;AACA,MAAMC,GAAG,GAAG,CAAC,iBAAD,CAAZ;AACA,MAAMC,GAAG,GAAG,CAAC,iBAAD,CAAZ;;AACA,SAASC,oDAAT,CAA8D5J,EAA9D,EAAkEC,GAAlE,EAAuE;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACjFP,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;IACAxB,MAAM,CAAC+F,MAAP,CAAc,CAAd;IACA/F,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAM6C,MAAM,GAAGpD,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAf;IACAZ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAAC6H,iBAAP,CAAyBzE,MAAM,CAACgH,mBAAP,CAA2BhH,MAAM,CAACiH,MAAlC,CAAzB;EACH;AAAE;;AACH,SAASC,6CAAT,CAAuD/J,EAAvD,EAA2DC,GAA3D,EAAgE;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAC1E,MAAMgK,GAAG,GAAGvK,MAAM,CAACuB,gBAAP,EAAZ;;IACAvB,MAAM,CAACwK,uBAAP,CAA+B,CAA/B;IACAxK,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,KAAtC,EAA6C,CAA7C;IACAxB,MAAM,CAACyB,UAAP,CAAkB,OAAlB,EAA2B,SAASgJ,kEAAT,GAA8E;MAAEzK,MAAM,CAAC4B,aAAP,CAAqB2I,GAArB;MAA2B,MAAMhB,MAAM,GAAGvJ,MAAM,CAACY,aAAP,EAAf;MAAuC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmByH,MAAM,CAACmB,mBAAP,CAA2BnB,MAAM,CAACc,MAAlC,CAAnB,CAAP;IAAuE,CAApP;IACArK,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,QAAzB,EAAmC,CAAnC;IACAxB,MAAM,CAAC+F,MAAP,CAAc,CAAd;IACA/F,MAAM,CAAC+C,YAAP;IACA/C,MAAM,CAACS,SAAP,CAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;IACAT,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBoF,oDAArB,EAA2E,CAA3E,EAA8E,CAA9E,EAAiF,MAAjF,EAAyF,CAAzF;IACAnK,MAAM,CAAC+C,YAAP;IACA/C,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,GAAzB,EAA8B,CAA9B;IACAxB,MAAM,CAACyB,UAAP,CAAkB,OAAlB,EAA2B,SAASkJ,gEAAT,GAA4E;MAAE3K,MAAM,CAAC4B,aAAP,CAAqB2I,GAArB;MAA2B,MAAMK,MAAM,GAAG5K,MAAM,CAACY,aAAP,EAAf;MAAuC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmB8I,MAAM,CAACC,iBAAP,EAAnB,CAAP;IAAwD,CAAnO;IACA7K,MAAM,CAAC+F,MAAP,CAAc,CAAd,EAAiB,GAAjB;IACA/F,MAAM,CAAC+C,YAAP;IACA/C,MAAM,CAAC8K,qBAAP;EACH;;EAAC,IAAIvK,EAAE,GAAG,CAAT,EAAY;IACV,MAAMI,MAAM,GAAGX,MAAM,CAACY,aAAP,EAAf;IACAZ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAAC0I,qBAAP,CAA6B,OAA7B,EAAsC/H,MAAM,CAAC0J,MAAP,CAAcU,WAAd,CAA0BpC,WAAhE;IACA3I,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACgG,kBAAP,CAA0B,GAA1B,EAA+BrF,MAAM,CAAC0J,MAAP,CAAcU,WAAd,CAA0BpC,WAAzD,EAAsE,GAAtE;IACA3I,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAAC0I,qBAAP,CAA6B,OAA7B,EAAsC/H,MAAM,CAACiI,+BAAP,CAAuCjI,MAAM,CAAC0J,MAAP,CAAcU,WAAd,CAA0BlC,MAAjE,EAAyElI,MAAM,CAACiD,YAAhF,CAAtC;IACA5D,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6Bb,MAAM,CAAC8I,eAAP,CAAuB,CAAvB,EAA0Bd,GAA1B,EAA+BrH,MAAM,CAAC0J,MAAP,CAAcU,WAAd,CAA0BlC,MAA1B,IAAoClI,MAAM,CAACoI,qBAAP,CAA6BC,MAAhG,EAAwGrI,MAAM,CAAC0J,MAAP,CAAcU,WAAd,CAA0BlC,MAA1B,IAAoClI,MAAM,CAACoI,qBAAP,CAA6BE,IAAzK,EAA+KtI,MAAM,CAAC0J,MAAP,CAAcU,WAAd,CAA0BlC,MAA1B,IAAoClI,MAAM,CAACoI,qBAAP,CAA6BG,IAAhP,EAAsPvI,MAAM,CAAC0J,MAAP,CAAcU,WAAd,CAA0BlC,MAA1B,IAAoClI,MAAM,CAACoI,qBAAP,CAA6BI,OAAvT,CAA7B;IACAnJ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BF,MAAM,CAACyJ,mBAAP,CAA2BzJ,MAAM,CAAC0J,MAAlC,EAA0CjB,MAA1C,GAAmD,CAA7E;EACH;AAAE;;AACH,SAAS4B,oDAAT,CAA8DzK,EAA9D,EAAkEC,GAAlE,EAAuE;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACjFP,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;IACAxB,MAAM,CAAC+F,MAAP,CAAc,CAAd;IACA/F,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAMsB,MAAM,GAAG7B,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAf;IACAZ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAAC6H,iBAAP,CAAyBhG,MAAM,CAACuI,mBAAP,CAA2BvI,MAAM,CAACwI,MAAlC,CAAzB;EACH;AAAE;;AACH,SAASY,oDAAT,CAA8D1K,EAA9D,EAAkEC,GAAlE,EAAuE;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACjFP,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC,EAAoC,CAApC,EAAuC,KAAvC,EAA8C,EAA9C;IACAxB,MAAM,CAAC+F,MAAP,CAAc,CAAd,EAAiB,oBAAjB;IACA/F,MAAM,CAAC+C,YAAP;EACH;AAAE;;AACH,SAASmI,oDAAT,CAA8D3K,EAA9D,EAAkEC,GAAlE,EAAuE;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACjF,MAAM8D,IAAI,GAAGrE,MAAM,CAACuB,gBAAP,EAAb;;IACAvB,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC,EAAoC,CAApC,EAAuC,GAAvC,EAA4C,EAA5C;IACAxB,MAAM,CAACyB,UAAP,CAAkB,OAAlB,EAA2B,SAAS0J,uEAAT,GAAmF;MAAEnL,MAAM,CAAC4B,aAAP,CAAqByC,IAArB;MAA4B,MAAME,OAAO,GAAGvE,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;MAAyC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmByC,OAAO,CAACzB,mBAAR,CAA4ByB,OAAO,CAAC8F,MAApC,CAAnB,CAAP;IAAyE,CAA9P;IACArK,MAAM,CAAC+F,MAAP,CAAc,CAAd;IACA/F,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAM6B,MAAM,GAAGpC,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAf;IACAZ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAAC6H,iBAAP,CAAyBzF,MAAM,CAACwB,YAAP,CAAoBwH,6BAA7C;EACH;AAAE;;AACH,SAASC,yEAAT,CAAmF9K,EAAnF,EAAuFC,GAAvF,EAA4F;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACtGP,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;IACAxB,MAAM,CAACS,SAAP,CAAiB,CAAjB,EAAoB,GAApB,EAAyB,EAAzB;IACAT,MAAM,CAAC+C,YAAP;EACH;AAAE;;AACH,SAASuI,yEAAT,CAAmF/K,EAAnF,EAAuFC,GAAvF,EAA4F;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACtGP,MAAM,CAACS,SAAP,CAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;IACAT,MAAM,CAACU,MAAP,CAAc,CAAd,EAAiB,UAAjB;EACH;;EAAC,IAAIH,EAAE,GAAG,CAAT,EAAY;IACV,MAAMgL,WAAW,GAAGvL,MAAM,CAACY,aAAP,CAAqB,CAArB,EAAwBqC,SAA5C;IACA,MAAMuI,OAAO,GAAGxL,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;IACAZ,MAAM,CAACa,UAAP,CAAkB,KAAlB,EAAyBb,MAAM,CAACc,WAAP,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB0K,OAAO,CAACC,mBAAR,CAA4BD,OAAO,CAACnB,MAAR,CAAeU,WAA3C,EAAwDQ,WAAxD,CAAzB,CAAzB,EAAyHvL,MAAM,CAAC0H,aAAhI;EACH;AAAE;;AACH,SAASgE,0EAAT,CAAoFnL,EAApF,EAAwFC,GAAxF,EAA6F;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACvGP,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,MAAzB,EAAiC,EAAjC;IACAxB,MAAM,CAAC+F,MAAP,CAAc,CAAd;IACA/F,MAAM,CAACU,MAAP,CAAc,CAAd,EAAiB,yBAAjB;IACAV,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAMgL,WAAW,GAAGvL,MAAM,CAACY,aAAP,CAAqB,CAArB,EAAwBqC,SAA5C;IACA,MAAM4G,OAAO,GAAG7J,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;IACAZ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAAC6H,iBAAP,CAAyB7H,MAAM,CAAC2L,WAAP,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB9B,OAAO,CAACQ,MAAR,CAAeU,WAAxC,EAAqDQ,WAArD,CAAzB;EACH;AAAE;;AACH,SAASK,mEAAT,CAA6ErL,EAA7E,EAAiFC,GAAjF,EAAsF;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAChGP,MAAM,CAACwK,uBAAP,CAA+B,CAA/B;IACAxK,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBsG,yEAArB,EAAgG,CAAhG,EAAmG,CAAnG,EAAsG,KAAtG,EAA6G,EAA7G;IACArL,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBuG,yEAArB,EAAgG,CAAhG,EAAmG,CAAnG,EAAsG,KAAtG,EAA6G,EAA7G;IACAtL,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqB2G,0EAArB,EAAiG,CAAjG,EAAoG,CAApG,EAAuG,MAAvG,EAA+G,EAA/G;IACA1L,MAAM,CAAC8K,qBAAP;EACH;;EAAC,IAAIvK,EAAE,GAAG,CAAT,EAAY;IACV,MAAMgL,WAAW,GAAGvL,MAAM,CAACY,aAAP,GAAuBqC,SAA3C;IACA,MAAM4I,OAAO,GAAG7L,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;IACAZ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0B,CAACgL,OAAO,CAACJ,mBAAR,CAA4BI,OAAO,CAACxB,MAAR,CAAeU,WAA3C,EAAwDQ,WAAxD,CAA3B;IACAvL,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BgL,OAAO,CAACJ,mBAAR,CAA4BI,OAAO,CAACxB,MAAR,CAAeU,WAA3C,EAAwDQ,WAAxD,CAA1B;IACAvL,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BgL,OAAO,CAACxB,MAAR,CAAeU,WAAf,CAA2Be,eAA3B,IAA8CD,OAAO,CAACE,mBAAR,CAA4BC,KAApG;EACH;AAAE;;AACH,SAASC,iEAAT,CAA2E1L,EAA3E,EAA+EC,GAA/E,EAAoF;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAC9FP,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,MAAzB,EAAiC,EAAjC;IACAxB,MAAM,CAAC+F,MAAP,CAAc,CAAd;IACA/F,MAAM,CAACU,MAAP,CAAc,CAAd,EAAiB,MAAjB;IACAV,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAMgL,WAAW,GAAGvL,MAAM,CAACY,aAAP,CAAqB,CAArB,EAAwBqC,SAA5C;IACA,MAAMiJ,OAAO,GAAGlM,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;IACAZ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAAC6H,iBAAP,CAAyB7H,MAAM,CAAC2L,WAAP,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBJ,WAAW,CAACY,QAArC,EAA+CD,OAAO,CAAChI,qBAAvD,CAAzB;EACH;AAAE;;AACH,MAAMkI,IAAI,GAAG,UAAUhL,EAAV,EAAc6G,EAAd,EAAkB;EAAE,OAAO;IAAE,+BAA+B7G,EAAjC;IAAqC,mCAAmC6G;EAAxE,CAAP;AAAsF,CAAvH;;AACA,SAASoE,0DAAT,CAAoE9L,EAApE,EAAwEC,GAAxE,EAA6E;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACvFP,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;IACAxB,MAAM,CAACS,SAAP,CAAiB,CAAjB,EAAoB,MAApB,EAA4B,EAA5B;IACAT,MAAM,CAACU,MAAP,CAAc,CAAd,EAAiB,QAAjB;IACAV,MAAM,CAACU,MAAP,CAAc,CAAd,EAAiB,SAAjB;IACAV,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBkH,iEAArB,EAAwF,CAAxF,EAA2F,CAA3F,EAA8F,MAA9F,EAAsG,EAAtG;IACAjM,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAMgL,WAAW,GAAGvL,MAAM,CAACY,aAAP,GAAuBqC,SAA3C;IACA,MAAMqJ,OAAO,GAAGtM,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;IACAZ,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6Bb,MAAM,CAACuM,eAAP,CAAuB,CAAvB,EAA0BH,IAA1B,EAAgCb,WAAW,CAACiB,MAAZ,IAAsBF,OAAO,CAACzI,MAA9D,EAAsE0H,WAAW,CAACiB,MAAZ,IAAsBF,OAAO,CAACzI,MAApG,CAA7B;IACA7D,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,WAAlB,EAA+Bb,MAAM,CAAC2L,WAAP,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB3L,MAAM,CAAC2L,WAAP,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBJ,WAAW,CAACkB,OAArC,EAA8CH,OAAO,CAACvI,aAAtD,CAAzB,EAA+FuI,OAAO,CAACtI,aAAvG,CAA/B,EAAsJhE,MAAM,CAAC0M,cAA7J;IACA1M,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0ByL,OAAO,CAACrI,eAAR,IAA2BsH,WAAW,CAACY,QAAjE;EACH;AAAE;;AACH,SAASQ,iEAAT,CAA2EpM,EAA3E,EAA+EC,GAA/E,EAAoF;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAC9FP,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,MAAzB,EAAiC,EAAjC;IACAxB,MAAM,CAAC+F,MAAP,CAAc,CAAd;IACA/F,MAAM,CAACU,MAAP,CAAc,CAAd,EAAiB,MAAjB;IACAV,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAMgL,WAAW,GAAGvL,MAAM,CAACY,aAAP,CAAqB,CAArB,EAAwBqC,SAA5C;IACA,MAAM2J,OAAO,GAAG5M,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;IACAZ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAAC6H,iBAAP,CAAyB7H,MAAM,CAAC2L,WAAP,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBJ,WAAW,CAACY,QAArC,EAA+CS,OAAO,CAAC1I,qBAAvD,CAAzB;EACH;AAAE;;AACH,SAAS2I,0DAAT,CAAoEtM,EAApE,EAAwEC,GAAxE,EAA6E;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACvFP,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;IACAxB,MAAM,CAACS,SAAP,CAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;IACAT,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqB4H,iEAArB,EAAwF,CAAxF,EAA2F,CAA3F,EAA8F,MAA9F,EAAsG,EAAtG;IACA3M,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAMgL,WAAW,GAAGvL,MAAM,CAACY,aAAP,GAAuBqC,SAA3C;IACA,MAAM6J,OAAO,GAAG9M,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;IACAZ,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6Bb,MAAM,CAACuM,eAAP,CAAuB,CAAvB,EAA0BH,IAA1B,EAAgCb,WAAW,CAACiB,MAAZ,IAAsBM,OAAO,CAACjJ,MAA9D,EAAsE0H,WAAW,CAACiB,MAAZ,IAAsBM,OAAO,CAACjJ,MAApG,CAA7B;IACA7D,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAAC0I,qBAAP,CAA6B,KAA7B,EAAoC6C,WAAW,CAACkB,OAAhD,EAAyDzM,MAAM,CAAC0H,aAAhE;IACA1H,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BiM,OAAO,CAAC7I,eAAR,IAA2BsH,WAAW,CAACY,QAAjE;EACH;AAAE;;AACH,SAASY,iEAAT,CAA2ExM,EAA3E,EAA+EC,GAA/E,EAAoF;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAC9FP,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,MAAzB,EAAiC,EAAjC;IACAxB,MAAM,CAAC+F,MAAP,CAAc,CAAd;IACA/F,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAMgL,WAAW,GAAGvL,MAAM,CAACY,aAAP,CAAqB,CAArB,EAAwBqC,SAA5C;IACAjD,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACgG,kBAAP,CAA0B,EAA1B,EAA8BuF,WAAW,CAACyB,eAA1C,EAA2D,QAA3D;EACH;AAAE;;AACH,MAAMC,IAAI,GAAG,UAAUhF,EAAV,EAAc;EAAE,OAAO;IAAE,0BAA0B,IAA5B;IAAkC,YAAYA;EAA9C,CAAP;AAA4D,CAAzF;;AACA,SAASiF,0DAAT,CAAoE3M,EAApE,EAAwEC,GAAxE,EAA6E;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACvF,MAAM4M,IAAI,GAAGnN,MAAM,CAACuB,gBAAP,EAAb;;IACAvB,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC,EAAoC,CAApC,EAAuC,KAAvC,EAA8C,EAA9C;IACAxB,MAAM,CAACS,SAAP,CAAiB,CAAjB,EAAoB,GAApB,EAAyB,EAAzB;IACAT,MAAM,CAAC+C,YAAP;IACA/C,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,GAAzB,EAA8B,EAA9B;IACAxB,MAAM,CAACyB,UAAP,CAAkB,OAAlB,EAA2B,SAAS2L,6EAAT,GAAyF;MAAEpN,MAAM,CAAC4B,aAAP,CAAqBuL,IAArB;MAA4B,MAAM5B,WAAW,GAAGvL,MAAM,CAACY,aAAP,GAAuBqC,SAA3C;MAAsD,MAAMoK,OAAO,GAAGrN,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;MAAyC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmBuL,OAAO,CAACC,kBAAR,CAA2B,CAAC/B,WAAD,CAA3B,CAAnB,CAAP;IAAuE,CAAxT;IACAvL,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,MAAzB,EAAiC,EAAjC;IACAxB,MAAM,CAAC+F,MAAP,CAAc,CAAd;IACA/F,MAAM,CAAC+C,YAAP;IACA/C,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBgI,iEAArB,EAAwF,CAAxF,EAA2F,CAA3F,EAA8F,MAA9F,EAAsG,EAAtG;IACA/M,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAMgL,WAAW,GAAGvL,MAAM,CAACY,aAAP,GAAuBqC,SAA3C;IACA,MAAMsK,OAAO,GAAGvN,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;IACAZ,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6Bb,MAAM,CAACqD,eAAP,CAAuB,CAAvB,EAA0B4J,IAA1B,EAAgC1B,WAAW,CAACiB,MAAZ,IAAsBe,OAAO,CAAC1J,MAA9D,CAA7B;IACA7D,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACwN,WAAP,CAAmB,MAAnB,EAA2BjC,WAAW,CAACkC,WAAvC,EAAoDzN,MAAM,CAAC0H,aAA3D;IACA1H,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACwN,WAAP,CAAmB,OAAnB,EAA4BjC,WAAW,CAACkB,OAAxC;IACAzM,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAAC6H,iBAAP,CAAyB0D,WAAW,CAACkB,OAArC;IACAzM,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0B0K,WAAW,CAACyB,eAAtC;EACH;AAAE;;AACH,MAAMU,IAAI,GAAG,UAAUzF,EAAV,EAAc;EAAE,OAAO;IAAE,mBAAmB,IAArB;IAA2B,4BAA4BA;EAAvD,CAAP;AAAqE,CAAlG;;AACA,SAAS0F,oDAAT,CAA8DpN,EAA9D,EAAkEC,GAAlE,EAAuE;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACjFP,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;IACAxB,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqB6G,mEAArB,EAA0F,CAA1F,EAA6F,CAA7F,EAAgG,cAAhG,EAAgH,CAAhH;IACA5L,MAAM,CAACwK,uBAAP,CAA+B,CAA/B,EAAkC,EAAlC;IACAxK,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBsH,0DAArB,EAAiF,CAAjF,EAAoF,EAApF,EAAwF,KAAxF,EAA+F,EAA/F;IACArM,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqB8H,0DAArB,EAAiF,CAAjF,EAAoF,CAApF,EAAuF,KAAvF,EAA8F,EAA9F;IACA7M,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBmI,0DAArB,EAAiF,CAAjF,EAAoF,CAApF,EAAuF,KAAvF,EAA8F,EAA9F;IACAlN,MAAM,CAAC8K,qBAAP;IACA9K,MAAM,CAAC+C,YAAP;EACH;;EAAC,IAAIxC,EAAE,GAAG,CAAT,EAAY;IACV,MAAMgL,WAAW,GAAG/K,GAAG,CAACyC,SAAxB;IACA,MAAM2K,KAAK,GAAGpN,GAAG,CAAC2C,KAAlB;IACA,MAAMZ,OAAO,GAAGvC,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;IACAZ,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6Bb,MAAM,CAACqD,eAAP,CAAuB,CAAvB,EAA0BqK,IAA1B,EAAgCnC,WAAW,CAACiB,MAAZ,IAAsBjK,OAAO,CAACsB,MAA9D,CAA7B;IACA7D,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0B0B,OAAO,CAACsL,eAAR,CAAwBtL,OAAO,CAAC8H,MAAhC,EAAwCkB,WAAxC,EAAqDqC,KAArD,CAA1B;IACA5N,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,UAAlB,EAA8B0K,WAAW,CAACuC,IAA1C;IACA9N,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,cAAlB,EAAkC0B,OAAO,CAACwL,WAAR,CAAoBC,IAAtD;IACAhO,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,cAAlB,EAAkC0B,OAAO,CAACwL,WAAR,CAAoBE,KAAtD;IACAjO,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,cAAlB,EAAkC0B,OAAO,CAACwL,WAAR,CAAoBG,IAAtD;EACH;AAAE;;AACH,SAASC,iEAAT,CAA2E5N,EAA3E,EAA+EC,GAA/E,EAAoF;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAC9F,MAAM6N,IAAI,GAAGpO,MAAM,CAACuB,gBAAP,EAAb;;IACAvB,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,GAAzB,EAA8B,EAA9B;IACAxB,MAAM,CAACyB,UAAP,CAAkB,OAAlB,EAA2B,SAAS4M,oFAAT,GAAgG;MAAErO,MAAM,CAAC4B,aAAP,CAAqBwM,IAArB;MAA4B,MAAME,OAAO,GAAGtO,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;MAAyC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmBwM,OAAO,CAACC,uBAAR,CAAgCD,OAAO,CAACjE,MAAxC,CAAnB,CAAP;IAA6E,CAA/Q;IACArK,MAAM,CAACS,SAAP,CAAiB,CAAjB,EAAoB,GAApB,EAAyB,EAAzB;IACAT,MAAM,CAAC+C,YAAP;EACH;AAAE;;AACH,SAASyL,mEAAT,CAA6EjO,EAA7E,EAAiFC,GAAjF,EAAsF;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAChGP,MAAM,CAACS,SAAP,CAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;EACH;AAAE;;AACH,SAASgO,6DAAT,CAAuElO,EAAvE,EAA2EC,GAA3E,EAAgF;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAC1F,MAAMmO,IAAI,GAAG1O,MAAM,CAACuB,gBAAP,EAAb;;IACAvB,MAAM,CAACwK,uBAAP,CAA+B,CAA/B;IACAxK,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBoJ,iEAArB,EAAwF,CAAxF,EAA2F,CAA3F,EAA8F,GAA9F,EAAmG,EAAnG;IACAnO,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC,EAAsC,EAAtC;IACAxB,MAAM,CAACyB,UAAP,CAAkB,QAAlB,EAA4B,SAASkN,qFAAT,GAAiG;MAAE3O,MAAM,CAAC4B,aAAP,CAAqB8M,IAArB;MAA4B,MAAME,OAAO,GAAG5O,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;MAAyC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmB8M,OAAO,CAACC,YAAR,CAAqBD,OAAO,CAACvE,MAA7B,CAAnB,CAAP;IAAkE,CAAtQ;IACArK,MAAM,CAAC+C,YAAP;IACA/C,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqByJ,mEAArB,EAA0F,CAA1F,EAA6F,CAA7F,EAAgG,KAAhG,EAAuG,EAAvG;IACAxO,MAAM,CAAC8K,qBAAP;EACH;;EAAC,IAAIvK,EAAE,GAAG,CAAT,EAAY;IACV,MAAMsC,OAAO,GAAG7C,MAAM,CAACY,aAAP,CAAqB,CAArB,CAAhB;IACAZ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0B,CAACgC,OAAO,CAACiM,eAAR,CAAwBjM,OAAO,CAACwH,MAAhC,CAA3B;IACArK,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACwN,WAAP,CAAmB,IAAnB,EAAyB3K,OAAO,CAACkM,6BAAR,CAAsClM,OAAO,CAACwH,MAA9C,CAAzB;IACArK,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BgC,OAAO,CAACiM,eAAR,CAAwBjM,OAAO,CAACwH,MAAhC,CAA1B;EACH;AAAE;;AACH,MAAM2E,IAAI,GAAG,UAAU/G,EAAV,EAAc;EAAE,OAAO;IAAE,qBAAqB,IAAvB;IAA6B,mBAAmBA;EAAhD,CAAP;AAA8D,CAA3F;;AACA,SAASgH,6CAAT,CAAuD1O,EAAvD,EAA2DC,GAA3D,EAAgE;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAC1E,MAAM2O,IAAI,GAAGlP,MAAM,CAACuB,gBAAP,EAAb;;IACAvB,MAAM,CAACwK,uBAAP,CAA+B,CAA/B;IACAxK,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,KAAtC,EAA6C,CAA7C;IACAxB,MAAM,CAACyB,UAAP,CAAkB,OAAlB,EAA2B,SAAS0N,kEAAT,GAA8E;MAAEnP,MAAM,CAAC4B,aAAP,CAAqBsN,IAArB;MAA4B,MAAME,OAAO,GAAGpP,MAAM,CAACY,aAAP,EAAhB;MAAwC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmBsN,OAAO,CAAC1E,mBAAR,CAA4B0E,OAAO,CAAC/E,MAApC,CAAnB,CAAP;IAAyE,CAAxP;IACArK,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,QAAzB,EAAmC,CAAnC;IACAxB,MAAM,CAAC+F,MAAP,CAAc,CAAd;IACA/F,MAAM,CAAC+C,YAAP;IACA/C,MAAM,CAACS,SAAP,CAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;IACAT,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBiG,oDAArB,EAA2E,CAA3E,EAA8E,CAA9E,EAAiF,MAAjF,EAAyF,CAAzF;IACAhL,MAAM,CAAC+C,YAAP;IACA/C,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,GAAzB,EAA8B,CAA9B;IACAxB,MAAM,CAACyB,UAAP,CAAkB,OAAlB,EAA2B,SAAS4N,gEAAT,GAA4E;MAAErP,MAAM,CAAC4B,aAAP,CAAqBsN,IAArB;MAA4B,MAAMI,OAAO,GAAGtP,MAAM,CAACY,aAAP,EAAhB;MAAwC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmBwN,OAAO,CAACzE,iBAAR,EAAnB,CAAP;IAAyD,CAAtO;IACA7K,MAAM,CAAC+F,MAAP,CAAc,CAAd,EAAiB,GAAjB;IACA/F,MAAM,CAAC+C,YAAP;IACA/C,MAAM,CAACwB,cAAP,CAAsB,CAAtB,EAAyB,iBAAzB,EAA4C,CAA5C;IACAxB,MAAM,CAACyB,UAAP,CAAkB,2BAAlB,EAA+C,SAAS8N,kGAAT,CAA4G5N,MAA5G,EAAoH;MAAE3B,MAAM,CAAC4B,aAAP,CAAqBsN,IAArB;MAA4B,MAAMM,OAAO,GAAGxP,MAAM,CAACY,aAAP,EAAhB;MAAwC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmB0N,OAAO,CAACC,yBAAR,CAAkC9N,MAAlC,CAAnB,CAAP;IAAuE,CAAhT;IACA3B,MAAM,CAAC+C,YAAP;IACA/C,MAAM,CAACwB,cAAP,CAAsB,EAAtB,EAA0B,KAA1B,EAAiC,CAAjC,EAAoC,EAApC;IACAxB,MAAM,CAAC+E,UAAP,CAAkB,EAAlB,EAAsBkG,oDAAtB,EAA4E,CAA5E,EAA+E,CAA/E,EAAkF,KAAlF,EAAyF,EAAzF;IACAjL,MAAM,CAAC+E,UAAP,CAAkB,EAAlB,EAAsBmG,oDAAtB,EAA4E,CAA5E,EAA+E,CAA/E,EAAkF,KAAlF,EAAyF,EAAzF;IACAlL,MAAM,CAAC+E,UAAP,CAAkB,EAAlB,EAAsB4I,oDAAtB,EAA4E,CAA5E,EAA+E,CAA/E,EAAkF,KAAlF,EAAyF,EAAzF;IACA3N,MAAM,CAAC+C,YAAP;IACA/C,MAAM,CAACwB,cAAP,CAAsB,EAAtB,EAA0B,KAA1B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,OAAzC,EAAkD,EAAlD,EAAsD,EAAtD;IACAxB,MAAM,CAACyB,UAAP,CAAkB,eAAlB,EAAmC,SAASiO,6EAAT,CAAuF/N,MAAvF,EAA+F;MAAE3B,MAAM,CAAC4B,aAAP,CAAqBsN,IAArB;MAA4B,MAAMS,OAAO,GAAG3P,MAAM,CAACY,aAAP,EAAhB;MAAwC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmB6N,OAAO,CAACtF,MAAR,CAAeuF,UAAf,GAA4BjO,MAA/C,CAAP;IAAgE,CAAxQ,EAA0Q,SAA1Q,EAAqR,SAASkO,uEAAT,CAAiFlO,MAAjF,EAAyF;MAAE3B,MAAM,CAAC4B,aAAP,CAAqBsN,IAArB;MAA4B,MAAMY,OAAO,GAAG9P,MAAM,CAACY,aAAP,EAAhB;MAAwC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmBgO,OAAO,CAACC,gBAAR,CAAyBpO,MAAzB,EAAiCmO,OAAO,CAACzF,MAAzC,CAAnB,CAAP;IAA8E,CAAlgB,EAAogB,MAApgB,EAA4gB,SAAS2F,oEAAT,GAAgF;MAAEhQ,MAAM,CAAC4B,aAAP,CAAqBsN,IAArB;MAA4B,MAAMe,OAAO,GAAGjQ,MAAM,CAACY,aAAP,EAAhB;MAAwC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmBmO,OAAO,CAACC,iBAAR,CAA0BD,OAAO,CAAC5F,MAAlC,CAAnB,CAAP;IAAuE,CAAzuB,EAA2uB,OAA3uB,EAAovB,SAAS8F,qEAAT,GAAiF;MAAEnQ,MAAM,CAAC4B,aAAP,CAAqBsN,IAArB;MAA4B,MAAMkB,OAAO,GAAGpQ,MAAM,CAACY,aAAP,EAAhB;MAAwC,OAAOZ,MAAM,CAAC8B,WAAP,CAAmBsO,OAAO,CAACF,iBAAR,CAA0BE,OAAO,CAAC/F,MAAlC,CAAnB,CAAP;IAAuE,CAAl9B;IACArK,MAAM,CAACU,MAAP,CAAc,EAAd,EAAkB,SAAlB;IACAV,MAAM,CAAC+C,YAAP;IACA/C,MAAM,CAAC+E,UAAP,CAAkB,EAAlB,EAAsB0J,6DAAtB,EAAqF,CAArF,EAAwF,CAAxF,EAA2F,cAA3F,EAA2G,CAA3G;IACAzO,MAAM,CAAC+C,YAAP;IACA/C,MAAM,CAAC8K,qBAAP;EACH;;EAAC,IAAIvK,EAAE,GAAG,CAAT,EAAY;IACV,MAAMyE,MAAM,GAAGhF,MAAM,CAACY,aAAP,EAAf;IACAZ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAAC0I,qBAAP,CAA6B,OAA7B,EAAsC1D,MAAM,CAACqF,MAAP,CAAcU,WAAd,CAA0BpC,WAAhE;IACA3I,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACgG,kBAAP,CAA0B,GAA1B,EAA+BhB,MAAM,CAACqF,MAAP,CAAcU,WAAd,CAA0BpC,WAAzD,EAAsE,GAAtE;IACA3I,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAAC0I,qBAAP,CAA6B,OAA7B,EAAsC1D,MAAM,CAAC4D,+BAAP,CAAuC5D,MAAM,CAACqF,MAAP,CAAcU,WAAd,CAA0BlC,MAAjE,EAAyE7D,MAAM,CAACpB,YAAhF,CAAtC;IACA5D,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6Bb,MAAM,CAAC8I,eAAP,CAAuB,EAAvB,EAA2Bd,GAA3B,EAAgChD,MAAM,CAACqF,MAAP,CAAcU,WAAd,CAA0BlC,MAA1B,IAAoC7D,MAAM,CAAC+D,qBAAP,CAA6BC,MAAjG,EAAyGhE,MAAM,CAACqF,MAAP,CAAcU,WAAd,CAA0BlC,MAA1B,IAAoC7D,MAAM,CAAC+D,qBAAP,CAA6BE,IAA1K,EAAgLjE,MAAM,CAACqF,MAAP,CAAcU,WAAd,CAA0BlC,MAA1B,IAAoC7D,MAAM,CAAC+D,qBAAP,CAA6BG,IAAjP,EAAuPlE,MAAM,CAACqF,MAAP,CAAcU,WAAd,CAA0BlC,MAA1B,IAAoC7D,MAAM,CAAC+D,qBAAP,CAA6BI,OAAxT,CAA7B;IACAnJ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BmE,MAAM,CAACoF,mBAAP,CAA2BpF,MAAM,CAACqF,MAAlC,EAA0CjB,MAA1C,GAAmD,CAA7E;IACApJ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6B,2BAA7B,EAA0D,SAA1D,EAAqEmE,MAAM,CAACqL,oBAAP,CAA4BrL,MAAM,CAACqF,MAAnC,CAArE;IACArK,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BmE,MAAM,CAACqF,MAAP,CAAciG,gBAAxC;IACAtQ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BmE,MAAM,CAACb,eAAP,IAA0Ba,MAAM,CAACqF,MAAP,CAAckG,eAAxC,IAA2D,CAACvL,MAAM,CAACqF,MAAP,CAAciG,gBAApG;IACAtQ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6BmE,MAAM,CAACqF,MAAP,CAAcmG,QAA3C;IACAxQ,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,SAAlB,EAA6Bb,MAAM,CAAC2L,WAAP,CAAmB,EAAnB,EAAuB,EAAvB,EAA2B3G,MAAM,CAACqF,MAAP,CAAcuF,UAAzC,EAAqD5K,MAAM,CAACjB,aAA5D,CAA7B,EAAyG,aAAzG,EAAwHiB,MAAM,CAACpB,YAAP,CAAoB6M,kBAA5I,EAAgK,SAAhK,EAA2KzQ,MAAM,CAACqD,eAAP,CAAuB,EAAvB,EAA2B2L,IAA3B,EAAiChK,MAAM,CAACrB,iBAAxC,CAA3K;IACA3D,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;IACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BmE,MAAM,CAACrB,iBAAjC;EACH;AAAE;;AACH,MAAM+M,WAAN,CAAkB;EACdC,WAAW,GAAG;IACV;IACA;;IACA;IACA,KAAKC,yBAAL,GAAkCxL,oBAAD,IAA0B,CAAG,CAA9D;IACA;;;IACA,KAAKyL,sBAAL,GAA8B,CAAC9F,WAAD,EAAc0B,OAAd,KAA0B,CAAG,CAA3D;EACH,CARa,CASd;;;EACAqE,oBAAoB,CAAC1L,oBAAD,EAAuB;IACvC,KAAKwL,yBAAL,CAA+BxL,oBAA/B;EACH;;EACD2L,iBAAiB,CAAChG,WAAD,EAAc0B,OAAd,EAAuB;IACpC,KAAKoE,sBAAL,CAA4B9F,WAA5B,EAAyC0B,OAAzC;EACH;;AAfa;;AAkBlB,IAAIsB,WAAJ;;AACA,CAAC,UAAUA,WAAV,EAAuB;EACpBA,WAAW,CAACA,WAAW,CAAC,MAAD,CAAX,GAAsB,CAAvB,CAAX,GAAuC,MAAvC;EACAA,WAAW,CAACA,WAAW,CAAC,MAAD,CAAX,GAAsB,CAAvB,CAAX,GAAuC,MAAvC;EACAA,WAAW,CAACA,WAAW,CAAC,OAAD,CAAX,GAAuB,CAAxB,CAAX,GAAwC,OAAxC;AACH,CAJD,EAIGA,WAAW,KAAKA,WAAW,GAAG,EAAnB,CAJd;;AAMA,MAAMiD,OAAN,CAAc;EACVL,WAAW,GAAG;IACV,KAAK7C,IAAL,GAAYC,WAAW,CAACC,IAAxB;EACH;;AAHS;;AAMd,IAAIjF,qBAAJ;;AACA,CAAC,UAAUA,qBAAV,EAAiC;EAC9BA,qBAAqB,CAACA,qBAAqB,CAAC,QAAD,CAArB,GAAkC,CAAnC,CAArB,GAA6D,QAA7D;EACAA,qBAAqB,CAACA,qBAAqB,CAAC,MAAD,CAArB,GAAgC,CAAjC,CAArB,GAA2D,MAA3D;EACAA,qBAAqB,CAACA,qBAAqB,CAAC,MAAD,CAArB,GAAgC,CAAjC,CAArB,GAA2D,MAA3D;EACAA,qBAAqB,CAACA,qBAAqB,CAAC,SAAD,CAArB,GAAmC,CAApC,CAArB,GAA8D,SAA9D;AACH,CALD,EAKGA,qBAAqB,KAAKA,qBAAqB,GAAG,EAA7B,CALxB;;AAOA,IAAIgD,mBAAJ;;AACA,CAAC,UAAUA,mBAAV,EAA+B;EAC5BA,mBAAmB,CAACA,mBAAmB,CAAC,MAAD,CAAnB,GAA8B,CAA/B,CAAnB,GAAuD,MAAvD;EACAA,mBAAmB,CAACA,mBAAmB,CAAC,OAAD,CAAnB,GAA+B,CAAhC,CAAnB,GAAwD,OAAxD;AACH,CAHD,EAGGA,mBAAmB,KAAKA,mBAAmB,GAAG,EAA3B,CAHtB;;AAKA,MAAMkF,IAAN,CAAW;EACPN,WAAW,GAAG;IACV,KAAK7E,eAAL,GAAuBC,mBAAmB,CAACkF,IAA3C;EACH;;AAHM;;AAMX,MAAMC,mBAAN,CAA0B;;AAG1B,MAAMC,mBAAN,CAA0B;EACtBR,WAAW,GAAG;IACV,KAAKS,mBAAL,GAA2B,CAA3B;EACH;;AAHqB;;AAM1B,MAAMC,MAAN,CAAa;EACTV,WAAW,CAAC5F,WAAD,EAAcuF,gBAAd,EAAgChN,WAAhC,EAA6C;IACpD,KAAKkN,QAAL,GAAgB,EAAhB;IACA,KAAKZ,UAAL,GAAkB,EAAlB,CAFoD,CAGpD;;IACA,KAAKtM,WAAL,GAAmB,KAAnB;IACA,KAAKgN,gBAAL,GAAwB,KAAxB;IACA,KAAKgB,QAAL,GAAgB,KAAhB;IACA,KAAKf,eAAL,GAAuB,IAAvB;IACA,KAAKgB,WAAL,GAAmB,CAAnB;IACA,KAAKxG,WAAL,GAAmBA,WAAnB;IACA,KAAKyF,QAAL,GAAgB,EAAhB;IACA,KAAKF,gBAAL,GAAwBA,gBAAxB;IACA,KAAKgB,QAAL,GAAgB,KAAhB,CAZoD,CAY7B;;IACvB,KAAKhO,WAAL,GAAmBA,WAAnB;IACA,KAAKiN,eAAL,GAAuB,KAAvB;IACA,KAAKgB,WAAL,GAAmB,CAAnB;EACH;;AAjBQ;AAoBb;AACA;AACA;AACA;;;AACA,MAAMC,uBAAN,SAAsCd,WAAtC,CAAkD;;AAGlD,IAAIe,KAAJ;;AACA,CAAC,UAAUA,KAAV,EAAiB;EACdA,KAAK,CAAC,QAAD,CAAL,GAAkB,cAAlB;EACAA,KAAK,CAAC,OAAD,CAAL,GAAiB,aAAjB;EACAA,KAAK,CAAC,MAAD,CAAL,GAAgB,YAAhB;AACH,CAJD,EAIGA,KAAK,KAAKA,KAAK,GAAG,EAAb,CAJR,E,CAMA;AACA;;;AACA,MAAMC,IAAN,CAAW;EACO,OAAPC,OAAO,GAAG;IACb,OAAO,uCAAuCC,OAAvC,CAA+C,OAA/C,EAAwD,UAAUC,CAAV,EAAa;MACxE,IAAIC,CAAC,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAAhB,GAAqB,CAA7B;MAAA,IAAgCC,CAAC,GAAGJ,CAAC,IAAI,GAAL,GAAWC,CAAX,GAAgBA,CAAC,GAAG,GAAJ,GAAU,GAA9D;MACA,OAAOG,CAAC,CAACC,QAAF,CAAW,EAAX,CAAP;IACH,CAHM,CAAP;EAIH;;AANM;;AASX,MAAMlG,KAAN,CAAY;EACR2E,WAAW,CAACxL,YAAD,EAAe;IACtB,KAAKgN,EAAL,GAAUT,IAAI,CAACC,OAAL,EAAV;IACA,KAAK7F,eAAL,GAAuBC,mBAAmB,CAACC,KAA3C;IACA,KAAKoG,UAAL,GAAkBjN,YAAlB;IACA,KAAK0D,MAAL,GAAcE,qBAAqB,CAACC,MAApC,CAJsB,CAKtB;;IACA,KAAKL,WAAL,GAAmBxD,YAAY,CAACrF,GAAb,CAAkBuS,CAAD,IAAOA,CAAC,CAAC1J,WAA1B,EAAuC2J,IAAvC,CAA4C,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,GAAGD,KAAT,GAAiB,CAAC,CAAlB,GAAsB,CAArF,EAAwFE,IAAxF,CAA6F,IAA7F,CAAnB;EACH;;AARO;;AAWZ,IAAIC,eAAJ;;AACA,CAAC,UAAUA,eAAV,EAA2B;EACxBA,eAAe,CAACA,eAAe,CAAC,KAAD,CAAf,GAAyB,CAA1B,CAAf,GAA8C,KAA9C;EACAA,eAAe,CAACA,eAAe,CAAC,QAAD,CAAf,GAA4B,CAA7B,CAAf,GAAiD,QAAjD;AACH,CAHD,EAGGA,eAAe,KAAKA,eAAe,GAAG,EAAvB,CAHlB;;AAKA,MAAMC,wBAAN,CAA+B;EAC3B;AACJ;AACA;AACA;EACIhC,WAAW,CAACiC,kBAAD,EAAqBC,KAArB,EAA4B;IACnC,KAAKD,kBAAL,GAA0BA,kBAA1B;IACA,KAAKC,KAAL,GAAaA,KAAb;EACH;;EACDC,UAAU,CAACC,IAAD,EAAOC,aAAP,EAAsB;IAC5B,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAD4B,CAE5B;;IACAD,QAAQ,CAACE,MAAT,CAAgB,wBAAhB,EAA0CH,aAA1C;IACAC,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBJ,IAAxB,EAA8BA,IAAI,CAACK,IAAnC;IACA,OAAO,KAAKP,KAAL,CAAWQ,IAAX,CAAgB,KAAKT,kBAArB,EAAyCK,QAAzC,CAAP,CAL4B,CAM5B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACH;;AAnC0B;;AAsC/B,MAAMK,MAAN,CAAa;EACT3C,WAAW,CAAC4C,WAAD,EAAc;IACrB,KAAKA,WAAL,GAAmBA,WAAnB,CADqB,CAErB;;IACA,KAAKxH,mBAAL,GAA2BA,mBAA3B;IACA,KAAKhD,qBAAL,GAA6BA,qBAA7B;IACA,KAAKgF,WAAL,GAAmBA,WAAnB;IACA,KAAKyF,WAAL,GAAmB,KAAnB;IACA,KAAKlQ,WAAL,GAAmB,KAAnB;IACA,KAAKmQ,0BAAL,GAAkC,IAAlC;IACA,KAAKC,eAAL,GAAuB,KAAvB;IACA,KAAKC,eAAL,GAAuB,IAAvB;IACA,KAAKC,cAAL,GAAsB,IAAtB;IACA,KAAK7P,aAAL,GAAqB,IAArB;IACA,KAAKC,aAAL,GAAqB,IAArB;IACA,KAAK6P,YAAL,GAAoB,IAApB;IACA,KAAK3O,aAAL,GAAqB,IAArB;IACA,KAAK4O,WAAL,GAAmB,gGAAnB;IACA,KAAKC,mBAAL,GAA2B,IAA3B;IACA,KAAKhK,KAAL,GAAa,SAAb;IACA,KAAK0G,kBAAL,GAA0B,gBAA1B;IACA,KAAK3J,iBAAL,GAAyB,QAAzB;IACA,KAAKkN,2BAAL,GAAmC,IAAnC;IACA,KAAKC,6BAAL,GAAqC,gGAArC;IACA,KAAKC,wBAAL,GAAgC,kBAAhC;IACA,KAAKC,eAAL,GAAuB,EAAvB;IACA,KAAK5Q,eAAL,GAAuB,KAAvB;IACA,KAAK6Q,oCAAL,GAA4C,IAA5C;IACA,KAAKnP,KAAL,GAAawM,KAAK,CAAC4C,KAAnB;IACA,KAAKnQ,qBAAL,GAA6B,OAA7B;IACA,KAAKD,eAAL,GAAuB,IAAvB;IACA,KAAKqQ,yBAAL,GAAiC,KAAjC;IACA,KAAKC,oBAAL,GAA4B,IAAIvV,YAAJ,EAA5B;IACA,KAAKwV,uBAAL,GAA+B,IAAIxV,YAAJ,EAA/B;IACA,KAAKyV,uBAAL,GAA+B,IAAIzV,YAAJ,EAA/B;IACA,KAAK0V,cAAL,GAAsB,IAAI1V,YAAJ,EAAtB;IACA,KAAK2V,gCAAL,GAAwC,KAAxC;IACA,KAAKxQ,eAAL,GAAuB,KAAvB,CApCqB,CAqCrB;;IACA,KAAKyQ,iBAAL,GAAyB;MACrBC,MAAM,EAAE,QADa;MAErBC,IAAI,EAAE,MAFe;MAGrBC,IAAI,EAAE,MAHe;MAIrBC,OAAO,EAAE;IAJY,CAAzB;IAMA,KAAK3P,0BAAL,GAAkC,EAAlC,CA5CqB,CA6CrB;;IACA,KAAK5B,gBAAL,GAAwB,GAAxB,CA9CqB,CA+CrB;;IACA,KAAKD,gBAAL,GAAwB,GAAxB,CAhDqB,CAiDrB;;IACA,KAAKyR,mBAAL,GAA2B,KAA3B;IACA,KAAK3P,OAAL,GAAe,EAAf;IACA,KAAK4P,cAAL,GAAsB,KAAtB;EACH;;EACa,IAAVC,UAAU,GAAG;IACb,OAAO,KAAK3B,WAAZ;EACH;;EACa,IAAV2B,UAAU,CAACC,KAAD,EAAQ;IAClB,KAAK5B,WAAL,GAAmB4B,KAAnB;;IACA,IAAIA,KAAJ,EAAW;MACP;MACA/K,MAAM,CAACgL,aAAP,CAAqB,KAAKC,6BAA1B;IACH,CAHD,MAIK;MACD,KAAKC,uBAAL;IACH;EACJ;;EACkB,IAAfC,eAAe,GAAG;IAClB,OAAQ,iBAAgB,KAAK3R,MAAO,EAApC,CADkB,CACqB;EAC1C;;EAED4R,QAAQ,GAAG;IACP,KAAKC,aAAL;EACH;;EACDC,QAAQ,CAACC,KAAD,EAAQ;IACZ,KAAKC,iBAAL,GAAyBD,KAAK,CAACxO,MAAN,CAAa0O,UAAtC;IACA,KAAKC,gBAAL;EACH,CA9EQ,CA+ET;;;EACAA,gBAAgB,GAAG;IACf,MAAMC,yBAAyB,GAAGjE,IAAI,CAACkE,KAAL,CAAW,CAAC,KAAKJ,iBAAL,IAA0B,CAAC,KAAKtS,eAAN,GAAwB,KAAKC,gBAA7B,GAAgD,CAA1E,CAAD,IAAiF,KAAKC,gBAAjG,CAAlC;IACA,MAAMyS,UAAU,GAAG,KAAK5Q,OAAL,CAAa8D,MAAb,GAAsB4M,yBAAzC;;IACA,IAAIE,UAAU,IAAI,CAAlB,EAAqB;MACjB,KAAK5Q,OAAL,CAAa6Q,MAAb,CAAoB,KAAK7Q,OAAL,CAAa8D,MAAb,GAAsB8M,UAA1C;IACH;;IACD,KAAKE,kBAAL,CAAwB,KAAK9Q,OAA7B,EANe,CAOf;;IACA,KAAK2P,mBAAL,GAA2B,KAAKX,yBAAL,GAAiC,KAAjC,GAAyC,KAAKF,oCAAL,IAA6C4B,yBAAyB,GAAG,CAA7I;EACH,CAzFQ,CA0FT;;;EACAN,aAAa,GAAG;IACZ,IAAIW,uBAAuB,GAAG,IAA9B;;IACA,IAAI,KAAKC,OAAL,IAAgB,IAAhB,IAAwB,KAAKzS,MAAL,IAAe,IAA3C,EAAiD;MAC7C,IAAI;QACA,KAAKgS,iBAAL,GAAyBxL,MAAM,CAACyL,UAAhC;QACA,KAAKS,eAAL;QACA,KAAKC,qBAAL;QACA,KAAKC,8BAAL,GAJA,CAKA;;QACA,KAAKH,OAAL,CAAazF,sBAAb,GAAsC,CAAC9F,WAAD,EAAc2L,GAAd,KAAsB,KAAK3F,iBAAL,CAAuBhG,WAAvB,EAAoC2L,GAApC,CAA5D;;QACA,KAAKJ,OAAL,CAAa1F,yBAAb,GAA0CxL,oBAAD,IAA0B,KAAK0L,oBAAL,CAA0B1L,oBAA1B,CAAnE;;QACA,KAAKmQ,uBAAL;QACA,KAAKoB,eAAL;QACA,KAAKxS,eAAL,GAAuB,KAAKmS,OAAL,YAAwB9E,uBAA/C;;QACA,IAAI,KAAKoF,aAAL,IAAsB,KAAKA,aAAL,KAAuB,EAAjD,EAAqD;UACjD,KAAKjT,iBAAL,GAAyB,IAAIgP,wBAAJ,CAA6B,KAAKiE,aAAlC,EAAiD,KAAKrD,WAAtD,CAAzB;QACH;;QACD,KAAKwC,gBAAL;QACA,KAAKb,cAAL,GAAsB,IAAtB;MACH,CAhBD,CAiBA,OAAO2B,EAAP,EAAW;QACPR,uBAAuB,GAAGQ,EAA1B;MACH;IACJ;;IACD,IAAI,CAAC,KAAK3B,cAAV,EAA0B;MACtB4B,OAAO,CAACC,KAAR,CAAc,6CAAd;;MACA,IAAI,KAAKlT,MAAL,IAAe,IAAnB,EAAyB;QACrBiT,OAAO,CAACC,KAAR,CAAc,sIAAd;MACH;;MACD,IAAI,KAAKT,OAAL,IAAgB,IAApB,EAA0B;QACtBQ,OAAO,CAACC,KAAR,CAAc,6JAAd;MACH;;MACD,IAAIV,uBAAJ,EAA6B;QACzBS,OAAO,CAACC,KAAR,CAAe,kEAAiEV,uBAAuB,CAAC5J,OAAQ,EAAhH;QACAqK,OAAO,CAACC,KAAR,CAAcV,uBAAd;MACH;IACJ;EACJ;;EACDd,uBAAuB,GAAG;IACtB,IAAI,KAAKe,OAAT,EAAkB;MACd;MACA,IAAI,KAAK5C,eAAT,EAA0B;QACtB;QACA,KAAKsD,gBAAL,CAAsB,IAAtB;QACA,KAAK1B,6BAAL,GAAqCjL,MAAM,CAAC4M,WAAP,CAAmB,MAAM,KAAKD,gBAAL,CAAsB,KAAtB,CAAzB,EAAuD,KAAKrD,eAA5D,CAArC;MACH,CAJD,MAKK;QACD;QACA,KAAKqD,gBAAL,CAAsB,IAAtB;MACH;IACJ;EACJ,CA9IQ,CA+IT;;;EACAP,8BAA8B,GAAG;IAC7B,OAAO5W,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;MAChD,IAAI,KAAKmU,2BAAL,IAAqC,kBAAkB3J,MAA3D,EAAoE;QAChE,IAAI,CAAC,MAAM6M,YAAY,CAACC,iBAAb,EAAP,MAA6C,SAAjD,EAA4D;UACxD,KAAKxC,gCAAL,GAAwC,IAAxC;QACH;MACJ;IACJ,CANe,CAAhB;EAOH,CAxJQ,CAyJT;;;EACA6B,qBAAqB,GAAG;IACpB,IAAI,CAAC,KAAK5S,YAAV,EAAwB;MACpB,KAAKA,YAAL,GAAoB;QAChB6M,kBAAkB,EAAE,KAAKA,kBADT;QAEhB3J,iBAAiB,EAAE,KAAKA,iBAFR;QAGhBiD,KAAK,EAAE,KAAKA,KAHI;QAIhB6K,iBAAiB,EAAE,KAAKA,iBAJR;QAKhBV,wBAAwB,EAAE,KAAKA,wBALf;QAMhB9I,6BAA6B,EAAE;MANf,CAApB;IAQH;EACJ;;EACDmL,eAAe,GAAG;IACd,IAAI,KAAKxV,WAAT,EAAsB;MAClB,KAAKkE,KAAL,GAAawM,KAAK,CAAC2F,MAAnB;IACH,CAFD,MAGK,IAAI,KAAKnS,KAAL,IAAcwM,KAAK,CAAC4C,KAApB,IAA6B,KAAKpP,KAAL,IAAcwM,KAAK,CAAC4F,IAArD,EAA2D;MAC5D;MACA,MAAM,IAAIC,KAAJ,CAAW,6CAA4C,KAAKrS,KAAM,+BAAlE,CAAN;IACH;EACJ,CA9KQ,CA+KT;;;EACA+R,gBAAgB,CAACO,eAAD,EAAkB;IAC9B,KAAKjB,OAAL,CAAakB,WAAb,GACKC,IADL,CACU3X,GAAG,CAAEsF,oBAAD,IAA0B;MACpC,KAAKA,oBAAL,GAA4BA,oBAA5B;MACA,KAAKD,YAAL,GAAoBC,oBAAoB,CAACtF,GAArB,CAA0B4X,QAAD,IAAc;QACvD,OAAOA,QAAQ,CAAC3M,WAAhB;MACH,CAFmB,CAApB;IAGH,CALY,CADb,EAMI4M,SANJ,CAMc,MAAM;MAChB,IAAIJ,eAAJ,EAAqB;QACjB,KAAKK,mBAAL;MACH;IACJ,CAVD;EAWH;;EACD9U,mBAAmB,CAACuH,MAAD,EAAS;IACxB;IACA,IAAI,KAAKiM,OAAL,YAAwB9E,uBAA5B,EAAqD;MACjDnH,MAAM,CAACiG,gBAAP,GAA0B,IAA1B;MACA,KAAKgG,OAAL,CAAauB,uBAAb,CAAqCxN,MAAM,CAACU,WAAP,CAAmBoH,EAAxD,EAA4D,KAAKgC,eAAjE,EAAkF,EAAE9J,MAAM,CAACkH,WAA3F,EACKkG,IADL,CACU3X,GAAG,CAAEgY,MAAD,IAAY;QACtBA,MAAM,CAACC,OAAP,CAAgBtL,OAAD,IAAa,KAAKuL,iBAAL,CAAuBvL,OAAvB,CAA5B;QACApC,MAAM,CAACmG,QAAP,GAAkBsH,MAAM,CAACG,MAAP,CAAc5N,MAAM,CAACmG,QAArB,CAAlB;QACAnG,MAAM,CAACiG,gBAAP,GAA0B,KAA1B;QACA,MAAM4H,SAAS,GAAI7N,MAAM,CAACkH,WAAP,IAAsB,CAAvB,GAA4BmB,eAAe,CAACyF,MAA5C,GAAqDzF,eAAe,CAAC0F,GAAvF;QACA/N,MAAM,CAACkG,eAAP,GAAyBuH,MAAM,CAAC1O,MAAP,IAAiB,KAAK+K,eAA/C;QACAkE,UAAU,CAAC,MAAM,KAAKC,2BAAL,CAAiCR,MAAjC,EAAyCzN,MAAzC,EAAiD6N,SAAjD,EAA4D,IAA5D,CAAP,CAAV;MACH,CAPY,CADb,EAQIP,SARJ;IASH,CAXD,MAYK;MACD,KAAKrB,OAAL,CAAaiC,iBAAb,CAA+BlO,MAAM,CAACU,WAAP,CAAmBoH,EAAlD,EACKsF,IADL,CACU3X,GAAG,CAAEgY,MAAD,IAAY;QACtBA,MAAM,CAACC,OAAP,CAAgBtL,OAAD,IAAa,KAAKuL,iBAAL,CAAuBvL,OAAvB,CAA5B;QACApC,MAAM,CAACmG,QAAP,GAAkBsH,MAAM,CAACG,MAAP,CAAc5N,MAAM,CAACmG,QAArB,CAAlB;QACAnG,MAAM,CAACiG,gBAAP,GAA0B,KAA1B;QACA+H,UAAU,CAAC,MAAM,KAAKC,2BAAL,CAAiCR,MAAjC,EAAyCzN,MAAzC,EAAiDqI,eAAe,CAACyF,MAAjE,CAAP,CAAV;MACH,CALY,CADb,EAMIR,SANJ;IAOH;EACJ;;EACDW,2BAA2B,CAAC9H,QAAD,EAAWnG,MAAX,EAAmB6N,SAAnB,EAA8BM,uBAAuB,GAAG,KAAxD,EAA+D;IACtF,KAAKC,gBAAL,CAAsBpO,MAAtB,EAA8B6N,SAA9B;;IACA,IAAI7N,MAAM,CAACiH,QAAP,IAAmBkH,uBAAvB,EAAgD;MAC5C,MAAME,cAAc,GAAGlI,QAAQ,CAACmI,MAAT,CAAgBC,CAAC,IAAI,CAACA,CAAC,CAACC,QAAxB,CAAvB;MACA,KAAKvL,kBAAL,CAAwBoL,cAAxB;IACH;EACJ,CA3NQ,CA4NT;;;EACA5H,oBAAoB,CAAC1L,oBAAD,EAAuB;IACvC,IAAIA,oBAAJ,EAA0B;MACtB,KAAKA,oBAAL,GAA4BA,oBAA5B;MACA,KAAKD,YAAL,GAAoBC,oBAAoB,CAACtF,GAArB,CAA0B4X,QAAD,IAAc;QACvD,OAAOA,QAAQ,CAAC3M,WAAhB;MACH,CAFmB,CAApB;MAGA,KAAK1F,0BAAL,GAAkC,EAAlC;IACH;EACJ,CArOQ,CAsOT;;;EACA0L,iBAAiB,CAAChG,WAAD,EAAc0B,OAAd,EAAuB;IACpC,IAAI1B,WAAW,IAAI0B,OAAnB,EAA4B;MACxB,MAAMqM,UAAU,GAAG,KAAKC,cAAL,CAAoBhO,WAApB,CAAnB;MACA,KAAKiN,iBAAL,CAAuBvL,OAAvB;;MACA,IAAI,CAACqM,UAAU,CAAC,CAAD,CAAX,IAAkB,CAAC,KAAKlF,cAA5B,EAA4C;QACxCkF,UAAU,CAAC,CAAD,CAAV,CAActI,QAAd,CAAuBwI,IAAvB,CAA4BvM,OAA5B;QACA,KAAKgM,gBAAL,CAAsBK,UAAU,CAAC,CAAD,CAAhC,EAAqCpG,eAAe,CAACyF,MAArD;;QACA,IAAIW,UAAU,CAAC,CAAD,CAAV,CAAcxH,QAAlB,EAA4B;UACxB,KAAKhE,kBAAL,CAAwB,CAACb,OAAD,CAAxB;QACH;MACJ;;MACD,KAAKwM,gBAAL,CAAsBH,UAAU,CAAC,CAAD,CAAhC,EAVwB,CAWxB;MACA;;MACA,IAAI,KAAKrF,0BAAL,IAAoC,CAACqF,UAAU,CAAC,CAAD,CAAX,IAAkB,CAACA,UAAU,CAAC,CAAD,CAAV,CAAcxV,WAAzE,EAAuF;QACnF;QACA,KAAK4V,uBAAL,CAA6BJ,UAAU,CAAC,CAAD,CAAvC,EAA4CrM,OAA5C;MACH;IACJ;EACJ;;EACDjI,mCAAmC,CAACuG,WAAD,EAAc;IAC7C,KAAKgO,cAAL,CAAoBhO,WAApB,EAAiC,IAAjC,EAAuC,IAAvC;EACH;;EACDoO,kBAAkB,GAAG;IACjB,IAAI,KAAK5T,mBAAT,EAA8B;MAC1B,KAAKA,mBAAL,CAAyB6T,QAAzB,GAAoC,KAApC;MACA,KAAK7T,mBAAL,GAA2B,IAA3B;IACH;EACJ;;EACDZ,sBAAsB,GAAG;IACrB,KAAKwU,kBAAL;EACH;;EACDrU,uBAAuB,CAAC8Q,KAAD,EAAQ;IAC3B;IACA,KAAKyD,eAAL,CAAqBzD,KAArB,EAF2B,CAG3B;;IACA,KAAKuD,kBAAL;EACH;;EACDE,eAAe,CAACC,KAAD,EAAQ;IACnB,MAAMC,QAAQ,GAAG,IAAIvN,KAAJ,CAAUsN,KAAV,CAAjB;IACA,KAAKP,cAAL,CAAoBQ,QAApB;;IACA,IAAI,KAAKzV,YAAT,EAAuB;MACnB,KAAKA,YAAL,CAAkB0V,YAAlB,CAA+BD,QAA/B;IACH;EACJ,CAnRQ,CAoRT;EACA;EACA;;;EACAR,cAAc,CAAChO,WAAD,EAAc0O,gBAAgB,GAAG,KAAjC,EAAwCC,kBAAkB,GAAG,KAA7D,EAAoE;IAC9E;IACA,MAAMC,YAAY,GAAG,KAAKrU,OAAL,CAAasU,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAAC9O,WAAF,CAAcoH,EAAd,IAAoBpH,WAAW,CAACoH,EAAvD,CAArB;;IACA,IAAI,CAACwH,YAAL,EAAmB;MACf,IAAID,kBAAJ,EAAwB;QACpB,KAAKnF,oBAAL,CAA0BuF,IAA1B,CAA+B/O,WAA/B;MACH,CAHc,CAIf;;;MACA,MAAMgP,cAAc,GAAGL,kBAAkB,GAAG,KAAH,GAAW,CAAC,KAAKjG,0BAA1D;MACA,MAAMuG,aAAa,GAAG,IAAI3I,MAAJ,CAAWtG,WAAX,EAAwB,KAAK6I,cAA7B,EAA6CmG,cAA7C,CAAtB,CANe,CAOf;;MACA,IAAI,KAAKnG,cAAT,EAAyB;QACrB,KAAK9Q,mBAAL,CAAyBkX,aAAzB;MACH;;MACD,KAAK1U,OAAL,CAAa2U,OAAb,CAAqBD,aAArB,EAXe,CAYf;;MACA,IAAI,CAAC,KAAK1F,yBAAV,EAAqC;QACjC,IAAI,KAAKhP,OAAL,CAAa8D,MAAb,GAAsB,KAAK3F,gBAA3B,IAA+C,KAAKoS,iBAAL,IAA0B,CAAC,KAAKtS,eAAN,GAAwB,KAAKC,gBAA7B,GAAgD,CAA1E,CAAnD,EAAiI;UAC7H,KAAK8B,OAAL,CAAa4U,GAAb;QACH;MACJ;;MACD,KAAK9D,kBAAL,CAAwB,KAAK9Q,OAA7B;;MACA,IAAImU,gBAAgB,IAAI,CAACM,cAAzB,EAAyC;QACrC,KAAKI,aAAL,CAAmBH,aAAnB;MACH;;MACD,KAAK3U,0BAAL,CAAgC2T,IAAhC,CAAqCjO,WAArC;MACA,KAAKyJ,uBAAL,CAA6BsF,IAA7B,CAAkC/O,WAAlC;MACA,OAAO,CAACiP,aAAD,EAAgB,IAAhB,CAAP;IACH,CAzBD,MA0BK;MACD;MACA,OAAO,CAACL,YAAD,EAAe,KAAf,CAAP;IACH;EACJ,CAxTQ,CAyTT;;;EACAQ,aAAa,CAAC9P,MAAD,EAAS+P,QAAQ,GAAG,MAAM,CAAG,CAA7B,EAA+B;IACxC,MAAMC,WAAW,GAAG,KAAK/U,OAAL,CAAagV,OAAb,CAAqBjQ,MAArB,CAApB;;IACA,IAAIgQ,WAAW,IAAI,CAAnB,EAAsB;MAClBhC,UAAU,CAAC,MAAM;QACb,IAAI,KAAKkC,WAAT,EAAsB;UAClB,MAAMC,iBAAiB,GAAG,KAAKD,WAAL,CAAiBE,OAAjB,GAA2BJ,WAA3B,CAA1B;UACAG,iBAAiB,CAACE,eAAlB,CAAkCC,aAAlC,CAAgDC,KAAhD;QACH;;QACDR,QAAQ;MACX,CANS,CAAV;IAOH;EACJ;;EACDpC,iBAAiB,CAACvL,OAAD,EAAU;IACvB;IACA,IAAI,CAACA,OAAO,CAACqB,IAAb,EAAmB;MACfrB,OAAO,CAACqB,IAAR,GAAeC,WAAW,CAACC,IAA3B;IACH;EACJ,CA3UQ,CA4UT;;;EACAV,kBAAkB,CAACkD,QAAD,EAAW;IACzB,MAAMqK,WAAW,GAAG,IAAIC,IAAJ,EAApB;IACAtK,QAAQ,CAACuH,OAAT,CAAkBrB,GAAD,IAAS;MACtBA,GAAG,CAACmC,QAAJ,GAAegC,WAAf;IACH,CAFD;IAGA,KAAKnG,cAAL,CAAoBoF,IAApB,CAAyBtJ,QAAzB;EACH,CAnVQ,CAoVT;;;EACAmG,eAAe,GAAG;IACd,IAAI,KAAK7C,WAAL,IAAoB,KAAKA,WAAL,CAAiB1K,MAAjB,GAA0B,CAAlD,EAAqD;MACjD,KAAK2R,SAAL,GAAiB,IAAIC,KAAJ,EAAjB;MACA,KAAKD,SAAL,CAAeE,GAAf,GAAqB,KAAKnH,WAA1B;MACA,KAAKiH,SAAL,CAAeG,IAAf;IACH;EACJ,CA3VQ,CA4VT;;;EACAjC,gBAAgB,CAAC5O,MAAD,EAAS;IACrB,IAAI,KAAKwJ,YAAL,IAAqB,CAACxJ,MAAM,CAACiH,QAA7B,IAAyC,KAAKyJ,SAAlD,EAA6D;MACzD,KAAKA,SAAL,CAAeI,IAAf;IACH;EACJ,CAjWQ,CAkWT;;;EACAjC,uBAAuB,CAAC7O,MAAD,EAASoC,OAAT,EAAkB;IACrC,IAAI,KAAKkI,gCAAL,IAAyC,CAACtK,MAAM,CAACiH,QAAjD,IAA6D7E,OAAjE,EAA0E;MACtE,MAAM2O,YAAY,GAAG,IAAIlE,YAAJ,CAAkB,GAAE,KAAKtT,YAAL,CAAkBsQ,wBAAyB,IAAG7J,MAAM,CAACU,WAAP,CAAmBpC,WAAY,EAAjG,EAAoG;QACrH,QAAQ8D,OAAO,CAACA,OADqG;QAErH,QAAQ,KAAKwH;MAFwG,CAApG,CAArB;MAIAoE,UAAU,CAAC,MAAM;QACb+C,YAAY,CAACC,KAAb;MACH,CAFS,EAEP5O,OAAO,CAACA,OAAR,CAAgBrD,MAAhB,IAA0B,EAA1B,GAA+B,IAA/B,GAAsC,IAF/B,CAAV,CALsE,CAOtB;IACnD;EACJ,CA7WQ,CA8WT;;;EACAgN,kBAAkB,CAAC9Q,OAAD,EAAU;IACxB,IAAI,KAAKyO,mBAAT,EAA8B;MAC1B,MAAMuH,cAAc,GAAGhW,OAAO,CAACxF,GAAR,CAAayb,CAAD,IAAO;QACtC,OAAOA,CAAC,CAACxQ,WAAF,CAAcoH,EAArB;MACH,CAFsB,CAAvB;MAGAqJ,YAAY,CAACC,OAAb,CAAqB,KAAKjG,eAA1B,EAA2CkG,IAAI,CAACC,SAAL,CAAeL,cAAf,CAA3C;IACH;EACJ;;EACD1D,mBAAmB,GAAG;IAClB,IAAI;MACA,IAAI,KAAK7D,mBAAT,EAA8B;QAC1B,MAAM6H,wBAAwB,GAAGJ,YAAY,CAACK,OAAb,CAAqB,KAAKrG,eAA1B,CAAjC;;QACA,IAAIoG,wBAAwB,IAAIA,wBAAwB,CAACxS,MAAzB,GAAkC,CAAlE,EAAqE;UACjE,MAAMkS,cAAc,GAAGI,IAAI,CAACI,KAAL,CAAWF,wBAAX,CAAvB;UACA,MAAMG,qBAAqB,GAAG,KAAK5W,YAAL,CAAkBwT,MAAlB,CAAyBqD,CAAC,IAAIV,cAAc,CAAChB,OAAf,CAAuB0B,CAAC,CAAC7J,EAAzB,KAAgC,CAA9D,CAA9B;UACA4J,qBAAqB,CAAChE,OAAtB,CAA+BhN,WAAD,IAAiB;YAC3C,KAAKgO,cAAL,CAAoBhO,WAApB;UACH,CAFD;QAGH;MACJ;IACJ,CAXD,CAYA,OAAO8L,EAAP,EAAW;MACPC,OAAO,CAACC,KAAR,CAAe,qEAAoEF,EAAG,EAAtF;IACH;EACJ,CAvYQ,CAwYT;;;EACAoF,gBAAgB,CAAC5R,MAAD,EAAS;IACrB,MAAMlH,KAAK,GAAG,KAAKmC,OAAL,CAAagV,OAAb,CAAqBjQ,MAArB,CAAd;;IACA,IAAIlH,KAAK,GAAG,CAAZ,EAAe;MACX,OAAO,KAAKmC,OAAL,CAAanC,KAAK,GAAG,CAArB,CAAP;IACH,CAFD,MAGK,IAAIA,KAAK,IAAI,CAAT,IAAc,KAAKmC,OAAL,CAAa8D,MAAb,GAAsB,CAAxC,EAA2C;MAC5C,OAAO,KAAK9D,OAAL,CAAanC,KAAK,GAAG,CAArB,CAAP;IACH;EACJ;;EACD+Y,WAAW,CAAC7R,MAAD,EAAS;IAChB,MAAMlH,KAAK,GAAG,KAAKmC,OAAL,CAAagV,OAAb,CAAqBjQ,MAArB,CAAd;IACA,KAAK/E,OAAL,CAAa6Q,MAAb,CAAoBhT,KAApB,EAA2B,CAA3B;IACA,KAAKiT,kBAAL,CAAwB,KAAK9Q,OAA7B;IACA,KAAKmP,uBAAL,CAA6BqF,IAA7B,CAAkCzP,MAAM,CAACU,WAAzC;EACH;;EACDoR,8BAA8B,CAACC,YAAD,EAAe;IACzC,MAAM/B,WAAW,GAAG,KAAK/U,OAAL,CAAagV,OAAb,CAAqB8B,YAArB,CAApB;;IACA,IAAI,KAAK7B,WAAT,EAAsB;MAClB,IAAI6B,YAAY,GAAG,KAAK7B,WAAL,CAAiBE,OAAjB,GAA2BJ,WAA3B,CAAnB;MACA,OAAO+B,YAAP;IACH;;IACD,OAAO,IAAP;EACH,CA/ZQ,CAgaT;;;EACA3D,gBAAgB,CAACpO,MAAD,EAAS6N,SAAT,EAAoB;IAChC,MAAMY,UAAU,GAAG,KAAKqD,8BAAL,CAAoC9R,MAApC,CAAnB;;IACA,IAAIyO,UAAJ,EAAgB;MACZA,UAAU,CAACL,gBAAX,CAA4BpO,MAA5B,EAAoC6N,SAApC;IACH;EACJ;;EACDnW,oBAAoB,CAACsa,YAAD,EAAe;IAC/B,KAAK/O,kBAAL,CAAwB+O,YAAxB;EACH;;EACD7Z,kBAAkB,CAAC8Z,OAAD,EAAU;IACxB,MAAM;MAAEC,YAAF;MAAgBC;IAAhB,IAAuCF,OAA7C;;IACA,IAAIE,kBAAJ,EAAwB;MACpB,IAAIC,aAAa,GAAG,KAAKR,gBAAL,CAAsBM,YAAtB,CAApB;;MACA,IAAIE,aAAJ,EAAmB;QACf,KAAKtC,aAAL,CAAmBsC,aAAnB,EAAkC,MAAM;UAAE,KAAKP,WAAL,CAAiBK,YAAjB;QAAiC,CAA3E;MACH,CAFD,MAGK;QACD,KAAKL,WAAL,CAAiBK,YAAjB;MACH;IACJ,CARD,MASK;MACD,KAAKL,WAAL,CAAiBK,YAAjB;IACH;EACJ;;EACDla,oBAAoB,CAACia,OAAD,EAAU;IAC1B,MAAM;MAAEI,gBAAF;MAAoBC;IAApB,IAAwCL,OAA9C;IACA,MAAMM,kBAAkB,GAAG,KAAKtX,OAAL,CAAagV,OAAb,CAAqBoC,gBAArB,CAA3B;IACA,IAAIG,aAAa,GAAG,KAAKvX,OAAL,CAAasX,kBAAkB,IAAID,eAAe,GAAG,CAAH,GAAO,CAAC,CAA3B,CAA/B,CAApB,CAH0B,CAGyD;;IACnF,IAAI,CAACE,aAAL,EAAoB;MAChB;MACAA,aAAa,GAAG,KAAKvX,OAAL,CAAasX,kBAAkB,GAAG,CAArB,GAAyB,CAAzB,GAA6B,KAAKrC,WAAL,CAAiBnR,MAAjB,GAA0B,CAApE,CAAhB;IACH;;IACD,KAAK+Q,aAAL,CAAmB0C,aAAnB;EACH;;EACD3a,mBAAmB,CAAC4a,WAAD,EAAc;IAC7B,KAAKxG,OAAL,CAAayG,WAAb,CAAyBD,WAAzB;EACH;;EACDna,uBAAuB,CAACqa,MAAD,EAAS;IAC5B,KAAKzX,mBAAL,GAA2ByX,MAA3B;EACH;;EACDC,qBAAqB,CAACC,IAAD,EAAO;IACxB,IAAIA,IAAJ,EAAU;MACN,KAAKnE,cAAL,CAAoBmE,IAApB;IACH;EACJ;;EACDC,sBAAsB,CAACtZ,MAAD,EAAS;IAC3B,MAAM8V,YAAY,GAAG,KAAKrU,OAAL,CAAasU,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAAC9O,WAAF,CAAcoH,EAAd,IAAoBtO,MAA3C,CAArB;;IACA,IAAI8V,YAAJ,EAAkB;MACd,KAAKuC,WAAL,CAAiBvC,YAAjB;IACH;EACJ;;EACDyD,iCAAiC,CAACvZ,MAAD,EAAS;IACtC,MAAM8V,YAAY,GAAG,KAAKrU,OAAL,CAAasU,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAAC9O,WAAF,CAAcoH,EAAd,IAAoBtO,MAA3C,CAArB;;IACA,IAAI8V,YAAJ,EAAkB;MACd,MAAMb,UAAU,GAAG,KAAKqD,8BAAL,CAAoCxC,YAApC,CAAnB;;MACA,IAAIb,UAAJ,EAAgB;QACZA,UAAU,CAACpO,mBAAX,CAA+BiP,YAA/B;MACH;IACJ;EACJ;;AA5dQ;;AA8dbrG,MAAM,CAAC+J,IAAP,GAAc,SAASC,cAAT,CAAwBC,CAAxB,EAA2B;EAAE,OAAO,KAAKA,CAAC,IAAIjK,MAAV,EAAkBtT,MAAM,CAACwd,iBAAP,CAAyBvd,MAAM,CAACN,UAAhC,CAAlB,CAAP;AAAwE,CAAnH;;AACA2T,MAAM,CAACmK,IAAP,GAAc,aAAczd,MAAM,CAAC0d,iBAAP,CAAyB;EAAE5P,IAAI,EAAEwF,MAAR;EAAgBqK,SAAS,EAAE,CAAC,CAAC,SAAD,CAAD,CAA3B;EAA0CC,SAAS,EAAE,SAASC,YAAT,CAAsBtd,EAAtB,EAA0BC,GAA1B,EAA+B;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MAC/IP,MAAM,CAAC8d,WAAP,CAAmBzd,GAAnB,EAAwB,CAAxB;IACH;;IAAC,IAAIE,EAAE,GAAG,CAAT,EAAY;MACV,IAAIwd,EAAJ;;MACA/d,MAAM,CAACge,cAAP,CAAsBD,EAAE,GAAG/d,MAAM,CAACie,WAAP,EAA3B,MAAqDzd,GAAG,CAAC+Z,WAAJ,GAAkBwD,EAAvE;IACH;EAAE,CAL8C;EAK5CG,YAAY,EAAE,SAASC,mBAAT,CAA6B5d,EAA7B,EAAiCC,GAAjC,EAAsC;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MACnEP,MAAM,CAACyB,UAAP,CAAkB,QAAlB,EAA4B,SAAS2c,gCAAT,CAA0Czc,MAA1C,EAAkD;QAAE,OAAOnB,GAAG,CAACmV,QAAJ,CAAahU,MAAb,CAAP;MAA8B,CAA9G,EAAgH,KAAhH,EAAuH3B,MAAM,CAACqe,eAA9H;IACH;EAAE,CAP8C;EAO5CC,MAAM,EAAE;IAAEhb,WAAW,EAAE,aAAf;IAA8BmQ,0BAA0B,EAAE,4BAA1D;IAAwFC,eAAe,EAAE,iBAAzG;IAA4HC,eAAe,EAAE,iBAA7I;IAAgKC,cAAc,EAAE,gBAAhL;IAAkM7P,aAAa,EAAE,eAAjN;IAAkOC,aAAa,EAAE,eAAjP;IAAkQ6P,YAAY,EAAE,cAAhR;IAAgS3O,aAAa,EAAE,eAA/S;IAAgU4O,WAAW,EAAE,aAA7U;IAA4VC,mBAAmB,EAAE,qBAAjX;IAAwYhK,KAAK,EAAE,OAA/Y;IAAwZ0G,kBAAkB,EAAE,oBAA5a;IAAkc3J,iBAAiB,EAAE,mBAArd;IAA0ekN,2BAA2B,EAAE,6BAAvgB;IAAsiBC,6BAA6B,EAAE,+BAArkB;IAAsmBC,wBAAwB,EAAE,0BAAhoB;IAA4pBC,eAAe,EAAE,iBAA7qB;IAAgsB5Q,eAAe,EAAE,iBAAjtB;IAAouB6Q,oCAAoC,EAAE,sCAA1wB;IAAkzBnP,KAAK,EAAE,OAAzzB;IAAk0Bf,qBAAqB,EAAE,uBAAz1B;IAAk3BD,eAAe,EAAE,iBAAn4B;IAAs5BqQ,yBAAyB,EAAE,2BAAj7B;IAA88Ba,UAAU,EAAE,YAA19B;IAAw+BxR,iBAAiB,EAAE,mBAA3/B;IAAghCC,YAAY,EAAE,cAA9hC;IAA8iC0S,OAAO,EAAE,SAAvjC;IAAkkCxS,YAAY,EAAE,cAAhlC;IAAgmCD,MAAM,EAAE,QAAxmC;IAAknC+S,aAAa,EAAE,eAAjoC;IAAkpC7V,WAAW,EAAE;EAA/pC,CAPoC;EAO4oCwd,OAAO,EAAE;IAAEhK,oBAAoB,EAAE,sBAAxB;IAAgDC,uBAAuB,EAAE,yBAAzE;IAAoGC,uBAAuB,EAAE,yBAA7H;IAAwJC,cAAc,EAAE;EAAxK,CAPrpC;EAOi1C8J,KAAK,EAAE,CAPx1C;EAO21CC,IAAI,EAAE,CAPj2C;EAOo2CC,MAAM,EAAE,CAAC,CAAC,KAAD,EAAQ,YAAR,EAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC,EAAoC,MAApC,CAAD,EAA8C,CAAC,IAAD,EAAO,SAAP,EAAkB,CAAlB,EAAqB,SAArB,EAAgC,CAAhC,EAAmC,MAAnC,CAA9C,EAA0F,CAAC,KAAD,EAAQ,YAAR,EAAsB,CAAtB,EAAyB,MAAzB,CAA1F,EAA4H,CAAC,IAAD,EAAO,SAAP,EAAkB,CAAlB,EAAqB,SAArB,CAA5H,EAA6J,CAAC,CAAD,EAAI,cAAJ,EAAoB,eAApB,EAAqC,QAArC,EAA+C,aAA/C,EAA8D,eAA9D,EAA+E,cAA/E,EAA+F,sBAA/F,EAAuH,4BAAvH,EAAqJ,SAArJ,EAAgK,qBAAhK,EAAuL,sBAAvL,EAA+M,wBAA/M,EAAyO,yBAAzO,CAA7J,EAAka,CAAC,CAAD,EAAI,SAAJ,EAAe,SAAf,EAA0B,CAA1B,EAA6B,OAA7B,EAAsC,SAAtC,CAAla,EAAod,CAAC,CAAD,EAAI,SAAJ,EAAe,SAAf,CAApd,EAA+e,CAAC,CAAD,EAAI,mBAAJ,EAAyB,cAAzB,EAAyC,QAAzC,EAAmD,QAAnD,EAA6D,aAA7D,EAA4E,eAA5E,EAA6F,eAA7F,EAA8G,iBAA9G,EAAiI,uBAAjI,EAA0J,iBAA1J,EAA6K,gBAA7K,EAA+L,eAA/L,EAAgN,gBAAhN,EAAkO,oBAAlO,EAAwP,mBAAxP,EAA6Q,wBAA7Q,CAA/e,EAAuxB,CAAC,YAAD,EAAe,EAAf,CAAvxB,CAP52C;EAOwpEC,QAAQ,EAAE,SAASC,eAAT,CAAyBre,EAAzB,EAA6BC,GAA7B,EAAkC;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MAC/vEP,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBzE,sBAArB,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,MAAnD,EAA2D,CAA3D;MACAN,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBX,qBAArB,EAA4C,CAA5C,EAA+C,EAA/C,EAAmD,KAAnD,EAA0D,CAA1D;IACH;;IAAC,IAAI7D,EAAE,GAAG,CAAT,EAAY;MACVP,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BL,GAAG,CAACO,WAA9B;MACAf,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;MACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0B,CAACL,GAAG,CAAC2U,UAAL,IAAmB3U,GAAG,CAAC0U,cAAvB,IAAyC,CAAC1U,GAAG,CAACyU,mBAAxE;IACH;EAAE,CAd8C;EAc5C4J,YAAY,EAAE,YAAY;IAAE,OAAO,CAAC3e,MAAM,CAAC4e,OAAR,EAAiB5e,MAAM,CAAC6e,OAAxB,EAAiC7e,MAAM,CAAC8e,IAAxC,EAA8C9e,MAAM,CAAC+e,OAArD,EAA8DC,0BAA9D,EAA0FC,qBAA1F,EAAiHC,YAAjH,CAAP;EAAwI,CAdxH;EAc0HC,MAAM,EAAE,CAAC,w1DAAD,EAA21D,+qBAA31D,EAA4gF,44CAA5gF,EAA05H,g9BAA15H,EAA42J,ukCAA52J,CAdlI;EAcwjMC,aAAa,EAAE;AAdvkM,CAAzB,CAA5B;;AAeAhM,MAAM,CAACiM,cAAP,GAAwB,MAAM,CAC1B;EAAEzR,IAAI,EAAEnO;AAAR,CAD0B,CAA9B;;AAGA2T,MAAM,CAACkM,cAAP,GAAwB;EACpBrK,UAAU,EAAE,CAAC;IAAErH,IAAI,EAAE3O;EAAR,CAAD,CADQ;EAEpBmX,OAAO,EAAE,CAAC;IAAExI,IAAI,EAAE3O;EAAR,CAAD,CAFW;EAGpB2E,YAAY,EAAE,CAAC;IAAEgK,IAAI,EAAE3O;EAAR,CAAD,CAHM;EAIpB0E,MAAM,EAAE,CAAC;IAAEiK,IAAI,EAAE3O;EAAR,CAAD,CAJY;EAKpBmE,WAAW,EAAE,CAAC;IAAEwK,IAAI,EAAE3O;EAAR,CAAD,CALO;EAMpBsU,0BAA0B,EAAE,CAAC;IAAE3F,IAAI,EAAE3O;EAAR,CAAD,CANR;EAOpBuU,eAAe,EAAE,CAAC;IAAE5F,IAAI,EAAE3O;EAAR,CAAD,CAPG;EAQpBwU,eAAe,EAAE,CAAC;IAAE7F,IAAI,EAAE3O;EAAR,CAAD,CARG;EASpByU,cAAc,EAAE,CAAC;IAAE9F,IAAI,EAAE3O;EAAR,CAAD,CATI;EAUpB4E,aAAa,EAAE,CAAC;IAAE+J,IAAI,EAAE3O;EAAR,CAAD,CAVK;EAWpB6E,aAAa,EAAE,CAAC;IAAE8J,IAAI,EAAE3O;EAAR,CAAD,CAXK;EAYpB0U,YAAY,EAAE,CAAC;IAAE/F,IAAI,EAAE3O;EAAR,CAAD,CAZM;EAapB+F,aAAa,EAAE,CAAC;IAAE4I,IAAI,EAAE3O;EAAR,CAAD,CAbK;EAcpB2U,WAAW,EAAE,CAAC;IAAEhG,IAAI,EAAE3O;EAAR,CAAD,CAdO;EAepB4U,mBAAmB,EAAE,CAAC;IAAEjG,IAAI,EAAE3O;EAAR,CAAD,CAfD;EAgBpB4K,KAAK,EAAE,CAAC;IAAE+D,IAAI,EAAE3O;EAAR,CAAD,CAhBa;EAiBpBsR,kBAAkB,EAAE,CAAC;IAAE3C,IAAI,EAAE3O;EAAR,CAAD,CAjBA;EAkBpB2H,iBAAiB,EAAE,CAAC;IAAEgH,IAAI,EAAE3O;EAAR,CAAD,CAlBC;EAmBpB6U,2BAA2B,EAAE,CAAC;IAAElG,IAAI,EAAE3O;EAAR,CAAD,CAnBT;EAoBpB8U,6BAA6B,EAAE,CAAC;IAAEnG,IAAI,EAAE3O;EAAR,CAAD,CApBX;EAqBpB+U,wBAAwB,EAAE,CAAC;IAAEpG,IAAI,EAAE3O;EAAR,CAAD,CArBN;EAsBpBgV,eAAe,EAAE,CAAC;IAAErG,IAAI,EAAE3O;EAAR,CAAD,CAtBG;EAuBpByE,YAAY,EAAE,CAAC;IAAEkK,IAAI,EAAE3O;EAAR,CAAD,CAvBM;EAwBpBoE,eAAe,EAAE,CAAC;IAAEuK,IAAI,EAAE3O;EAAR,CAAD,CAxBG;EAyBpBiV,oCAAoC,EAAE,CAAC;IAAEtG,IAAI,EAAE3O;EAAR,CAAD,CAzBlB;EA0BpByX,aAAa,EAAE,CAAC;IAAE9I,IAAI,EAAE3O;EAAR,CAAD,CA1BK;EA2BpB8F,KAAK,EAAE,CAAC;IAAE6I,IAAI,EAAE3O;EAAR,CAAD,CA3Ba;EA4BpB4B,WAAW,EAAE,CAAC;IAAE+M,IAAI,EAAE3O;EAAR,CAAD,CA5BO;EA6BpB+E,qBAAqB,EAAE,CAAC;IAAE4J,IAAI,EAAE3O;EAAR,CAAD,CA7BH;EA8BpB8E,eAAe,EAAE,CAAC;IAAE6J,IAAI,EAAE3O;EAAR,CAAD,CA9BG;EA+BpBmV,yBAAyB,EAAE,CAAC;IAAExG,IAAI,EAAE3O;EAAR,CAAD,CA/BP;EAgCpBwE,iBAAiB,EAAE,CAAC;IAAEmK,IAAI,EAAE3O;EAAR,CAAD,CAhCC;EAiCpBoV,oBAAoB,EAAE,CAAC;IAAEzG,IAAI,EAAE1O;EAAR,CAAD,CAjCF;EAkCpBoV,uBAAuB,EAAE,CAAC;IAAE1G,IAAI,EAAE1O;EAAR,CAAD,CAlCL;EAmCpBqV,uBAAuB,EAAE,CAAC;IAAE3G,IAAI,EAAE1O;EAAR,CAAD,CAnCL;EAoCpBsV,cAAc,EAAE,CAAC;IAAE5G,IAAI,EAAE1O;EAAR,CAAD,CApCI;EAqCpBmb,WAAW,EAAE,CAAC;IAAEzM,IAAI,EAAEzO,YAAR;IAAsBogB,IAAI,EAAE,CAAC,YAAD;EAA5B,CAAD,CArCO;EAsCpB9J,QAAQ,EAAE,CAAC;IAAE7H,IAAI,EAAExO,YAAR;IAAsBmgB,IAAI,EAAE,CAAC,eAAD,EAAkB,CAAC,QAAD,CAAlB;EAA5B,CAAD;AAtCU,CAAxB;;AAwCA,CAAC,YAAY;EAAE,CAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD1f,MAAM,CAAC2f,iBAAP,CAAyBrM,MAAzB,EAAiC,CAAC;IAC5FxF,IAAI,EAAE7O,SADsF;IAE5FwgB,IAAI,EAAE,CAAC;MAAEG,QAAQ,EAAE,SAAZ;MAAuBjB,QAAQ,EAAE,8sEAAjC;MAAivEW,aAAa,EAAEpgB,iBAAiB,CAAC2gB,IAAlxE;MAAwxER,MAAM,EAAE,CAAC,w1DAAD,EAA21D,+qBAA31D,EAA4gF,44CAA5gF,EAA05H,g9BAA15H,EAA42J,ukCAA52J;IAAhyE,CAAD;EAFsF,CAAD,CAAjC,EAG1D,YAAY;IAAE,OAAO,CAAC;MAAEvR,IAAI,EAAE7N,MAAM,CAACN;IAAf,CAAD,CAAP;EAAuC,CAHK,EAGH;IAAE2D,WAAW,EAAE,CAAC;MACnEwK,IAAI,EAAE3O;IAD6D,CAAD,CAAf;IAEnDsU,0BAA0B,EAAE,CAAC;MAC7B3F,IAAI,EAAE3O;IADuB,CAAD,CAFuB;IAInDuU,eAAe,EAAE,CAAC;MAClB5F,IAAI,EAAE3O;IADY,CAAD,CAJkC;IAMnDwU,eAAe,EAAE,CAAC;MAClB7F,IAAI,EAAE3O;IADY,CAAD,CANkC;IAQnDyU,cAAc,EAAE,CAAC;MACjB9F,IAAI,EAAE3O;IADW,CAAD,CARmC;IAUnD4E,aAAa,EAAE,CAAC;MAChB+J,IAAI,EAAE3O;IADU,CAAD,CAVoC;IAYnD6E,aAAa,EAAE,CAAC;MAChB8J,IAAI,EAAE3O;IADU,CAAD,CAZoC;IAcnD0U,YAAY,EAAE,CAAC;MACf/F,IAAI,EAAE3O;IADS,CAAD,CAdqC;IAgBnD+F,aAAa,EAAE,CAAC;MAChB4I,IAAI,EAAE3O;IADU,CAAD,CAhBoC;IAkBnD2U,WAAW,EAAE,CAAC;MACdhG,IAAI,EAAE3O;IADQ,CAAD,CAlBsC;IAoBnD4U,mBAAmB,EAAE,CAAC;MACtBjG,IAAI,EAAE3O;IADgB,CAAD,CApB8B;IAsBnD4K,KAAK,EAAE,CAAC;MACR+D,IAAI,EAAE3O;IADE,CAAD,CAtB4C;IAwBnDsR,kBAAkB,EAAE,CAAC;MACrB3C,IAAI,EAAE3O;IADe,CAAD,CAxB+B;IA0BnD2H,iBAAiB,EAAE,CAAC;MACpBgH,IAAI,EAAE3O;IADc,CAAD,CA1BgC;IA4BnD6U,2BAA2B,EAAE,CAAC;MAC9BlG,IAAI,EAAE3O;IADwB,CAAD,CA5BsB;IA8BnD8U,6BAA6B,EAAE,CAAC;MAChCnG,IAAI,EAAE3O;IAD0B,CAAD,CA9BoB;IAgCnD+U,wBAAwB,EAAE,CAAC;MAC3BpG,IAAI,EAAE3O;IADqB,CAAD,CAhCyB;IAkCnDgV,eAAe,EAAE,CAAC;MAClBrG,IAAI,EAAE3O;IADY,CAAD,CAlCkC;IAoCnDoE,eAAe,EAAE,CAAC;MAClBuK,IAAI,EAAE3O;IADY,CAAD,CApCkC;IAsCnDiV,oCAAoC,EAAE,CAAC;MACvCtG,IAAI,EAAE3O;IADiC,CAAD,CAtCa;IAwCnD8F,KAAK,EAAE,CAAC;MACR6I,IAAI,EAAE3O;IADE,CAAD,CAxC4C;IA0CnD+E,qBAAqB,EAAE,CAAC;MACxB4J,IAAI,EAAE3O;IADkB,CAAD,CA1C4B;IA4CnD8E,eAAe,EAAE,CAAC;MAClB6J,IAAI,EAAE3O;IADY,CAAD,CA5CkC;IA8CnDmV,yBAAyB,EAAE,CAAC;MAC5BxG,IAAI,EAAE3O;IADsB,CAAD,CA9CwB;IAgDnDoV,oBAAoB,EAAE,CAAC;MACvBzG,IAAI,EAAE1O;IADiB,CAAD,CAhD6B;IAkDnDoV,uBAAuB,EAAE,CAAC;MAC1B1G,IAAI,EAAE1O;IADoB,CAAD,CAlD0B;IAoDnDqV,uBAAuB,EAAE,CAAC;MAC1B3G,IAAI,EAAE1O;IADoB,CAAD,CApD0B;IAsDnDsV,cAAc,EAAE,CAAC;MACjB5G,IAAI,EAAE1O;IADW,CAAD,CAtDmC;IAwDnD+V,UAAU,EAAE,CAAC;MACbrH,IAAI,EAAE3O;IADO,CAAD,CAxDuC;IA0DnDwW,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAExO,YADK;MAEXmgB,IAAI,EAAE,CAAC,eAAD,EAAkB,CAAC,QAAD,CAAlB;IAFK,CAAD,CA1DyC;IA6DnD9b,iBAAiB,EAAE,CAAC;MACpBmK,IAAI,EAAE3O;IADc,CAAD,CA7DgC;IA+DnDyE,YAAY,EAAE,CAAC;MACfkK,IAAI,EAAE3O;IADS,CAAD,CA/DqC;IAiEnDmX,OAAO,EAAE,CAAC;MACVxI,IAAI,EAAE3O;IADI,CAAD,CAjE0C;IAmEnD2E,YAAY,EAAE,CAAC;MACfgK,IAAI,EAAE3O;IADS,CAAD,CAnEqC;IAqEnD0E,MAAM,EAAE,CAAC;MACTiK,IAAI,EAAE3O;IADG,CAAD,CArE2C;IAuEnDyX,aAAa,EAAE,CAAC;MAChB9I,IAAI,EAAE3O;IADU,CAAD,CAvEoC;IAyEnD4B,WAAW,EAAE,CAAC;MACd+M,IAAI,EAAE3O;IADQ,CAAD,CAzEsC;IA2EnDob,WAAW,EAAE,CAAC;MACdzM,IAAI,EAAEzO,YADQ;MAEdogB,IAAI,EAAE,CAAC,YAAD;IAFQ,CAAD;EA3EsC,CAHG,CAAnD;AAiFC,CAjFhB;;AAmFA,IAAIK,eAAe,GAAG,CAClB;EAAEC,QAAQ,EAAE,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,CAAZ;EAAiCC,OAAO,EAAE;AAA1C,CADkB,EAElB;EAAED,QAAQ,EAAE,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,CAAZ;EAAiCC,OAAO,EAAE;AAA1C,CAFkB,EAGlB;EAAED,QAAQ,EAAE,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,CAAZ;EAAiCC,OAAO,EAAE;AAA1C,CAHkB,EAIlB;EAAED,QAAQ,EAAE,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,CAAZ;EAAiCC,OAAO,EAAE;AAA1C,CAJkB,EAKlB;EAAED,QAAQ,EAAE,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,CAAZ;EAAiCC,OAAO,EAAE;AAA1C,CALkB,EAMlB;EAAED,QAAQ,EAAE,CAAC,KAAD,EAAQ,KAAR,CAAZ;EAA4BC,OAAO,EAAE;AAArC,CANkB,EAOlB;EAAED,QAAQ,EAAE,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,EAAoB,IAApB,EAA0B,KAA1B,EAAiC,IAAjC,CAAZ;EAAoDC,OAAO,EAAE;AAA7D,CAPkB,EAQlB;EAAED,QAAQ,EAAE,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,EAAoB,IAApB,EAA0B,KAA1B,EAAiC,IAAjC,CAAZ;EAAoDC,OAAO,EAAE;AAA7D,CARkB,EASlB;EAAED,QAAQ,EAAE,CAAC,KAAD,CAAZ;EAAqBC,OAAO,EAAE;AAA9B,CATkB,EAUlB;EAAED,QAAQ,EAAE,CAAC,KAAD,CAAZ;EAAqBC,OAAO,EAAE;AAA9B,CAVkB,EAWlB;EAAED,QAAQ,EAAE,CAAC,KAAD,CAAZ;EAAqBC,OAAO,EAAE;AAA9B,CAXkB,EAYlB;EAAED,QAAQ,EAAE,CAAC,IAAD,CAAZ;EAAoBC,OAAO,EAAE;AAA7B,CAZkB,EAalB;EAAED,QAAQ,EAAE,CAAC,KAAD,CAAZ;EAAqBC,OAAO,EAAE;AAA9B,CAbkB,EAclB;EAAED,QAAQ,EAAE,CAAC,KAAD,CAAZ;EAAqBC,OAAO,EAAE;AAA9B,CAdkB,EAelB;EAAED,QAAQ,EAAE,CAAC,KAAD,CAAZ;EAAqBC,OAAO,EAAE;AAA9B,CAfkB,CAAtB;AAiBA;AACA;AACA;;AACA,MAAMC,WAAN,CAAkB;EACdC,SAAS,CAACzT,OAAD,EAAU0T,WAAV,EAAuB;IAC5B,IAAIA,WAAW,IAAI1T,OAAf,IAA0BA,OAAO,CAACrD,MAAR,GAAiB,CAA/C,EAAkD;MAC9C0W,eAAe,CAAC/H,OAAhB,CAAwBqI,KAAK,IAAI;QAC7BA,KAAK,CAACL,QAAN,CAAehI,OAAf,CAAuBsI,OAAO,IAAI;UAC9B5T,OAAO,GAAGA,OAAO,CAACmF,OAAR,CAAgByO,OAAhB,EAAyBD,KAAK,CAACJ,OAA/B,CAAV;QACH,CAFD;MAGH,CAJD;IAKH;;IACD,OAAOvT,OAAP;EACH;;AAVa;;AAYlBwT,WAAW,CAAC5C,IAAZ,GAAmB,SAASiD,mBAAT,CAA6B/C,CAA7B,EAAgC;EAAE,OAAO,KAAKA,CAAC,IAAI0C,WAAV,GAAP;AAAkC,CAAvF;;AACAA,WAAW,CAACM,KAAZ,GAAoB,aAAcvgB,MAAM,CAACwgB,YAAP,CAAoB;EAAEpN,IAAI,EAAE,SAAR;EAAmBtF,IAAI,EAAEmS,WAAzB;EAAsCQ,IAAI,EAAE;AAA5C,CAApB,CAAlC;;AACA,CAAC,YAAY;EAAE,CAAC,OAAOf,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD1f,MAAM,CAAC2f,iBAAP,CAAyBM,WAAzB,EAAsC,CAAC;IACjGnS,IAAI,EAAEvO,IAD2F;IAEjGkgB,IAAI,EAAE,CAAC;MAAErM,IAAI,EAAE;IAAR,CAAD;EAF2F,CAAD,CAAtC,EAG1D,IAH0D,EAGpD,IAHoD,CAAnD;AAGO,CAHtB;AAKA;AACA;AACA;;;AACA,MAAMsN,UAAN,CAAiB;EACbR,SAAS,CAACzT,OAAD,EAAU0T,WAAV,EAAuB;IAC5B,IAAIA,WAAW,IAAI1T,OAAf,IAA0BA,OAAO,CAACrD,MAAR,GAAiB,CAA/C,EAAkD;MAC9C,IAAIuX,YAAJ;MACA,IAAIC,sBAAJ;MACA,IAAIC,iBAAJ;MACA,IAAIC,oBAAJ,CAJ8C,CAK9C;;MACAF,sBAAsB,GAAG,yEAAzB;MACAD,YAAY,GAAGlU,OAAO,CAACmF,OAAR,CAAgBgP,sBAAhB,EAAwC,qCAAxC,CAAf,CAP8C,CAQ9C;;MACAC,iBAAiB,GAAG,gCAApB;MACAF,YAAY,GAAGA,YAAY,CAAC/O,OAAb,CAAqBiP,iBAArB,EAAwC,8CAAxC,CAAf,CAV8C,CAW9C;;MACAC,oBAAoB,GAAG,0DAAvB;MACAH,YAAY,GAAGA,YAAY,CAAC/O,OAAb,CAAqBkP,oBAArB,EAA2C,4BAA3C,CAAf;MACA,OAAOH,YAAP;IACH,CAfD,MAiBI,OAAOlU,OAAP;EACP;;AApBY;;AAsBjBiU,UAAU,CAACrD,IAAX,GAAkB,SAAS0D,kBAAT,CAA4BxD,CAA5B,EAA+B;EAAE,OAAO,KAAKA,CAAC,IAAImD,UAAV,GAAP;AAAiC,CAApF;;AACAA,UAAU,CAACH,KAAX,GAAmB,aAAcvgB,MAAM,CAACwgB,YAAP,CAAoB;EAAEpN,IAAI,EAAE,QAAR;EAAkBtF,IAAI,EAAE4S,UAAxB;EAAoCD,IAAI,EAAE;AAA1C,CAApB,CAAjC;;AACA,CAAC,YAAY;EAAE,CAAC,OAAOf,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD1f,MAAM,CAAC2f,iBAAP,CAAyBe,UAAzB,EAAqC,CAAC;IAChG5S,IAAI,EAAEvO,IAD0F;IAEhGkgB,IAAI,EAAE,CAAC;MAAErM,IAAI,EAAE;IAAR,CAAD;EAF0F,CAAD,CAArC,EAG1D,IAH0D,EAGpD,IAHoD,CAAnD;AAGO,CAHtB;AAKA;AACA;AACA;;;AACA,MAAMgM,YAAN,CAAmB;EACfzO,WAAW,CAACqQ,SAAD,EAAY;IACnB,KAAKA,SAAL,GAAiBA,SAAjB;EACH;;EACDd,SAAS,CAACe,GAAD,EAAM;IACX,OAAO,KAAKD,SAAL,CAAeE,8BAAf,CAA8CD,GAA9C,CAAP;EACH;;AANc;;AAQnB7B,YAAY,CAAC/B,IAAb,GAAoB,SAAS8D,oBAAT,CAA8B5D,CAA9B,EAAiC;EAAE,OAAO,KAAKA,CAAC,IAAI6B,YAAV,EAAwBpf,MAAM,CAACwd,iBAAP,CAAyBrd,MAAM,CAACJ,YAAhC,EAA8C,EAA9C,CAAxB,CAAP;AAAoF,CAA3I;;AACAqf,YAAY,CAACmB,KAAb,GAAqB,aAAcvgB,MAAM,CAACwgB,YAAP,CAAoB;EAAEpN,IAAI,EAAE,UAAR;EAAoBtF,IAAI,EAAEsR,YAA1B;EAAwCqB,IAAI,EAAE;AAA9C,CAApB,CAAnC;;AACArB,YAAY,CAACG,cAAb,GAA8B,MAAM,CAChC;EAAEzR,IAAI,EAAE/N;AAAR,CADgC,CAApC;;AAGA,CAAC,YAAY;EAAE,CAAC,OAAO2f,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD1f,MAAM,CAAC2f,iBAAP,CAAyBP,YAAzB,EAAuC,CAAC;IAClGtR,IAAI,EAAEvO,IAD4F;IAElGkgB,IAAI,EAAE,CAAC;MAAErM,IAAI,EAAE;IAAR,CAAD;EAF4F,CAAD,CAAvC,EAG1D,YAAY;IAAE,OAAO,CAAC;MAAEtF,IAAI,EAAE3N,MAAM,CAACJ;IAAf,CAAD,CAAP;EAAyC,CAHG,EAGD,IAHC,CAAnD;AAG0D,CAHzE;AAKA;AACA;AACA;;;AACA,MAAMqhB,2BAAN,CAAkC;EAC9BlB,SAAS,CAACnV,WAAD,EAAc0B,OAAd,EAAuB;IAC5B,IAAI1B,WAAW,IAAIA,WAAW,CAACe,eAAZ,IAA+BC,mBAAmB,CAACC,KAAtE,EAA6E;MACzE,IAAIqV,KAAK,GAAGtW,WAAZ;MACA,IAAIuW,SAAS,GAAGD,KAAK,CAACjP,UAAN,CAAiBmP,SAAjB,CAA2B1H,CAAC,IAAIA,CAAC,CAAC1H,EAAF,IAAQ1F,OAAO,CAACD,MAAhD,CAAhB;MACA,OAAO6U,KAAK,CAACjP,UAAN,CAAiBkP,SAAS,IAAI,CAAb,GAAiBA,SAAjB,GAA6B,CAA9C,EAAiD3Y,WAAxD;IACH,CAJD,MAMI,OAAO,EAAP;EACP;;AAT6B;;AAWlCyY,2BAA2B,CAAC/D,IAA5B,GAAmC,SAASmE,mCAAT,CAA6CjE,CAA7C,EAAgD;EAAE,OAAO,KAAKA,CAAC,IAAI6D,2BAAV,GAAP;AAAkD,CAAvI;;AACAA,2BAA2B,CAACb,KAA5B,GAAoC,aAAcvgB,MAAM,CAACwgB,YAAP,CAAoB;EAAEpN,IAAI,EAAE,yBAAR;EAAmCtF,IAAI,EAAEsT,2BAAzC;EAAsEX,IAAI,EAAE;AAA5E,CAApB,CAAlD;;AACA,CAAC,YAAY;EAAE,CAAC,OAAOf,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD1f,MAAM,CAAC2f,iBAAP,CAAyByB,2BAAzB,EAAsD,CAAC;IACjHtT,IAAI,EAAEvO,IAD2G;IAEjHkgB,IAAI,EAAE,CAAC;MAAErM,IAAI,EAAE;IAAR,CAAD;EAF2G,CAAD,CAAtD,EAG1D,IAH0D,EAGpD,IAHoD,CAAnD;AAGO,CAHtB;;AAKA,MAAMqO,sBAAN,CAA6B;EACzB9Q,WAAW,GAAG;IACV,KAAKlB,yBAAL,GAAiC,IAAIzQ,YAAJ,EAAjC;EACH;;EACD8G,eAAe,CAACkX,MAAD,EAAS;IACpBA,MAAM,CAAC5D,QAAP,GAAkB,IAAlB;;IACA,IAAI4D,MAAM,CAAC0E,MAAX,EAAmB;MACf1E,MAAM,CAAC0E,MAAP,CAAc1E,MAAM,CAAC5K,UAArB;IACH;;IACD,KAAK3C,yBAAL,CAA+BqK,IAA/B,CAAoCkD,MAApC;EACH;;AAVwB;;AAY7ByE,sBAAsB,CAACpE,IAAvB,GAA8B,SAASsE,8BAAT,CAAwCpE,CAAxC,EAA2C;EAAE,OAAO,KAAKA,CAAC,IAAIkE,sBAAV,GAAP;AAA6C,CAAxH;;AACAA,sBAAsB,CAAChE,IAAvB,GAA8B,aAAczd,MAAM,CAAC0d,iBAAP,CAAyB;EAAE5P,IAAI,EAAE2T,sBAAR;EAAgC9D,SAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAA3C;EAAkEW,MAAM,EAAE;IAAEnY,OAAO,EAAE,SAAX;IAAsByb,mBAAmB,EAAE;EAA3C,CAA1E;EAA8IrD,OAAO,EAAE;IAAE9O,yBAAyB,EAAE;EAA7B,CAAvJ;EAAmN+O,KAAK,EAAE,CAA1N;EAA6NC,IAAI,EAAE,CAAnO;EAAsOC,MAAM,EAAE,CAAC,CAAC,OAAD,EAAU,iBAAV,EAA6B,CAA7B,EAAgC,MAAhC,CAAD,EAA0C,CAAC,CAAD,EAAI,iBAAJ,CAA1C,EAAkE,CAAC,CAAD,EAAI,2BAAJ,CAAlE,EAAoG,CAAC,CAAD,EAAI,cAAJ,CAApG,EAAyH,CAAC,CAAD,EAAI,yBAAJ,EAA+B,oBAA/B,EAAqD,UAArD,CAAzH,EAA2L,CAAC,CAAD,EAAI,SAAJ,EAAe,OAAf,EAAwB,CAAxB,EAA2B,OAA3B,EAAoC,SAApC,CAA3L,EAA2O,CAAC,CAAD,EAAI,SAAJ,EAAe,OAAf,CAA3O,CAA9O;EAAmfC,QAAQ,EAAE,SAASkD,+BAAT,CAAyCthB,EAAzC,EAA6CC,GAA7C,EAAkD;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MAC1nBP,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBmB,qCAArB,EAA4D,CAA5D,EAA+D,CAA/D,EAAkE,KAAlE,EAAyE,CAAzE;IACH;;IAAC,IAAI3F,EAAE,GAAG,CAAT,EAAY;MACVP,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BL,GAAG,CAAC2F,OAAJ,IAAe3F,GAAG,CAAC2F,OAAJ,CAAYiD,MAAZ,GAAqB,CAA9D;IACH;EAAE,CAJ8D;EAI5DyV,YAAY,EAAE,CAAC3e,MAAM,CAAC4e,OAAR,EAAiB5e,MAAM,CAAC6e,OAAxB,EAAiC7e,MAAM,CAAC8e,IAAxC,CAJ8C;EAICK,MAAM,EAAE,CAAC,q6BAAD;AAJT,CAAzB,CAA5C;;AAKAoC,sBAAsB,CAAClC,cAAvB,GAAwC,MAAM,EAA9C;;AACAkC,sBAAsB,CAACjC,cAAvB,GAAwC;EACpCrZ,OAAO,EAAE,CAAC;IAAE2H,IAAI,EAAE3O;EAAR,CAAD,CAD2B;EAEpCyiB,mBAAmB,EAAE,CAAC;IAAE9T,IAAI,EAAE3O;EAAR,CAAD,CAFe;EAGpCsQ,yBAAyB,EAAE,CAAC;IAAE3B,IAAI,EAAE1O;EAAR,CAAD;AAHS,CAAxC;;AAKA,CAAC,YAAY;EAAE,CAAC,OAAOsgB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD1f,MAAM,CAAC2f,iBAAP,CAAyB8B,sBAAzB,EAAiD,CAAC;IAC5G3T,IAAI,EAAE7O,SADsG;IAE5GwgB,IAAI,EAAE,CAAC;MAAEG,QAAQ,EAAE,iBAAZ;MAA+BjB,QAAQ,EAAE,idAAzC;MAA4fU,MAAM,EAAE,CAAC,ipBAAD;IAApgB,CAAD;EAFsG,CAAD,CAAjD,EAG1D,YAAY;IAAE,OAAO,EAAP;EAAY,CAHgC,EAG9B;IAAE5P,yBAAyB,EAAE,CAAC;MACtD3B,IAAI,EAAE1O;IADgD,CAAD,CAA7B;IAExB+G,OAAO,EAAE,CAAC;MACV2H,IAAI,EAAE3O;IADI,CAAD,CAFe;IAIxByiB,mBAAmB,EAAE,CAAC;MACtB9T,IAAI,EAAE3O;IADgB,CAAD;EAJG,CAH8B,CAAnD;AASC,CAThB;;AAWA,MAAM2iB,cAAN,CAAqB;EACe,OAAzBC,yBAAyB,CAAC3Q,mBAAD,EAAsB;IAClD,IAAIA,mBAAmB,GAAG,CAA1B,EAA6B;MACzB,IAAIA,mBAAmB,GAAG,EAA1B,EACI,OAAO,KAAP,CADJ,KAGI,OAAO4Q,MAAM,CAAC5Q,mBAAD,CAAb;IACP,CANiD,CAOlD;;;IACA,OAAO,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EAC8B,OAAnBhH,mBAAmB,CAACC,MAAD,EAAS4X,aAAT,EAAwB;IAC9C,IAAI7Q,mBAAmB,GAAG,CAA1B;;IACA,IAAI/G,MAAJ,EAAY;MACR+G,mBAAmB,GAAG/G,MAAM,CAACmG,QAAP,CAAgBmI,MAAhB,CAAuBkB,CAAC,IAAIA,CAAC,CAACrN,MAAF,IAAYyV,aAAZ,IAA6B,CAACpI,CAAC,CAAChB,QAA5D,EAAsEzP,MAA5F;IACH;;IACD,OAAO0Y,cAAc,CAACC,yBAAf,CAAyC3Q,mBAAzC,CAAP;EACH;;AAtBgB;;AAyBrB,SAASxI,+BAAT,CAAyCC,MAAzC,EAAiDjF,YAAjD,EAA+D;EAC3D,MAAMse,aAAa,GAAGnZ,qBAAqB,CAACF,MAAD,CAArB,CAA8BqJ,QAA9B,GAAyCiQ,WAAzC,EAAtB;EACA,OAAOve,YAAY,CAACgR,iBAAb,CAA+BsN,aAA/B,CAAP;AACH;;AAED,MAAMhD,0BAAN,CAAiC;EAC7BvO,WAAW,GAAG;IACV,KAAKtL,0BAAL,GAAkC,EAAlC;IACA,KAAKkP,oBAAL,GAA4B,IAAIvV,YAAJ,EAA5B;IACA,KAAK2F,sBAAL,GAA8B,IAAI3F,YAAJ,EAA9B;IACA,KAAK8F,uBAAL,GAA+B,IAAI9F,YAAJ,EAA/B;IACA,KAAKojB,4BAAL,GAAoC,EAApC;IACA,KAAKvb,WAAL,GAAmB,EAAnB,CANU,CAOV;;IACA,KAAKkC,qBAAL,GAA6BA,qBAA7B;IACA,KAAKH,+BAAL,GAAuCA,+BAAvC;;IACA,KAAKyZ,oBAAL,GAA4B,MAAM,KAAKD,4BAAL,GAAoC,EAAtE;EACH;;EACDE,WAAW,CAACC,OAAD,EAAU;IACjB,IAAI,KAAKhd,mBAAT,EAA8B;MAC1B,MAAMid,wBAAwB,GAAG,KAAKjd,mBAAL,IAA4B,KAAKA,mBAAL,CAAyB6M,UAAzB,CAAoCrH,WAApC,CAAgDoH,EAA7G;MACA,MAAMsQ,6BAA6B,GAAI,KAAKL,4BAAL,CAAkCzJ,MAAlC,CAAyC+J,IAAI,IAAIA,IAAI,CAACvQ,EAAL,IAAWqQ,wBAA5D,CAAD,CAAwFpZ,MAAxF,GAAiG,CAAvI;;MACA,IAAI,CAACqZ,6BAAL,EAAoC;QAChC,KAAKL,4BAAL,GAAoC,KAAKA,4BAAL,CAAkCnK,MAAlC,CAAyC,KAAK1S,mBAAL,CAAyB6M,UAAzB,CAAoCrH,WAA7E,CAApC;MACH;IACJ;EACJ;;EACuB,IAApBvB,oBAAoB,GAAG;IACvB,IAAI,KAAK3C,WAAL,CAAiBuC,MAAjB,GAA0B,CAA9B,EAAiC;MAC7B;MACA,OAAO,KAAKjE,YAAL,CAAkBwT,MAAlB,CAAyBkB,CAAC,IAAIA,CAAC,CAAClR,WAAF,CAAcga,WAAd,GAA4BC,QAA5B,CAAqC,KAAK/b,WAAL,CAAiB8b,WAAjB,EAArC,CAA9B,CAAP;IACH;;IACD,OAAO,KAAKxd,YAAZ;EACH;;EACDmC,6BAA6B,CAAC4V,IAAD,EAAO;IAChC,OAAQ,KAAKkF,4BAAL,CAAkCzJ,MAAlC,CAAyC+J,IAAI,IAAIA,IAAI,CAACvQ,EAAL,IAAW+K,IAAI,CAAC/K,EAAjE,CAAD,CAAuE/I,MAAvE,GAAgF,CAAvF;EACH;;EACDtB,gCAAgC,CAACiD,WAAD,EAAc;IAC1C,IAAI4O,YAAY,GAAG,KAAKrU,OAAL,CAAasU,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAAC9O,WAAF,CAAcoH,EAAd,IAAoBpH,WAAW,CAACoH,EAAvD,CAAnB;;IACA,IAAIwH,YAAJ,EAAkB;MACd,OAAOmI,cAAc,CAAC1X,mBAAf,CAAmCuP,YAAnC,EAAiD,KAAK9V,MAAtD,CAAP;IACH,CAFD,MAGK;MACD,IAAIuN,mBAAmB,GAAG,KAAKhM,oBAAL,CACrBuT,MADqB,CACdkB,CAAC,IAAIA,CAAC,CAAC9O,WAAF,CAAcoH,EAAd,IAAoBpH,WAAW,CAACoH,EAAhC,IAAsC,CAAC,KAAK9M,0BAAL,CAAgCuU,IAAhC,CAAqCoC,CAAC,IAAIA,CAAC,CAAC7J,EAAF,IAAQpH,WAAW,CAACoH,EAA9D,CAAvC,IAA4G0H,CAAC,CAACgJ,QAA9G,IAA0HhJ,CAAC,CAACgJ,QAAF,CAAWzR,mBAAX,GAAiC,CADlJ,EAErBtR,GAFqB,CAEhBgjB,mBAAD,IAAyB;QAC9B,OAAOA,mBAAmB,CAACD,QAApB,CAA6BzR,mBAApC;MACH,CAJyB,EAIvB,CAJuB,CAA1B;MAKA,OAAO0Q,cAAc,CAACC,yBAAf,CAAyC3Q,mBAAzC,CAAP;IACH;EACJ,CA7C4B,CA8C7B;;;EACAtH,kBAAkB,GAAG;IACjB,KAAKxG,WAAL,GAAmB,CAAC,KAAKA,WAAzB;EACH;;EACD6D,2BAA2B,CAAC4b,YAAD,EAAeC,SAAf,EAA0B;IACjD,IAAIA,SAAJ,EAAe;MACX,KAAKZ,4BAAL,CAAkCpJ,IAAlC,CAAuC+J,YAAvC;IACH,CAFD,MAGK;MACD,KAAKX,4BAAL,CAAkCjM,MAAlC,CAAyC,KAAKiM,4BAAL,CAAkC9H,OAAlC,CAA0CyI,YAA1C,CAAzC,EAAkG,CAAlG;IACH;EACJ;;EACDva,WAAW,CAACya,WAAD,EAAc;IACrB,KAAK1O,oBAAL,CAA0BuF,IAA1B,CAA+BmJ,WAA/B;EACH;;EACD3c,gCAAgC,GAAG;IAC/B,KAAK3B,sBAAL,CAA4BmV,IAA5B;IACA,KAAKuI,oBAAL;EACH;;EACD7b,iCAAiC,GAAG;IAChC,KAAK1B,uBAAL,CAA6BgV,IAA7B,CAAkC,KAAKsI,4BAAvC;IACA,KAAKC,oBAAL;EACH;;AApE4B;;AAsEjCnD,0BAA0B,CAAC7B,IAA3B,GAAkC,SAAS6F,kCAAT,CAA4C3F,CAA5C,EAA+C;EAAE,OAAO,KAAKA,CAAC,IAAI2B,0BAAV,GAAP;AAAiD,CAApI;;AACAA,0BAA0B,CAACzB,IAA3B,GAAkC,aAAczd,MAAM,CAAC0d,iBAAP,CAAyB;EAAE5P,IAAI,EAAEoR,0BAAR;EAAoCvB,SAAS,EAAE,CAAC,CAAC,sBAAD,CAAD,CAA/C;EAA2EW,MAAM,EAAE;IAAEjZ,0BAA0B,EAAE,4BAA9B;IAA4D/B,WAAW,EAAE,aAAzE;IAAwF6B,YAAY,EAAE,cAAtG;IAAsHC,oBAAoB,EAAE,sBAA5I;IAAoKE,OAAO,EAAE,SAA7K;IAAwLzB,MAAM,EAAE,QAAhM;IAA0MD,YAAY,EAAE,cAAxN;IAAwOuf,aAAa,EAAE,eAAvP;IAAwQje,aAAa,EAAE,eAAvR;IAAwSK,mBAAmB,EAAE;EAA7T,CAAnF;EAAyagZ,OAAO,EAAE;IAAEhK,oBAAoB,EAAE,sBAAxB;IAAgD5P,sBAAsB,EAAE,wBAAxE;IAAkGG,uBAAuB,EAAE;EAA3H,CAAlb;EAA0kBse,QAAQ,EAAE,CAACpjB,MAAM,CAACqjB,oBAAR,CAAplB;EAAmnB7E,KAAK,EAAE,CAA1nB;EAA6nBC,IAAI,EAAE,CAAnoB;EAAsoBC,MAAM,EAAE,CAAC,CAAC,IAAD,EAAO,gBAAP,EAAyB,CAAzB,EAA4B,SAA5B,EAAuC,CAAvC,EAA0C,MAA1C,CAAD,EAAoD,CAAC,IAAD,EAAO,gBAAP,EAAyB,CAAzB,EAA4B,SAA5B,CAApD,EAA4F,CAAC,MAAD,EAAS,qBAAT,EAAgC,CAAhC,EAAmC,eAAnC,EAAoD,sBAApD,EAA4E,UAA5E,EAAwF,CAAxF,EAA2F,OAA3F,CAA5F,EAAiM,CAAC,OAAD,EAAU,wBAAV,EAAoC,CAApC,EAAuC,OAAvC,EAAgD,CAAhD,EAAmD,MAAnD,CAAjM,EAA6P,CAAC,IAAD,EAAO,uBAAP,EAAgC,OAAhC,EAAyC,oBAAzC,EAA+D,MAA/D,EAAuE,QAAvE,EAAiF,CAAjF,EAAoF,aAApF,EAAmG,SAAnG,EAA8G,eAA9G,EAA+H,CAA/H,EAAkI,MAAlI,CAA7P,EAAwY,CAAC,IAAD,EAAO,eAAP,EAAwB,CAAxB,EAA2B,SAA3B,EAAsC,CAAtC,EAAyC,MAAzC,CAAxY,EAA0b,CAAC,CAAD,EAAI,wBAAJ,EAA8B,CAA9B,EAAiC,OAAjC,CAA1b,EAAqe,CAAC,MAAD,EAAS,qBAAT,EAAgC,CAAhC,EAAmC,uBAAnC,CAAre,EAAkiB,CAAC,CAAD,EAAI,aAAJ,CAAliB,EAAsjB,CAAC,MAAD,EAAS,qBAAT,EAAgC,CAAhC,EAAmC,uBAAnC,EAA4D,CAA5D,EAA+D,OAA/D,CAAtjB,EAA+nB,CAAC,CAAD,EAAI,YAAJ,CAA/nB,EAAkpB,CAAC,IAAD,EAAO,uBAAP,EAAgC,MAAhC,EAAwC,QAAxC,EAAkD,CAAlD,EAAqD,oBAArD,EAA2E,CAA3E,EAA8E,aAA9E,EAA6F,SAA7F,EAAwG,eAAxG,CAAlpB,EAA4wB,CAAC,IAAD,EAAO,eAAP,EAAwB,CAAxB,EAA2B,SAA3B,CAA5wB,EAAmzB,CAAC,CAAD,EAAI,OAAJ,EAAa,SAAb,CAAnzB,EAA40B,CAAC,MAAD,EAAS,UAAT,EAAqB,OAArB,EAA8B,wBAA9B,EAAwD,CAAxD,EAA2D,SAA3D,EAAsE,QAAtE,EAAgF,CAAhF,EAAmF,MAAnF,CAA50B,EAAw6B,CAAC,CAAD,EAAI,SAAJ,EAAe,OAAf,CAAx6B,EAAi8B,CAAC,OAAD,EAAU,cAAV,EAA0B,CAA1B,EAA6B,MAA7B,CAAj8B,EAAu+B,CAAC,KAAD,EAAQ,EAAR,EAAY,OAAZ,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,IAAzC,EAA+C,OAA/C,EAAwD,IAAxD,EAA8D,CAA9D,EAAiE,KAAjE,EAAwE,CAAxE,EAA2E,MAA3E,CAAv+B,EAA2jC,CAAC,CAAD,EAAI,OAAJ,CAA3jC,EAAykC,CAAC,CAAD,EAAI,SAAJ,EAAe,OAAf,CAAzkC,EAAkmC,CAAC,OAAD,EAAU,8EAAV,EAA0F,CAA1F,EAA6F,MAA7F,CAAlmC,EAAwsC,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,EAAwB,wBAAxB,EAAkD,CAAlD,EAAqD,SAArD,EAAgE,QAAhE,CAAxsC,EAAmxC,CAAC,CAAD,EAAI,cAAJ,CAAnxC,EAAwyC,CAAC,CAAD,EAAI,WAAJ,CAAxyC,EAA0zC,CAAC,KAAD,EAAQ,EAAR,EAAY,QAAZ,EAAsB,IAAtB,EAA4B,OAA5B,EAAqC,IAArC,EAA2C,CAA3C,EAA8C,QAA9C,EAAwD,CAAxD,EAA2D,KAA3D,CAA1zC,EAA63C,CAAC,CAAD,EAAI,+BAAJ,EAAqC,mCAArC,EAA0E,cAA1E,CAA73C,CAA9oB;EAAumEC,QAAQ,EAAE,SAAS2E,mCAAT,CAA6C/iB,EAA7C,EAAiDC,GAAjD,EAAsD;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MACtvEP,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqB2E,yCAArB,EAAgE,CAAhE,EAAmE,CAAnE,EAAsE,KAAtE,EAA6E,CAA7E;IACH;;IAAC,IAAInJ,EAAE,GAAG,CAAT,EAAY;MACVP,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BL,GAAG,CAAC2iB,aAA9B;IACH;EAAE,CAJkE;EAIhEtE,YAAY,EAAE,CAAC3e,MAAM,CAAC4e,OAAR,EAAiB5e,MAAM,CAAC6e,OAAxB,EAAiC7e,MAAM,CAAC8e,IAAxC,EAA8C5e,MAAM,CAACmjB,oBAArD,EAA2EnjB,MAAM,CAACojB,eAAlF,EAAmGpjB,MAAM,CAACqjB,OAA1G,EAAmHrE,YAAnH,CAJkD;EAIgFC,MAAM,EAAE,CAAC,u+DAAD,CAJxF;EAImkEC,aAAa,EAAE;AAJllE,CAAzB,CAAhD;;AAKAJ,0BAA0B,CAACK,cAA3B,GAA4C,MAAM,EAAlD;;AACAL,0BAA0B,CAACM,cAA3B,GAA4C;EACxCra,YAAY,EAAE,CAAC;IAAE2I,IAAI,EAAE3O;EAAR,CAAD,CAD0B;EAExCiG,oBAAoB,EAAE,CAAC;IAAE0I,IAAI,EAAE3O;EAAR,CAAD,CAFkB;EAGxCkG,0BAA0B,EAAE,CAAC;IAAEyI,IAAI,EAAE3O;EAAR,CAAD,CAHY;EAIxCmG,OAAO,EAAE,CAAC;IAAEwI,IAAI,EAAE3O;EAAR,CAAD,CAJ+B;EAKxC0E,MAAM,EAAE,CAAC;IAAEiK,IAAI,EAAE3O;EAAR,CAAD,CALgC;EAMxCyE,YAAY,EAAE,CAAC;IAAEkK,IAAI,EAAE3O;EAAR,CAAD,CAN0B;EAOxCgkB,aAAa,EAAE,CAAC;IAAErV,IAAI,EAAE3O;EAAR,CAAD,CAPyB;EAQxCmE,WAAW,EAAE,CAAC;IAAEwK,IAAI,EAAE3O;EAAR,CAAD,CAR2B;EASxC+F,aAAa,EAAE,CAAC;IAAE4I,IAAI,EAAE3O;EAAR,CAAD,CATyB;EAUxCoG,mBAAmB,EAAE,CAAC;IAAEuI,IAAI,EAAE3O;EAAR,CAAD,CAVmB;EAWxCoV,oBAAoB,EAAE,CAAC;IAAEzG,IAAI,EAAE1O;EAAR,CAAD,CAXkB;EAYxCuF,sBAAsB,EAAE,CAAC;IAAEmJ,IAAI,EAAE1O;EAAR,CAAD,CAZgB;EAaxC0F,uBAAuB,EAAE,CAAC;IAAEgJ,IAAI,EAAE1O;EAAR,CAAD;AAbe,CAA5C;;AAeA,CAAC,YAAY;EAAE,CAAC,OAAOsgB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD1f,MAAM,CAAC2f,iBAAP,CAAyBT,0BAAzB,EAAqD,CAAC;IAChHpR,IAAI,EAAE7O,SAD0G;IAEhHwgB,IAAI,EAAE,CAAC;MAAEG,QAAQ,EAAE,sBAAZ;MAAoCjB,QAAQ,EAAE,ohFAA9C;MAAokFW,aAAa,EAAEpgB,iBAAiB,CAAC2gB,IAArmF;MAA2mFR,MAAM,EAAE,CAAC,u+DAAD;IAAnnF,CAAD;EAF0G,CAAD,CAArD,EAG1D,YAAY;IAAE,OAAO,EAAP;EAAY,CAHgC,EAG9B;IAAEha,0BAA0B,EAAE,CAAC;MACvDyI,IAAI,EAAE3O;IADiD,CAAD,CAA9B;IAExBoV,oBAAoB,EAAE,CAAC;MACvBzG,IAAI,EAAE1O;IADiB,CAAD,CAFE;IAIxBuF,sBAAsB,EAAE,CAAC;MACzBmJ,IAAI,EAAE1O;IADmB,CAAD,CAJA;IAMxB0F,uBAAuB,EAAE,CAAC;MAC1BgJ,IAAI,EAAE1O;IADoB,CAAD,CAND;IAQxBkE,WAAW,EAAE,CAAC;MACdwK,IAAI,EAAE3O;IADQ,CAAD,CARW;IAUxBgG,YAAY,EAAE,CAAC;MACf2I,IAAI,EAAE3O;IADS,CAAD,CAVU;IAYxBiG,oBAAoB,EAAE,CAAC;MACvB0I,IAAI,EAAE3O;IADiB,CAAD,CAZE;IAcxBmG,OAAO,EAAE,CAAC;MACVwI,IAAI,EAAE3O;IADI,CAAD,CAde;IAgBxB0E,MAAM,EAAE,CAAC;MACTiK,IAAI,EAAE3O;IADG,CAAD,CAhBgB;IAkBxByE,YAAY,EAAE,CAAC;MACfkK,IAAI,EAAE3O;IADS,CAAD,CAlBU;IAoBxBgkB,aAAa,EAAE,CAAC;MAChBrV,IAAI,EAAE3O;IADU,CAAD,CApBS;IAsBxB+F,aAAa,EAAE,CAAC;MAChB4I,IAAI,EAAE3O;IADU,CAAD,CAtBS;IAwBxBoG,mBAAmB,EAAE,CAAC;MACtBuI,IAAI,EAAE3O;IADgB,CAAD;EAxBG,CAH8B,CAAnD;AA6BC,CA7BhB;;AA+BA,MAAMggB,qBAAN,CAA4B;EACxBxO,WAAW,GAAG;IACV,KAAK5M,aAAL,GAAqB,IAArB;IACA,KAAKC,aAAL,GAAqB,IAArB;IACA,KAAKC,eAAL,GAAuB,IAAvB;IACA,KAAKC,qBAAL,GAA6B,OAA7B;IACA,KAAKC,eAAL,GAAuB,IAAvB;IACA,KAAKuf,kBAAL,GAA0B,IAAI1kB,YAAJ,EAA1B;IACA,KAAK0V,cAAL,GAAsB,IAAI1V,YAAJ,EAAtB;IACA,KAAK2kB,aAAL,GAAqB,IAAI3kB,YAAJ,EAArB;IACA,KAAK4kB,cAAL,GAAsB,IAAI5kB,YAAJ,EAAtB;IACA,KAAK6kB,iBAAL,GAAyB,IAAI7kB,YAAJ,EAAzB;IACA,KAAK8kB,sBAAL,GAA8B,IAAI9kB,YAAJ,EAA9B,CAXU,CAYV;;IACA,KAAK+kB,kBAAL,GAA0B,EAA1B,CAbU,CAaoB;IAC9B;;IACA,KAAKhY,mBAAL,GAA2BA,mBAA3B;IACA,KAAKhD,qBAAL,GAA6BA,qBAA7B;IACA,KAAKgF,WAAL,GAAmBA,WAAnB;IACA,KAAKnF,+BAAL,GAAuCA,+BAAvC;EACH;;EACDyH,oBAAoB,CAAC2T,aAAD,EAAgB;IAChC,IAAI,KAAKC,WAAL,IAAoBD,aAAa,CAACjZ,WAAd,CAA0Be,eAA1B,IAA6CC,mBAAmB,CAACkF,IAAzF,EAA+F;MAC3F,OAAO,CAAC;QACAmI,QAAQ,EAAE,KADV;QAEAhH,UAAU,EAAE4R,aAFZ;QAGAvb,eAAe,EAAGsC,WAAD,IAAiB;UAC9B,OAAOA,WAAW,CAACe,eAAZ,IAA+BC,mBAAmB,CAACkF,IAA1D;QACH,CALD;QAMAhL,YAAY,EAAE,YANd,CAM2B;;MAN3B,CAAD,CAAP;IAQH;;IACD,OAAO,EAAP;EACH,CAjCuB,CAkCxB;;;EACA4H,eAAe,CAACxD,MAAD,EAASoC,OAAT,EAAkBtJ,KAAlB,EAAyB;IACpC,IAAIsJ,OAAO,CAACD,MAAR,IAAkB,KAAK3I,MAA3B,EAAmC;MAC/B,IAAIV,KAAK,IAAI,CAAb,EAAgB;QACZ,OAAO,IAAP,CADY,CACC;MAChB,CAFD,MAGK;QACD;QACA,IAAIkH,MAAM,CAACmG,QAAP,CAAgBrN,KAAK,GAAG,CAAxB,EAA2BqJ,MAA3B,IAAqCC,OAAO,CAACD,MAAjD,EAAyD;UACrD,OAAO,IAAP;QACH;MACJ;IACJ;;IACD,OAAO,KAAP;EACH;;EACDf,mBAAmB,CAACV,WAAD,EAAc0B,OAAd,EAAuB;IACtC,IAAI1B,WAAW,CAACe,eAAZ,IAA+BC,mBAAmB,CAACkF,IAAvD,EAA6D;MACzD,OAAOlG,WAAW,CAACtD,MAAnB;IACH,CAFD,MAGK,IAAIsD,WAAW,CAACe,eAAZ,IAA+BC,mBAAmB,CAACC,KAAvD,EAA8D;MAC/D,IAAIqV,KAAK,GAAGtW,WAAZ;MACA,IAAIuW,SAAS,GAAGD,KAAK,CAACjP,UAAN,CAAiBmP,SAAjB,CAA2B1H,CAAC,IAAIA,CAAC,CAAC1H,EAAF,IAAQ1F,OAAO,CAACD,MAAhD,CAAhB;MACA,OAAO6U,KAAK,CAACjP,UAAN,CAAiBkP,SAAS,IAAI,CAAb,GAAiBA,SAAjB,GAA6B,CAA9C,EAAiD7Z,MAAxD;IACH;;IACD,OAAO,IAAP;EACH;;EACDqH,eAAe,CAACzE,MAAD,EAAS;IACpB,MAAM6Z,oBAAoB,GAAG,KAAKnV,6BAAL,CAAmC1E,MAAnC,CAA7B;IACA,OAAO,KAAK0Z,kBAAL,CAAwBzJ,OAAxB,CAAgC4J,oBAAhC,IAAwD,CAAC,CAAhE;EACH,CA/DuB,CAgExB;;;EACAnV,6BAA6B,CAAC1E,MAAD,EAAS;IAClC,IAAIA,MAAM,IAAIA,MAAM,CAACU,WAArB,EAAkC;MAC9B,OAAQ,uBAAsBV,MAAM,CAACU,WAAP,CAAmBoH,EAAG,EAApD;IACH;;IACD,OAAO,qBAAP;EACH;;EACD/H,mBAAmB,CAACC,MAAD,EAAS;IACxB,OAAOyX,cAAc,CAAC1X,mBAAf,CAAmCC,MAAnC,EAA2C,KAAKxG,MAAhD,CAAP;EACH,CAzEuB,CA0ExB;;;EACA4U,gBAAgB,CAACpO,MAAD,EAAS6N,SAAT,EAAoB;IAChC,IAAI,CAAC7N,MAAM,CAAC/G,WAAZ,EAAyB;MACrB+U,UAAU,CAAC,MAAM;QACb,IAAI,KAAK8L,YAAT,EAAuB;UACnB,IAAIC,OAAO,GAAG,KAAKD,YAAL,CAAkBxJ,aAAhC;UACA,IAAI0J,QAAQ,GAAInM,SAAS,KAAKxF,eAAe,CAAC0F,GAA/B,GAAsC,CAAtC,GAA0CgM,OAAO,CAACE,YAAjE;UACAF,OAAO,CAACG,SAAR,GAAoBF,QAApB;QACH;MACJ,CANS,CAAV;IAOH;EACJ;;EACD5U,yBAAyB,CAACuN,MAAD,EAAS;IAC9B,KAAK6G,iBAAL,CAAuB/J,IAAvB,CAA4BkD,MAA5B;EACH,CAxFuB,CAyFxB;;;EACAzO,uBAAuB,CAAClE,MAAD,EAAS;IAC5B,IAAIA,MAAJ,EAAY;MACR,IAAI,KAAKma,eAAT,EACI,KAAKA,eAAL,CAAqB7J,aAArB,CAAmC8J,KAAnC;IACP;EACJ,CA/FuB,CAgGxB;;;EACAvU,iBAAiB,CAAC7F,MAAD,EAAS;IACtBA,MAAM,CAACiH,QAAP,GAAkB,CAACjH,MAAM,CAACiH,QAA1B;;IACA,IAAIjH,MAAM,CAACiH,QAAX,EAAqB;MACjB,MAAMoT,cAAc,GAAGra,MAAM,CAACmG,QAAP,CAClBmI,MADkB,CACXlM,OAAO,IAAIA,OAAO,CAACoM,QAAR,IAAoB,IAApB,KACfpM,OAAO,CAACkY,IAAR,IAAgB,KAAK9gB,MAArB,IAA+BwG,MAAM,CAACU,WAAP,CAAmBe,eAAnB,KAAuCC,mBAAmB,CAACC,KAD3E,CADA,CAAvB;;MAGA,IAAI0Y,cAAc,IAAIA,cAAc,CAACtb,MAAf,GAAwB,CAA9C,EAAiD;QAC7C,KAAKsL,cAAL,CAAoBoF,IAApB,CAAyB4K,cAAzB;MACH;IACJ;EACJ;;EACDpX,kBAAkB,CAACkD,QAAD,EAAW;IACzB,KAAKkE,cAAL,CAAoBoF,IAApB,CAAyBtJ,QAAzB;EACH;;EACD1N,mBAAmB,CAACuH,MAAD,EAAS;IACxB,KAAKyZ,sBAAL,CAA4BhK,IAA5B,CAAiCzP,MAAjC;EACH,CAjHuB,CAkHxB;;;EACAQ,iBAAiB,GAAG;IAChB,KAAK6Y,kBAAL,CAAwB5J,IAAxB,CAA6B;MAAEyC,YAAY,EAAE,KAAKlS,MAArB;MAA6BmS,kBAAkB,EAAE;IAAjD,CAA7B;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIzM,gBAAgB,CAAC6F,KAAD,EAAQvL,MAAR,EAAgB;IAC5B,QAAQuL,KAAK,CAACgP,OAAd;MACI,KAAK,EAAL;QACI,IAAIva,MAAM,CAACuF,UAAP,IAAqBvF,MAAM,CAACuF,UAAP,CAAkBiV,IAAlB,MAA4B,EAArD,EAAyD;UACrD,IAAIpY,OAAO,GAAG,IAAIuE,OAAJ,EAAd;UACAvE,OAAO,CAACD,MAAR,GAAiB,KAAK3I,MAAtB;UACA4I,OAAO,CAACkY,IAAR,GAAeta,MAAM,CAACU,WAAP,CAAmBoH,EAAlC;UACA1F,OAAO,CAACA,OAAR,GAAkBpC,MAAM,CAACuF,UAAzB;UACAnD,OAAO,CAACN,QAAR,GAAmB,IAAI2O,IAAJ,EAAnB;UACAzQ,MAAM,CAACmG,QAAP,CAAgBwI,IAAhB,CAAqBvM,OAArB;UACA,KAAKkX,aAAL,CAAmB7J,IAAnB,CAAwBrN,OAAxB;UACApC,MAAM,CAACuF,UAAP,GAAoB,EAApB,CARqD,CAQ7B;;UACxB,KAAK6I,gBAAL,CAAsBpO,MAAtB,EAA8BqI,eAAe,CAACyF,MAA9C;QACH;;QACD;;MACJ,KAAK,CAAL;QACIvC,KAAK,CAACkP,cAAN;QACA,KAAKlB,cAAL,CAAoB9J,IAApB,CAAyB;UAAE4C,gBAAgB,EAAErS,MAApB;UAA4BsS,eAAe,EAAE/G,KAAK,CAACmP;QAAnD,CAAzB;QACA;;MACJ,KAAK,EAAL;QACI,KAAKrB,kBAAL,CAAwB5J,IAAxB,CAA6B;UAAEyC,YAAY,EAAElS,MAAhB;UAAwBmS,kBAAkB,EAAE;QAA5C,CAA7B;QACA;IApBR;EAsBH,CAlJuB,CAmJxB;;;EACA9R,mBAAmB,CAACL,MAAD,EAAS;IACxBA,MAAM,CAAC/G,WAAP,GAAqB,CAAC+G,MAAM,CAAC/G,WAA7B;IACA,KAAKmV,gBAAL,CAAsBpO,MAAtB,EAA8BqI,eAAe,CAACyF,MAA9C;EACH;;EACD6M,sBAAsB,CAACd,oBAAD,EAAuB;IACzC,MAAMe,uBAAuB,GAAG,KAAKlB,kBAAL,CAAwBzJ,OAAxB,CAAgC4J,oBAAhC,CAAhC;;IACA,IAAIe,uBAAuB,GAAG,CAAC,CAA/B,EAAkC;MAC9B,KAAKlB,kBAAL,CAAwB5N,MAAxB,CAA+B8O,uBAA/B,EAAwD,CAAxD;IACH;EACJ,CA7JuB,CA8JxB;;;EACApW,YAAY,CAACxE,MAAD,EAAS;IACjB,MAAM6Z,oBAAoB,GAAG,KAAKnV,6BAAL,CAAmC1E,MAAnC,CAA7B;IACA,MAAM6a,gBAAgB,GAAG,KAAKV,eAA9B;;IACA,IAAIU,gBAAJ,EAAsB;MAClB,MAAMnS,IAAI,GAAGmS,gBAAgB,CAACvK,aAAjB,CAA+BwK,KAA/B,CAAqC,CAArC,CAAb;MACA,KAAKpB,kBAAL,CAAwB/K,IAAxB,CAA6BkL,oBAA7B;MACA,KAAKvgB,iBAAL,CAAuBmP,UAAvB,CAAkCC,IAAlC,EAAwC1I,MAAM,CAACU,WAAP,CAAmBoH,EAA3D,EACKwF,SADL,CACeyN,WAAW,IAAI;QAC1B,KAAKJ,sBAAL,CAA4Bd,oBAA5B;QACAkB,WAAW,CAAC5Y,MAAZ,GAAqB,KAAK3I,MAA1B,CAF0B,CAG1B;;QACAwG,MAAM,CAACmG,QAAP,CAAgBwI,IAAhB,CAAqBoM,WAArB;QACA,KAAKzB,aAAL,CAAmB7J,IAAnB,CAAwBsL,WAAxB;QACA,KAAK3M,gBAAL,CAAsBpO,MAAtB,EAA8BqI,eAAe,CAACyF,MAA9C,EAN0B,CAO1B;;QACA+M,gBAAgB,CAACvK,aAAjB,CAA+BvF,KAA/B,GAAuC,EAAvC;MACH,CAVD,EAUI2B,KAAD,IAAW;QACV,KAAKiO,sBAAL,CAA4Bd,oBAA5B,EADU,CAEV;;QACAgB,gBAAgB,CAACvK,aAAjB,CAA+BvF,KAA/B,GAAuC,EAAvC,CAHU,CAIV;MACH,CAfD;IAgBH;EACJ;;AAtLuB;;AAwL5B+J,qBAAqB,CAAC9B,IAAtB,GAA6B,SAASgI,6BAAT,CAAuC9H,CAAvC,EAA0C;EAAE,OAAO,KAAKA,CAAC,IAAI4B,qBAAV,GAAP;AAA4C,CAArH;;AACAA,qBAAqB,CAAC1B,IAAtB,GAA6B,aAAczd,MAAM,CAAC0d,iBAAP,CAAyB;EAAE5P,IAAI,EAAEqR,qBAAR;EAA+BxB,SAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,CAA1C;EAAgEC,SAAS,EAAE,SAAS0H,2BAAT,CAAqC/kB,EAArC,EAAyCC,GAAzC,EAA8C;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MACnMP,MAAM,CAAC8d,WAAP,CAAmB9T,GAAnB,EAAwB,CAAxB;MACAhK,MAAM,CAAC8d,WAAP,CAAmB7T,GAAnB,EAAwB,CAAxB;MACAjK,MAAM,CAAC8d,WAAP,CAAmB5T,GAAnB,EAAwB,CAAxB;IACH;;IAAC,IAAI3J,EAAE,GAAG,CAAT,EAAY;MACV,IAAIwd,EAAJ;;MACA/d,MAAM,CAACge,cAAP,CAAsBD,EAAE,GAAG/d,MAAM,CAACie,WAAP,EAA3B,MAAqDzd,GAAG,CAAC2jB,YAAJ,GAAmBpG,EAAE,CAACxL,KAA3E;MACAvS,MAAM,CAACge,cAAP,CAAsBD,EAAE,GAAG/d,MAAM,CAACie,WAAP,EAA3B,MAAqDzd,GAAG,CAACgkB,eAAJ,GAAsBzG,EAAE,CAACxL,KAA9E;MACAvS,MAAM,CAACge,cAAP,CAAsBD,EAAE,GAAG/d,MAAM,CAACie,WAAP,EAA3B,MAAqDzd,GAAG,CAACka,eAAJ,GAAsBqD,EAAE,CAACxL,KAA9E;IACH;EAAE,CAT6D;EAS3D+L,MAAM,EAAE;IAAEva,aAAa,EAAE,eAAjB;IAAkCC,aAAa,EAAE,eAAjD;IAAkEC,eAAe,EAAE,iBAAnF;IAAsGC,qBAAqB,EAAE,uBAA7H;IAAsJC,eAAe,EAAE,iBAAvK;IAA0LR,iBAAiB,EAAE,mBAA7M;IAAkO0G,MAAM,EAAE,QAA1O;IAAoPxG,MAAM,EAAE,QAA5P;IAAsQD,YAAY,EAAE,cAApR;IAAoSqgB,WAAW,EAAE;EAAjT,CATmD;EAS+Q1F,OAAO,EAAE;IAAEmF,kBAAkB,EAAE,oBAAtB;IAA4ChP,cAAc,EAAE,gBAA5D;IAA8EiP,aAAa,EAAE,eAA7F;IAA8GC,cAAc,EAAE,gBAA9H;IAAgJC,iBAAiB,EAAE,mBAAnK;IAAwLC,sBAAsB,EAAE;EAAhN,CATxR;EASogBtF,KAAK,EAAE,CAT3gB;EAS8gBC,IAAI,EAAE,CATphB;EASuhBC,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,MAAJ,CAAD,EAAc,CAAC,CAAD,EAAI,eAAJ,EAAqB,sBAArB,CAAd,EAA4D,CAAC,CAAD,EAAI,sCAAJ,EAA4C,CAA5C,EAA+C,OAA/C,CAA5D,EAAqH,CAAC,CAAD,EAAI,OAAJ,CAArH,EAAmI,CAAC,CAAD,EAAI,SAAJ,EAAe,OAAf,CAAnI,EAA4J,CAAC,OAAD,EAAU,8EAAV,EAA0F,CAA1F,EAA6F,MAA7F,CAA5J,EAAkQ,CAAC,MAAD,EAAS,qBAAT,EAAgC,CAAhC,EAAmC,eAAnC,EAAoD,cAApD,EAAoE,CAApE,EAAuE,OAAvE,CAAlQ,EAAmV,CAAC,CAAD,EAAI,+BAAJ,EAAqC,mCAArC,EAA0E,cAA1E,CAAnV,EAA8a,CAAC,CAAD,EAAI,SAAJ,EAAe,SAAf,EAA0B,2BAA1B,CAA9a,EAAse,CAAC,CAAD,EAAI,kBAAJ,EAAwB,oBAAxB,CAAte,EAAqhB,CAAC,cAAD,EAAiB,EAAjB,CAArhB,EAA2iB,CAAC,OAAD,EAAU,yBAAV,EAAqC,CAArC,EAAwC,MAAxC,CAA3iB,EAA4lB,CAAC,OAAD,EAAU,sBAAV,EAAkC,CAAlC,EAAqC,MAArC,CAA5lB,EAA0oB,CAAC,CAAD,EAAI,SAAJ,EAAe,CAAf,EAAkB,OAAlB,EAA2B,SAA3B,CAA1oB,EAAirB,CAAC,CAAD,EAAI,gBAAJ,EAAsB,uBAAtB,EAA+C,oBAA/C,CAAjrB,EAAuvB,CAAC,MAAD,EAAS,MAAT,EAAiB,CAAjB,EAAoB,SAApB,EAA+B,aAA/B,EAA8C,SAA9C,EAAyD,eAAzD,EAA0E,SAA1E,EAAqF,MAArF,EAA6F,OAA7F,CAAvvB,EAA81B,CAAC,iBAAD,EAAoB,EAApB,CAA91B,EAAu3B,CAAC,CAAD,EAAI,yBAAJ,CAAv3B,EAAu5B,CAAC,CAAD,EAAI,QAAJ,CAAv5B,EAAs6B,CAAC,CAAD,EAAI,sBAAJ,CAAt6B,EAAm8B,CAAC,CAAD,EAAI,qBAAJ,EAA2B,CAA3B,EAA8B,OAA9B,CAAn8B,EAA2+B,CAAC,CAAD,EAAI,SAAJ,CAA3+B,EAA2/B,CAAC,CAAD,EAAI,UAAJ,CAA3/B,EAA4gC,CAAC,CAAD,EAAI,SAAJ,EAAe,CAAf,EAAkB,cAAlB,CAA5gC,EAA+iC,CAAC,OAAD,EAAU,cAAV,EAA0B,CAA1B,EAA6B,MAA7B,CAA/iC,EAAqlC,CAAC,KAAD,EAAQ,EAAR,EAAY,OAAZ,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,IAAzC,EAA+C,OAA/C,EAAwD,IAAxD,EAA8D,CAA9D,EAAiE,KAAjE,EAAwE,CAAxE,EAA2E,MAA3E,CAArlC,EAAyqC,CAAC,OAAD,EAAU,0BAAV,EAAsC,CAAtC,EAAyC,MAAzC,CAAzqC,EAA2tC,CAAC,CAAD,EAAI,cAAJ,CAA3tC,EAAgvC,CAAC,CAAD,EAAI,WAAJ,CAAhvC,EAAkwC,CAAC,KAAD,EAAQ,EAAR,EAAY,QAAZ,EAAsB,IAAtB,EAA4B,OAA5B,EAAqC,IAArC,EAA2C,CAA3C,EAA8C,QAA9C,EAAwD,CAAxD,EAA2D,KAA3D,CAAlwC,EAAq0C,CAAC,CAAD,EAAI,0BAAJ,CAAr0C,EAAs2C,CAAC,CAAD,EAAI,WAAJ,CAAt2C,EAAw3C,CAAC,OAAD,EAAU,mBAAV,EAA+B,CAA/B,EAAkC,MAAlC,CAAx3C,EAAm6C,CAAC,CAAD,EAAI,mBAAJ,CAAn6C,EAA67C,CAAC,CAAD,EAAI,eAAJ,EAAqB,CAArB,EAAwB,KAAxB,CAA77C,EAA69C,CAAC,CAAD,EAAI,6BAAJ,CAA79C,EAAigD,CAAC,CAAD,EAAI,gBAAJ,CAAjgD,EAAwhD,CAAC,QAAD,EAAW,QAAX,EAAqB,KAArB,EAA4B,qBAA5B,EAAmD,UAAnD,EAA+D,EAA/D,EAAmE,CAAnE,EAAsE,cAAtE,EAAsF,CAAtF,EAAyF,OAAzF,CAAxhD,EAA2nD,CAAC,CAAD,EAAI,oBAAJ,CAA3nD,EAAspD,CAAC,OAAD,EAAU,mBAAV,EAA+B,CAA/B,EAAkC,MAAlC,CAAtpD,EAAisD,CAAC,CAAD,EAAI,mBAAJ,CAAjsD,EAA2tD,CAAC,OAAD,EAAU,cAAV,EAA0B,CAA1B,EAA6B,OAA7B,EAAsC,CAAtC,EAAyC,MAAzC,CAA3tD,EAA6wD,CAAC,MAAD,EAAS,MAAT,EAAiB,CAAjB,EAAoB,SAApB,EAA+B,MAA/B,EAAuC,CAAvC,EAA0C,QAA1C,CAA7wD,EAAk0D,CAAC,iBAAD,EAAoB,EAApB,CAAl0D,EAA21D,CAAC,OAAD,EAAU,QAAV,EAAoB,CAApB,EAAuB,MAAvB,CAA31D,EAA23D,CAAC,CAAD,EAAI,cAAJ,EAAoB,CAApB,EAAuB,OAAvB,CAA33D,EAA45D,CAAC,CAAD,EAAI,aAAJ,CAA55D,CAT/hB;EASg9EC,QAAQ,EAAE,SAAS4G,8BAAT,CAAwChlB,EAAxC,EAA4CC,GAA5C,EAAiD;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MACrlFP,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBuF,6CAArB,EAAoE,CAApE,EAAuE,EAAvE,EAA2E,cAA3E,EAA2F,CAA3F;MACAtK,MAAM,CAAC+E,UAAP,CAAkB,CAAlB,EAAqBkK,6CAArB,EAAoE,EAApE,EAAwE,EAAxE,EAA4E,cAA5E,EAA4F,CAA5F;IACH;;IAAC,IAAI1O,EAAE,GAAG,CAAT,EAAY;MACVP,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BL,GAAG,CAAC6J,MAAJ,IAAc7J,GAAG,CAAC6J,MAAJ,CAAW/G,WAAnD;MACAtD,MAAM,CAAC0D,SAAP,CAAiB,CAAjB;MACA1D,MAAM,CAACa,UAAP,CAAkB,MAAlB,EAA0BL,GAAG,CAAC6J,MAAJ,IAAc,CAAC7J,GAAG,CAAC6J,MAAJ,CAAW/G,WAApD;IACH;EAAE,CAhB6D;EAgB3Dub,YAAY,EAAE,CAAC3e,MAAM,CAAC4e,OAAR,EAAiB5e,MAAM,CAAC6e,OAAxB,EAAiC7e,MAAM,CAAC8e,IAAxC,EAA8C9e,MAAM,CAACslB,QAArD,EAA+DtlB,MAAM,CAACulB,YAAtE,EAAoFrlB,MAAM,CAACmjB,oBAA3F,EAAiHnjB,MAAM,CAACojB,eAAxH,EAAyIpjB,MAAM,CAACqjB,OAAhJ,EAAyJhC,sBAAzJ,EAAiLvhB,MAAM,CAACwlB,QAAxL,EAAkMzF,WAAlM,EAA+MS,UAA/M,EAA2NtB,YAA3N,EAAyOgC,2BAAzO,CAhB6C;EAgB0N/B,MAAM,EAAE,CAAC,mzHAAD,CAhBlO;EAgByhIC,aAAa,EAAE;AAhBxiI,CAAzB,CAA3C;;AAiBAH,qBAAqB,CAACI,cAAtB,GAAuC,MAAM,EAA7C;;AACAJ,qBAAqB,CAACK,cAAtB,GAAuC;EACnC7b,iBAAiB,EAAE,CAAC;IAAEmK,IAAI,EAAE3O;EAAR,CAAD,CADgB;EAEnCkL,MAAM,EAAE,CAAC;IAAEyD,IAAI,EAAE3O;EAAR,CAAD,CAF2B;EAGnC0E,MAAM,EAAE,CAAC;IAAEiK,IAAI,EAAE3O;EAAR,CAAD,CAH2B;EAInCyE,YAAY,EAAE,CAAC;IAAEkK,IAAI,EAAE3O;EAAR,CAAD,CAJqB;EAKnC8kB,WAAW,EAAE,CAAC;IAAEnW,IAAI,EAAE3O;EAAR,CAAD,CALsB;EAMnC4E,aAAa,EAAE,CAAC;IAAE+J,IAAI,EAAE3O;EAAR,CAAD,CANoB;EAOnC6E,aAAa,EAAE,CAAC;IAAE8J,IAAI,EAAE3O;EAAR,CAAD,CAPoB;EAQnC8E,eAAe,EAAE,CAAC;IAAE6J,IAAI,EAAE3O;EAAR,CAAD,CARkB;EASnC+E,qBAAqB,EAAE,CAAC;IAAE4J,IAAI,EAAE3O;EAAR,CAAD,CATY;EAUnCgF,eAAe,EAAE,CAAC;IAAE2J,IAAI,EAAE3O;EAAR,CAAD,CAVkB;EAWnCukB,kBAAkB,EAAE,CAAC;IAAE5V,IAAI,EAAE1O;EAAR,CAAD,CAXe;EAYnCsV,cAAc,EAAE,CAAC;IAAE5G,IAAI,EAAE1O;EAAR,CAAD,CAZmB;EAanCukB,aAAa,EAAE,CAAC;IAAE7V,IAAI,EAAE1O;EAAR,CAAD,CAboB;EAcnCwkB,cAAc,EAAE,CAAC;IAAE9V,IAAI,EAAE1O;EAAR,CAAD,CAdmB;EAenCykB,iBAAiB,EAAE,CAAC;IAAE/V,IAAI,EAAE1O;EAAR,CAAD,CAfgB;EAgBnC0kB,sBAAsB,EAAE,CAAC;IAAEhW,IAAI,EAAE1O;EAAR,CAAD,CAhBW;EAiBnC+kB,YAAY,EAAE,CAAC;IAAErW,IAAI,EAAEtO,SAAR;IAAmBigB,IAAI,EAAE,CAAC,cAAD;EAAzB,CAAD,CAjBqB;EAkBnC+E,eAAe,EAAE,CAAC;IAAE1W,IAAI,EAAEtO,SAAR;IAAmBigB,IAAI,EAAE,CAAC,iBAAD;EAAzB,CAAD,CAlBkB;EAmBnC/E,eAAe,EAAE,CAAC;IAAE5M,IAAI,EAAEtO,SAAR;IAAmBigB,IAAI,EAAE,CAAC,iBAAD;EAAzB,CAAD;AAnBkB,CAAvC;;AAqBA,CAAC,YAAY;EAAE,CAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD1f,MAAM,CAAC2f,iBAAP,CAAyBR,qBAAzB,EAAgD,CAAC;IAC3GrR,IAAI,EAAE7O,SADqG;IAE3GwgB,IAAI,EAAE,CAAC;MAAEG,QAAQ,EAAE,gBAAZ;MAA8BjB,QAAQ,EAAE,q7MAAxC;MAA+9MW,aAAa,EAAEpgB,iBAAiB,CAAC2gB,IAAhgN;MAAsgNR,MAAM,EAAE,CAAC,mzHAAD;IAA9gN,CAAD;EAFqG,CAAD,CAAhD,EAG1D,YAAY;IAAE,OAAO,EAAP;EAAY,CAHgC,EAG9B;IAAEtb,aAAa,EAAE,CAAC;MAC1C+J,IAAI,EAAE3O;IADoC,CAAD,CAAjB;IAExB6E,aAAa,EAAE,CAAC;MAChB8J,IAAI,EAAE3O;IADU,CAAD,CAFS;IAIxB8E,eAAe,EAAE,CAAC;MAClB6J,IAAI,EAAE3O;IADY,CAAD,CAJO;IAMxB+E,qBAAqB,EAAE,CAAC;MACxB4J,IAAI,EAAE3O;IADkB,CAAD,CANC;IAQxBgF,eAAe,EAAE,CAAC;MAClB2J,IAAI,EAAE3O;IADY,CAAD,CARO;IAUxBukB,kBAAkB,EAAE,CAAC;MACrB5V,IAAI,EAAE1O;IADe,CAAD,CAVI;IAYxBsV,cAAc,EAAE,CAAC;MACjB5G,IAAI,EAAE1O;IADW,CAAD,CAZQ;IAcxBukB,aAAa,EAAE,CAAC;MAChB7V,IAAI,EAAE1O;IADU,CAAD,CAdS;IAgBxBwkB,cAAc,EAAE,CAAC;MACjB9V,IAAI,EAAE1O;IADW,CAAD,CAhBQ;IAkBxBykB,iBAAiB,EAAE,CAAC;MACpB/V,IAAI,EAAE1O;IADc,CAAD,CAlBK;IAoBxB0kB,sBAAsB,EAAE,CAAC;MACzBhW,IAAI,EAAE1O;IADmB,CAAD,CApBA;IAsBxBuE,iBAAiB,EAAE,CAAC;MACpBmK,IAAI,EAAE3O;IADc,CAAD,CAtBK;IAwBxBkL,MAAM,EAAE,CAAC;MACTyD,IAAI,EAAE3O;IADG,CAAD,CAxBgB;IA0BxB0E,MAAM,EAAE,CAAC;MACTiK,IAAI,EAAE3O;IADG,CAAD,CA1BgB;IA4BxByE,YAAY,EAAE,CAAC;MACfkK,IAAI,EAAE3O;IADS,CAAD,CA5BU;IA8BxB8kB,WAAW,EAAE,CAAC;MACdnW,IAAI,EAAE3O;IADQ,CAAD,CA9BW;IAgCxBglB,YAAY,EAAE,CAAC;MACfrW,IAAI,EAAEtO,SADS;MAEfigB,IAAI,EAAE,CAAC,cAAD;IAFS,CAAD,CAhCU;IAmCxB+E,eAAe,EAAE,CAAC;MAClB1W,IAAI,EAAEtO,SADY;MAElBigB,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD,CAnCO;IAsCxB/E,eAAe,EAAE,CAAC;MAClB5M,IAAI,EAAEtO,SADY;MAElBigB,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD;EAtCO,CAH8B,CAAnD;AA4CC,CA5ChB;;AA8CA,MAAMkG,YAAN,CAAmB;;AAEnBA,YAAY,CAACtI,IAAb,GAAoB,SAASuI,oBAAT,CAA8BrI,CAA9B,EAAiC;EAAE,OAAO,KAAKA,CAAC,IAAIoI,YAAV,GAAP;AAAmC,CAA1F;;AACAA,YAAY,CAACE,IAAb,GAAoB,aAAc7lB,MAAM,CAAC8lB,gBAAP,CAAwB;EAAEhY,IAAI,EAAE6X;AAAR,CAAxB,CAAlC;AACAA,YAAY,CAACI,IAAb,GAAoB,aAAc/lB,MAAM,CAACgmB,gBAAP,CAAwB;EAAEC,OAAO,EAAE,CAAClnB,YAAD,EAAeW,WAAf,EAA4BE,gBAA5B;AAAX,CAAxB,CAAlC;;AACA,CAAC,YAAY;EAAE,CAAC,OAAO8f,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD1f,MAAM,CAAC2f,iBAAP,CAAyBgG,YAAzB,EAAuC,CAAC;IAClG7X,IAAI,EAAErO,QAD4F;IAElGggB,IAAI,EAAE,CAAC;MACCwG,OAAO,EAAE,CAAClnB,YAAD,EAAeW,WAAf,EAA4BE,gBAA5B,CADV;MAECsmB,YAAY,EAAE,CACV5S,MADU,EAEV2M,WAFU,EAGVS,UAHU,EAIVtB,YAJU,EAKVgC,2BALU,EAMVK,sBANU,EAOVvC,0BAPU,EAQVC,qBARU,CAFf;MAYCgH,OAAO,EAAE,CAAC7S,MAAD;IAZV,CAAD;EAF4F,CAAD,CAAvC,EAgB1D,IAhB0D,EAgBpD,IAhBoD,CAAnD;AAgBO,CAhBtB;;AAiBA,CAAC,YAAY;EAAE,CAAC,OAAO8S,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDpmB,MAAM,CAACqmB,kBAAP,CAA0BV,YAA1B,EAAwC;IAAEO,YAAY,EAAE,YAAY;MAAE,OAAO,CAAC5S,MAAD,EAAS2M,WAAT,EAAsBS,UAAtB,EAAkCtB,YAAlC,EAAgDgC,2BAAhD,EAA6EK,sBAA7E,EAAqGvC,0BAArG,EAAiIC,qBAAjI,CAAP;IAAiK,CAA/L;IAAiM8G,OAAO,EAAE,YAAY;MAAE,OAAO,CAAClnB,YAAD,EAAeW,WAAf,EAA4BE,gBAA5B,CAAP;IAAuD,CAA/Q;IAAiRumB,OAAO,EAAE,YAAY;MAAE,OAAO,CAAC7S,MAAD,CAAP;IAAkB;EAA1T,CAAxC,CAAnD;AAA2Z,CAA1a;AAEA;AACA;AACA;;;AAEA,SAAS5C,WAAT,EAAsB3H,qBAAtB,EAA6CgD,mBAA7C,EAAkEC,KAAlE,EAAyEgF,OAAzE,EAAkFjD,WAAlF,EAA+F4X,YAA/F,EAA6GnU,uBAA7G,EAAsIL,mBAAtI,EAA2JD,mBAA3J,EAAgLO,KAAhL,EAAuLR,IAAvL,EAA6LI,MAA7L,EAAqMiC,MAAM,IAAIgT,EAA/M,EAAmNrG,WAAW,IAAIsG,EAAlO,EAAsO7F,UAAU,IAAI8F,EAApP,EAAwPpH,YAAY,IAAIqH,EAAxQ,EAA4QrF,2BAA2B,IAAIsF,EAA3S,EAA+SjF,sBAAsB,IAAIkF,EAAzU,EAA6UzH,0BAA0B,IAAI0H,EAA3W,EAA+WzH,qBAAqB,IAAI0H,EAAxY"},"metadata":{},"sourceType":"module"}