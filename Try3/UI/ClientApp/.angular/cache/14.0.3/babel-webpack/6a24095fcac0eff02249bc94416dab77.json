{"ast":null,"code":"// Integer Utility\nexport var UINT32_MAX = 4294967295; // DataView extension to handle int64 / uint64,\n// where the actual range is 53-bits integer (a.k.a. safe integer)\n\nexport function setUint64(view, offset, value) {\n  var high = value / 4294967296;\n  var low = value; // high bits are truncated by DataView\n\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\nexport function setInt64(view, offset, value) {\n  var high = Math.floor(value / 4294967296);\n  var low = value; // high bits are truncated by DataView\n\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\nexport function getInt64(view, offset) {\n  var high = view.getInt32(offset);\n  var low = view.getUint32(offset + 4);\n  return high * 4294967296 + low;\n}\nexport function getUint64(view, offset) {\n  var high = view.getUint32(offset);\n  var low = view.getUint32(offset + 4);\n  return high * 4294967296 + low;\n}","map":{"version":3,"names":["UINT32_MAX","setUint64","view","offset","value","high","low","setUint32","setInt64","Math","floor","getInt64","getInt32","getUint32","getUint64"],"sources":["D:/Source/Repos/Chat/Try3/UI/ClientApp/node_modules/@msgpack/msgpack/dist.es5+esm/utils/int.mjs"],"sourcesContent":["// Integer Utility\nexport var UINT32_MAX = 4294967295;\n// DataView extension to handle int64 / uint64,\n// where the actual range is 53-bits integer (a.k.a. safe integer)\nexport function setUint64(view, offset, value) {\n    var high = value / 4294967296;\n    var low = value; // high bits are truncated by DataView\n    view.setUint32(offset, high);\n    view.setUint32(offset + 4, low);\n}\nexport function setInt64(view, offset, value) {\n    var high = Math.floor(value / 4294967296);\n    var low = value; // high bits are truncated by DataView\n    view.setUint32(offset, high);\n    view.setUint32(offset + 4, low);\n}\nexport function getInt64(view, offset) {\n    var high = view.getInt32(offset);\n    var low = view.getUint32(offset + 4);\n    return high * 4294967296 + low;\n}\nexport function getUint64(view, offset) {\n    var high = view.getUint32(offset);\n    var low = view.getUint32(offset + 4);\n    return high * 4294967296 + low;\n}\n"],"mappings":"AAAA;AACA,OAAO,IAAIA,UAAU,GAAG,UAAjB,C,CACP;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,KAAjC,EAAwC;EAC3C,IAAIC,IAAI,GAAGD,KAAK,GAAG,UAAnB;EACA,IAAIE,GAAG,GAAGF,KAAV,CAF2C,CAE1B;;EACjBF,IAAI,CAACK,SAAL,CAAeJ,MAAf,EAAuBE,IAAvB;EACAH,IAAI,CAACK,SAAL,CAAeJ,MAAM,GAAG,CAAxB,EAA2BG,GAA3B;AACH;AACD,OAAO,SAASE,QAAT,CAAkBN,IAAlB,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuC;EAC1C,IAAIC,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWN,KAAK,GAAG,UAAnB,CAAX;EACA,IAAIE,GAAG,GAAGF,KAAV,CAF0C,CAEzB;;EACjBF,IAAI,CAACK,SAAL,CAAeJ,MAAf,EAAuBE,IAAvB;EACAH,IAAI,CAACK,SAAL,CAAeJ,MAAM,GAAG,CAAxB,EAA2BG,GAA3B;AACH;AACD,OAAO,SAASK,QAAT,CAAkBT,IAAlB,EAAwBC,MAAxB,EAAgC;EACnC,IAAIE,IAAI,GAAGH,IAAI,CAACU,QAAL,CAAcT,MAAd,CAAX;EACA,IAAIG,GAAG,GAAGJ,IAAI,CAACW,SAAL,CAAeV,MAAM,GAAG,CAAxB,CAAV;EACA,OAAOE,IAAI,GAAG,UAAP,GAAoBC,GAA3B;AACH;AACD,OAAO,SAASQ,SAAT,CAAmBZ,IAAnB,EAAyBC,MAAzB,EAAiC;EACpC,IAAIE,IAAI,GAAGH,IAAI,CAACW,SAAL,CAAeV,MAAf,CAAX;EACA,IAAIG,GAAG,GAAGJ,IAAI,CAACW,SAAL,CAAeV,MAAM,GAAG,CAAxB,CAAV;EACA,OAAOE,IAAI,GAAG,UAAP,GAAoBC,GAA3B;AACH"},"metadata":{},"sourceType":"module"}