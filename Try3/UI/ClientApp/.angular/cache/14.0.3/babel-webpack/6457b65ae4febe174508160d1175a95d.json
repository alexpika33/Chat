{"ast":null,"code":"// https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\nimport { DecodeError } from \"./DecodeError.mjs\";\nimport { getInt64, setInt64 } from \"./utils/int.mjs\";\nexport var EXT_TIMESTAMP = -1;\nvar TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int\n\nvar TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int\n\nexport function encodeTimeSpecToTimestamp(_a) {\n  var sec = _a.sec,\n      nsec = _a.nsec;\n\n  if (sec >= 0 && nsec >= 0 && sec <= TIMESTAMP64_MAX_SEC) {\n    // Here sec >= 0 && nsec >= 0\n    if (nsec === 0 && sec <= TIMESTAMP32_MAX_SEC) {\n      // timestamp 32 = { sec32 (unsigned) }\n      var rv = new Uint8Array(4);\n      var view = new DataView(rv.buffer);\n      view.setUint32(0, sec);\n      return rv;\n    } else {\n      // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }\n      var secHigh = sec / 0x100000000;\n      var secLow = sec & 0xffffffff;\n      var rv = new Uint8Array(8);\n      var view = new DataView(rv.buffer); // nsec30 | secHigh2\n\n      view.setUint32(0, nsec << 2 | secHigh & 0x3); // secLow32\n\n      view.setUint32(4, secLow);\n      return rv;\n    }\n  } else {\n    // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n    var rv = new Uint8Array(12);\n    var view = new DataView(rv.buffer);\n    view.setUint32(0, nsec);\n    setInt64(view, 4, sec);\n    return rv;\n  }\n}\nexport function encodeDateToTimeSpec(date) {\n  var msec = date.getTime();\n  var sec = Math.floor(msec / 1e3);\n  var nsec = (msec - sec * 1e3) * 1e6; // Normalizes { sec, nsec } to ensure nsec is unsigned.\n\n  var nsecInSec = Math.floor(nsec / 1e9);\n  return {\n    sec: sec + nsecInSec,\n    nsec: nsec - nsecInSec * 1e9\n  };\n}\nexport function encodeTimestampExtension(object) {\n  if (object instanceof Date) {\n    var timeSpec = encodeDateToTimeSpec(object);\n    return encodeTimeSpecToTimestamp(timeSpec);\n  } else {\n    return null;\n  }\n}\nexport function decodeTimestampToTimeSpec(data) {\n  var view = new DataView(data.buffer, data.byteOffset, data.byteLength); // data may be 32, 64, or 96 bits\n\n  switch (data.byteLength) {\n    case 4:\n      {\n        // timestamp 32 = { sec32 }\n        var sec = view.getUint32(0);\n        var nsec = 0;\n        return {\n          sec: sec,\n          nsec: nsec\n        };\n      }\n\n    case 8:\n      {\n        // timestamp 64 = { nsec30, sec34 }\n        var nsec30AndSecHigh2 = view.getUint32(0);\n        var secLow32 = view.getUint32(4);\n        var sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;\n        var nsec = nsec30AndSecHigh2 >>> 2;\n        return {\n          sec: sec,\n          nsec: nsec\n        };\n      }\n\n    case 12:\n      {\n        // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n        var sec = getInt64(view, 4);\n        var nsec = view.getUint32(0);\n        return {\n          sec: sec,\n          nsec: nsec\n        };\n      }\n\n    default:\n      throw new DecodeError(\"Unrecognized data size for timestamp (expected 4, 8, or 12): \".concat(data.length));\n  }\n}\nexport function decodeTimestampExtension(data) {\n  var timeSpec = decodeTimestampToTimeSpec(data);\n  return new Date(timeSpec.sec * 1e3 + timeSpec.nsec / 1e6);\n}\nexport var timestampExtension = {\n  type: EXT_TIMESTAMP,\n  encode: encodeTimestampExtension,\n  decode: decodeTimestampExtension\n};","map":{"version":3,"names":["DecodeError","getInt64","setInt64","EXT_TIMESTAMP","TIMESTAMP32_MAX_SEC","TIMESTAMP64_MAX_SEC","encodeTimeSpecToTimestamp","_a","sec","nsec","rv","Uint8Array","view","DataView","buffer","setUint32","secHigh","secLow","encodeDateToTimeSpec","date","msec","getTime","Math","floor","nsecInSec","encodeTimestampExtension","object","Date","timeSpec","decodeTimestampToTimeSpec","data","byteOffset","byteLength","getUint32","nsec30AndSecHigh2","secLow32","concat","length","decodeTimestampExtension","timestampExtension","type","encode","decode"],"sources":["D:/Source/Repos/Chat/Try3/UI/ClientApp/node_modules/@msgpack/msgpack/dist.es5+esm/timestamp.mjs"],"sourcesContent":["// https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\nimport { DecodeError } from \"./DecodeError.mjs\";\nimport { getInt64, setInt64 } from \"./utils/int.mjs\";\nexport var EXT_TIMESTAMP = -1;\nvar TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int\nvar TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int\nexport function encodeTimeSpecToTimestamp(_a) {\n    var sec = _a.sec, nsec = _a.nsec;\n    if (sec >= 0 && nsec >= 0 && sec <= TIMESTAMP64_MAX_SEC) {\n        // Here sec >= 0 && nsec >= 0\n        if (nsec === 0 && sec <= TIMESTAMP32_MAX_SEC) {\n            // timestamp 32 = { sec32 (unsigned) }\n            var rv = new Uint8Array(4);\n            var view = new DataView(rv.buffer);\n            view.setUint32(0, sec);\n            return rv;\n        }\n        else {\n            // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }\n            var secHigh = sec / 0x100000000;\n            var secLow = sec & 0xffffffff;\n            var rv = new Uint8Array(8);\n            var view = new DataView(rv.buffer);\n            // nsec30 | secHigh2\n            view.setUint32(0, (nsec << 2) | (secHigh & 0x3));\n            // secLow32\n            view.setUint32(4, secLow);\n            return rv;\n        }\n    }\n    else {\n        // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n        var rv = new Uint8Array(12);\n        var view = new DataView(rv.buffer);\n        view.setUint32(0, nsec);\n        setInt64(view, 4, sec);\n        return rv;\n    }\n}\nexport function encodeDateToTimeSpec(date) {\n    var msec = date.getTime();\n    var sec = Math.floor(msec / 1e3);\n    var nsec = (msec - sec * 1e3) * 1e6;\n    // Normalizes { sec, nsec } to ensure nsec is unsigned.\n    var nsecInSec = Math.floor(nsec / 1e9);\n    return {\n        sec: sec + nsecInSec,\n        nsec: nsec - nsecInSec * 1e9,\n    };\n}\nexport function encodeTimestampExtension(object) {\n    if (object instanceof Date) {\n        var timeSpec = encodeDateToTimeSpec(object);\n        return encodeTimeSpecToTimestamp(timeSpec);\n    }\n    else {\n        return null;\n    }\n}\nexport function decodeTimestampToTimeSpec(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    // data may be 32, 64, or 96 bits\n    switch (data.byteLength) {\n        case 4: {\n            // timestamp 32 = { sec32 }\n            var sec = view.getUint32(0);\n            var nsec = 0;\n            return { sec: sec, nsec: nsec };\n        }\n        case 8: {\n            // timestamp 64 = { nsec30, sec34 }\n            var nsec30AndSecHigh2 = view.getUint32(0);\n            var secLow32 = view.getUint32(4);\n            var sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;\n            var nsec = nsec30AndSecHigh2 >>> 2;\n            return { sec: sec, nsec: nsec };\n        }\n        case 12: {\n            // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n            var sec = getInt64(view, 4);\n            var nsec = view.getUint32(0);\n            return { sec: sec, nsec: nsec };\n        }\n        default:\n            throw new DecodeError(\"Unrecognized data size for timestamp (expected 4, 8, or 12): \".concat(data.length));\n    }\n}\nexport function decodeTimestampExtension(data) {\n    var timeSpec = decodeTimestampToTimeSpec(data);\n    return new Date(timeSpec.sec * 1e3 + timeSpec.nsec / 1e6);\n}\nexport var timestampExtension = {\n    type: EXT_TIMESTAMP,\n    encode: encodeTimestampExtension,\n    decode: decodeTimestampExtension,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}