{"ast":null,"code":"var _a, _b, _c;\n/* eslint-disable @typescript-eslint/no-unnecessary-condition */\n\n\nimport { UINT32_MAX } from \"./int.mjs\";\nvar TEXT_ENCODING_AVAILABLE = (typeof process === \"undefined\" || ((_a = process === null || process === void 0 ? void 0 : process.env) === null || _a === void 0 ? void 0 : _a[\"TEXT_ENCODING\"]) !== \"never\") && typeof TextEncoder !== \"undefined\" && typeof TextDecoder !== \"undefined\";\nexport function utf8Count(str) {\n  var strLength = str.length;\n  var byteLength = 0;\n  var pos = 0;\n\n  while (pos < strLength) {\n    var value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      byteLength++;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      byteLength += 2;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          var extra = str.charCodeAt(pos);\n\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        byteLength += 3;\n      } else {\n        // 4-byte\n        byteLength += 4;\n      }\n    }\n  }\n\n  return byteLength;\n}\nexport function utf8EncodeJs(str, output, outputOffset) {\n  var strLength = str.length;\n  var offset = outputOffset;\n  var pos = 0;\n\n  while (pos < strLength) {\n    var value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      output[offset++] = value;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      output[offset++] = value >> 6 & 0x1f | 0xc0;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          var extra = str.charCodeAt(pos);\n\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        output[offset++] = value >> 12 & 0x0f | 0xe0;\n        output[offset++] = value >> 6 & 0x3f | 0x80;\n      } else {\n        // 4-byte\n        output[offset++] = value >> 18 & 0x07 | 0xf0;\n        output[offset++] = value >> 12 & 0x3f | 0x80;\n        output[offset++] = value >> 6 & 0x3f | 0x80;\n      }\n    }\n\n    output[offset++] = value & 0x3f | 0x80;\n  }\n}\nvar sharedTextEncoder = TEXT_ENCODING_AVAILABLE ? new TextEncoder() : undefined;\nexport var TEXT_ENCODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE ? UINT32_MAX : typeof process !== \"undefined\" && ((_b = process === null || process === void 0 ? void 0 : process.env) === null || _b === void 0 ? void 0 : _b[\"TEXT_ENCODING\"]) !== \"force\" ? 200 : 0;\n\nfunction utf8EncodeTEencode(str, output, outputOffset) {\n  output.set(sharedTextEncoder.encode(str), outputOffset);\n}\n\nfunction utf8EncodeTEencodeInto(str, output, outputOffset) {\n  sharedTextEncoder.encodeInto(str, output.subarray(outputOffset));\n}\n\nexport var utf8EncodeTE = (sharedTextEncoder === null || sharedTextEncoder === void 0 ? void 0 : sharedTextEncoder.encodeInto) ? utf8EncodeTEencodeInto : utf8EncodeTEencode;\nvar CHUNK_SIZE = 4096;\nexport function utf8DecodeJs(bytes, inputOffset, byteLength) {\n  var offset = inputOffset;\n  var end = offset + byteLength;\n  var units = [];\n  var result = \"\";\n\n  while (offset < end) {\n    var byte1 = bytes[offset++];\n\n    if ((byte1 & 0x80) === 0) {\n      // 1 byte\n      units.push(byte1);\n    } else if ((byte1 & 0xe0) === 0xc0) {\n      // 2 bytes\n      var byte2 = bytes[offset++] & 0x3f;\n      units.push((byte1 & 0x1f) << 6 | byte2);\n    } else if ((byte1 & 0xf0) === 0xe0) {\n      // 3 bytes\n      var byte2 = bytes[offset++] & 0x3f;\n      var byte3 = bytes[offset++] & 0x3f;\n      units.push((byte1 & 0x1f) << 12 | byte2 << 6 | byte3);\n    } else if ((byte1 & 0xf8) === 0xf0) {\n      // 4 bytes\n      var byte2 = bytes[offset++] & 0x3f;\n      var byte3 = bytes[offset++] & 0x3f;\n      var byte4 = bytes[offset++] & 0x3f;\n      var unit = (byte1 & 0x07) << 0x12 | byte2 << 0x0c | byte3 << 0x06 | byte4;\n\n      if (unit > 0xffff) {\n        unit -= 0x10000;\n        units.push(unit >>> 10 & 0x3ff | 0xd800);\n        unit = 0xdc00 | unit & 0x3ff;\n      }\n\n      units.push(unit);\n    } else {\n      units.push(byte1);\n    }\n\n    if (units.length >= CHUNK_SIZE) {\n      result += String.fromCharCode.apply(String, units);\n      units.length = 0;\n    }\n  }\n\n  if (units.length > 0) {\n    result += String.fromCharCode.apply(String, units);\n  }\n\n  return result;\n}\nvar sharedTextDecoder = TEXT_ENCODING_AVAILABLE ? new TextDecoder() : null;\nexport var TEXT_DECODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE ? UINT32_MAX : typeof process !== \"undefined\" && ((_c = process === null || process === void 0 ? void 0 : process.env) === null || _c === void 0 ? void 0 : _c[\"TEXT_DECODER\"]) !== \"force\" ? 200 : 0;\nexport function utf8DecodeTD(bytes, inputOffset, byteLength) {\n  var stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);\n  return sharedTextDecoder.decode(stringBytes);\n}","map":{"version":3,"names":["_a","_b","_c","UINT32_MAX","TEXT_ENCODING_AVAILABLE","process","env","TextEncoder","TextDecoder","utf8Count","str","strLength","length","byteLength","pos","value","charCodeAt","extra","utf8EncodeJs","output","outputOffset","offset","sharedTextEncoder","undefined","TEXT_ENCODER_THRESHOLD","utf8EncodeTEencode","set","encode","utf8EncodeTEencodeInto","encodeInto","subarray","utf8EncodeTE","CHUNK_SIZE","utf8DecodeJs","bytes","inputOffset","end","units","result","byte1","push","byte2","byte3","byte4","unit","String","fromCharCode","apply","sharedTextDecoder","TEXT_DECODER_THRESHOLD","utf8DecodeTD","stringBytes","decode"],"sources":["D:/Source/Repos/Chat/Try3/UI/ClientApp/node_modules/@msgpack/msgpack/dist.es5+esm/utils/utf8.mjs"],"sourcesContent":["var _a, _b, _c;\n/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { UINT32_MAX } from \"./int.mjs\";\nvar TEXT_ENCODING_AVAILABLE = (typeof process === \"undefined\" || ((_a = process === null || process === void 0 ? void 0 : process.env) === null || _a === void 0 ? void 0 : _a[\"TEXT_ENCODING\"]) !== \"never\") &&\n    typeof TextEncoder !== \"undefined\" &&\n    typeof TextDecoder !== \"undefined\";\nexport function utf8Count(str) {\n    var strLength = str.length;\n    var byteLength = 0;\n    var pos = 0;\n    while (pos < strLength) {\n        var value = str.charCodeAt(pos++);\n        if ((value & 0xffffff80) === 0) {\n            // 1-byte\n            byteLength++;\n            continue;\n        }\n        else if ((value & 0xfffff800) === 0) {\n            // 2-bytes\n            byteLength += 2;\n        }\n        else {\n            // handle surrogate pair\n            if (value >= 0xd800 && value <= 0xdbff) {\n                // high surrogate\n                if (pos < strLength) {\n                    var extra = str.charCodeAt(pos);\n                    if ((extra & 0xfc00) === 0xdc00) {\n                        ++pos;\n                        value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                    }\n                }\n            }\n            if ((value & 0xffff0000) === 0) {\n                // 3-byte\n                byteLength += 3;\n            }\n            else {\n                // 4-byte\n                byteLength += 4;\n            }\n        }\n    }\n    return byteLength;\n}\nexport function utf8EncodeJs(str, output, outputOffset) {\n    var strLength = str.length;\n    var offset = outputOffset;\n    var pos = 0;\n    while (pos < strLength) {\n        var value = str.charCodeAt(pos++);\n        if ((value & 0xffffff80) === 0) {\n            // 1-byte\n            output[offset++] = value;\n            continue;\n        }\n        else if ((value & 0xfffff800) === 0) {\n            // 2-bytes\n            output[offset++] = ((value >> 6) & 0x1f) | 0xc0;\n        }\n        else {\n            // handle surrogate pair\n            if (value >= 0xd800 && value <= 0xdbff) {\n                // high surrogate\n                if (pos < strLength) {\n                    var extra = str.charCodeAt(pos);\n                    if ((extra & 0xfc00) === 0xdc00) {\n                        ++pos;\n                        value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                    }\n                }\n            }\n            if ((value & 0xffff0000) === 0) {\n                // 3-byte\n                output[offset++] = ((value >> 12) & 0x0f) | 0xe0;\n                output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n            }\n            else {\n                // 4-byte\n                output[offset++] = ((value >> 18) & 0x07) | 0xf0;\n                output[offset++] = ((value >> 12) & 0x3f) | 0x80;\n                output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n            }\n        }\n        output[offset++] = (value & 0x3f) | 0x80;\n    }\n}\nvar sharedTextEncoder = TEXT_ENCODING_AVAILABLE ? new TextEncoder() : undefined;\nexport var TEXT_ENCODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE\n    ? UINT32_MAX\n    : typeof process !== \"undefined\" && ((_b = process === null || process === void 0 ? void 0 : process.env) === null || _b === void 0 ? void 0 : _b[\"TEXT_ENCODING\"]) !== \"force\"\n        ? 200\n        : 0;\nfunction utf8EncodeTEencode(str, output, outputOffset) {\n    output.set(sharedTextEncoder.encode(str), outputOffset);\n}\nfunction utf8EncodeTEencodeInto(str, output, outputOffset) {\n    sharedTextEncoder.encodeInto(str, output.subarray(outputOffset));\n}\nexport var utf8EncodeTE = (sharedTextEncoder === null || sharedTextEncoder === void 0 ? void 0 : sharedTextEncoder.encodeInto) ? utf8EncodeTEencodeInto : utf8EncodeTEencode;\nvar CHUNK_SIZE = 4096;\nexport function utf8DecodeJs(bytes, inputOffset, byteLength) {\n    var offset = inputOffset;\n    var end = offset + byteLength;\n    var units = [];\n    var result = \"\";\n    while (offset < end) {\n        var byte1 = bytes[offset++];\n        if ((byte1 & 0x80) === 0) {\n            // 1 byte\n            units.push(byte1);\n        }\n        else if ((byte1 & 0xe0) === 0xc0) {\n            // 2 bytes\n            var byte2 = bytes[offset++] & 0x3f;\n            units.push(((byte1 & 0x1f) << 6) | byte2);\n        }\n        else if ((byte1 & 0xf0) === 0xe0) {\n            // 3 bytes\n            var byte2 = bytes[offset++] & 0x3f;\n            var byte3 = bytes[offset++] & 0x3f;\n            units.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n        }\n        else if ((byte1 & 0xf8) === 0xf0) {\n            // 4 bytes\n            var byte2 = bytes[offset++] & 0x3f;\n            var byte3 = bytes[offset++] & 0x3f;\n            var byte4 = bytes[offset++] & 0x3f;\n            var unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n            if (unit > 0xffff) {\n                unit -= 0x10000;\n                units.push(((unit >>> 10) & 0x3ff) | 0xd800);\n                unit = 0xdc00 | (unit & 0x3ff);\n            }\n            units.push(unit);\n        }\n        else {\n            units.push(byte1);\n        }\n        if (units.length >= CHUNK_SIZE) {\n            result += String.fromCharCode.apply(String, units);\n            units.length = 0;\n        }\n    }\n    if (units.length > 0) {\n        result += String.fromCharCode.apply(String, units);\n    }\n    return result;\n}\nvar sharedTextDecoder = TEXT_ENCODING_AVAILABLE ? new TextDecoder() : null;\nexport var TEXT_DECODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE\n    ? UINT32_MAX\n    : typeof process !== \"undefined\" && ((_c = process === null || process === void 0 ? void 0 : process.env) === null || _c === void 0 ? void 0 : _c[\"TEXT_DECODER\"]) !== \"force\"\n        ? 200\n        : 0;\nexport function utf8DecodeTD(bytes, inputOffset, byteLength) {\n    var stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);\n    return sharedTextDecoder.decode(stringBytes);\n}\n"],"mappings":"AAAA,IAAIA,EAAJ,EAAQC,EAAR,EAAYC,EAAZ;AACA;;;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,IAAIC,uBAAuB,GAAG,CAAC,OAAOC,OAAP,KAAmB,WAAnB,IAAkC,CAAC,CAACL,EAAE,GAAGK,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACC,GAAhE,MAAyE,IAAzE,IAAiFN,EAAE,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,EAAE,CAAC,eAAD,CAA7G,MAAoI,OAAvK,KAC1B,OAAOO,WAAP,KAAuB,WADG,IAE1B,OAAOC,WAAP,KAAuB,WAF3B;AAGA,OAAO,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;EAC3B,IAAIC,SAAS,GAAGD,GAAG,CAACE,MAApB;EACA,IAAIC,UAAU,GAAG,CAAjB;EACA,IAAIC,GAAG,GAAG,CAAV;;EACA,OAAOA,GAAG,GAAGH,SAAb,EAAwB;IACpB,IAAII,KAAK,GAAGL,GAAG,CAACM,UAAJ,CAAeF,GAAG,EAAlB,CAAZ;;IACA,IAAI,CAACC,KAAK,GAAG,UAAT,MAAyB,CAA7B,EAAgC;MAC5B;MACAF,UAAU;MACV;IACH,CAJD,MAKK,IAAI,CAACE,KAAK,GAAG,UAAT,MAAyB,CAA7B,EAAgC;MACjC;MACAF,UAAU,IAAI,CAAd;IACH,CAHI,MAIA;MACD;MACA,IAAIE,KAAK,IAAI,MAAT,IAAmBA,KAAK,IAAI,MAAhC,EAAwC;QACpC;QACA,IAAID,GAAG,GAAGH,SAAV,EAAqB;UACjB,IAAIM,KAAK,GAAGP,GAAG,CAACM,UAAJ,CAAeF,GAAf,CAAZ;;UACA,IAAI,CAACG,KAAK,GAAG,MAAT,MAAqB,MAAzB,EAAiC;YAC7B,EAAEH,GAAF;YACAC,KAAK,GAAG,CAAC,CAACA,KAAK,GAAG,KAAT,KAAmB,EAApB,KAA2BE,KAAK,GAAG,KAAnC,IAA4C,OAApD;UACH;QACJ;MACJ;;MACD,IAAI,CAACF,KAAK,GAAG,UAAT,MAAyB,CAA7B,EAAgC;QAC5B;QACAF,UAAU,IAAI,CAAd;MACH,CAHD,MAIK;QACD;QACAA,UAAU,IAAI,CAAd;MACH;IACJ;EACJ;;EACD,OAAOA,UAAP;AACH;AACD,OAAO,SAASK,YAAT,CAAsBR,GAAtB,EAA2BS,MAA3B,EAAmCC,YAAnC,EAAiD;EACpD,IAAIT,SAAS,GAAGD,GAAG,CAACE,MAApB;EACA,IAAIS,MAAM,GAAGD,YAAb;EACA,IAAIN,GAAG,GAAG,CAAV;;EACA,OAAOA,GAAG,GAAGH,SAAb,EAAwB;IACpB,IAAII,KAAK,GAAGL,GAAG,CAACM,UAAJ,CAAeF,GAAG,EAAlB,CAAZ;;IACA,IAAI,CAACC,KAAK,GAAG,UAAT,MAAyB,CAA7B,EAAgC;MAC5B;MACAI,MAAM,CAACE,MAAM,EAAP,CAAN,GAAmBN,KAAnB;MACA;IACH,CAJD,MAKK,IAAI,CAACA,KAAK,GAAG,UAAT,MAAyB,CAA7B,EAAgC;MACjC;MACAI,MAAM,CAACE,MAAM,EAAP,CAAN,GAAqBN,KAAK,IAAI,CAAV,GAAe,IAAhB,GAAwB,IAA3C;IACH,CAHI,MAIA;MACD;MACA,IAAIA,KAAK,IAAI,MAAT,IAAmBA,KAAK,IAAI,MAAhC,EAAwC;QACpC;QACA,IAAID,GAAG,GAAGH,SAAV,EAAqB;UACjB,IAAIM,KAAK,GAAGP,GAAG,CAACM,UAAJ,CAAeF,GAAf,CAAZ;;UACA,IAAI,CAACG,KAAK,GAAG,MAAT,MAAqB,MAAzB,EAAiC;YAC7B,EAAEH,GAAF;YACAC,KAAK,GAAG,CAAC,CAACA,KAAK,GAAG,KAAT,KAAmB,EAApB,KAA2BE,KAAK,GAAG,KAAnC,IAA4C,OAApD;UACH;QACJ;MACJ;;MACD,IAAI,CAACF,KAAK,GAAG,UAAT,MAAyB,CAA7B,EAAgC;QAC5B;QACAI,MAAM,CAACE,MAAM,EAAP,CAAN,GAAqBN,KAAK,IAAI,EAAV,GAAgB,IAAjB,GAAyB,IAA5C;QACAI,MAAM,CAACE,MAAM,EAAP,CAAN,GAAqBN,KAAK,IAAI,CAAV,GAAe,IAAhB,GAAwB,IAA3C;MACH,CAJD,MAKK;QACD;QACAI,MAAM,CAACE,MAAM,EAAP,CAAN,GAAqBN,KAAK,IAAI,EAAV,GAAgB,IAAjB,GAAyB,IAA5C;QACAI,MAAM,CAACE,MAAM,EAAP,CAAN,GAAqBN,KAAK,IAAI,EAAV,GAAgB,IAAjB,GAAyB,IAA5C;QACAI,MAAM,CAACE,MAAM,EAAP,CAAN,GAAqBN,KAAK,IAAI,CAAV,GAAe,IAAhB,GAAwB,IAA3C;MACH;IACJ;;IACDI,MAAM,CAACE,MAAM,EAAP,CAAN,GAAoBN,KAAK,GAAG,IAAT,GAAiB,IAApC;EACH;AACJ;AACD,IAAIO,iBAAiB,GAAGlB,uBAAuB,GAAG,IAAIG,WAAJ,EAAH,GAAuBgB,SAAtE;AACA,OAAO,IAAIC,sBAAsB,GAAG,CAACpB,uBAAD,GAC9BD,UAD8B,GAE9B,OAAOE,OAAP,KAAmB,WAAnB,IAAkC,CAAC,CAACJ,EAAE,GAAGI,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACC,GAAhE,MAAyE,IAAzE,IAAiFL,EAAE,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,EAAE,CAAC,eAAD,CAA7G,MAAoI,OAAtK,GACI,GADJ,GAEI,CAJH;;AAKP,SAASwB,kBAAT,CAA4Bf,GAA5B,EAAiCS,MAAjC,EAAyCC,YAAzC,EAAuD;EACnDD,MAAM,CAACO,GAAP,CAAWJ,iBAAiB,CAACK,MAAlB,CAAyBjB,GAAzB,CAAX,EAA0CU,YAA1C;AACH;;AACD,SAASQ,sBAAT,CAAgClB,GAAhC,EAAqCS,MAArC,EAA6CC,YAA7C,EAA2D;EACvDE,iBAAiB,CAACO,UAAlB,CAA6BnB,GAA7B,EAAkCS,MAAM,CAACW,QAAP,CAAgBV,YAAhB,CAAlC;AACH;;AACD,OAAO,IAAIW,YAAY,GAAG,CAACT,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACO,UAAzF,IAAuGD,sBAAvG,GAAgIH,kBAAnJ;AACP,IAAIO,UAAU,GAAG,IAAjB;AACA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,WAA7B,EAA0CtB,UAA1C,EAAsD;EACzD,IAAIQ,MAAM,GAAGc,WAAb;EACA,IAAIC,GAAG,GAAGf,MAAM,GAAGR,UAAnB;EACA,IAAIwB,KAAK,GAAG,EAAZ;EACA,IAAIC,MAAM,GAAG,EAAb;;EACA,OAAOjB,MAAM,GAAGe,GAAhB,EAAqB;IACjB,IAAIG,KAAK,GAAGL,KAAK,CAACb,MAAM,EAAP,CAAjB;;IACA,IAAI,CAACkB,KAAK,GAAG,IAAT,MAAmB,CAAvB,EAA0B;MACtB;MACAF,KAAK,CAACG,IAAN,CAAWD,KAAX;IACH,CAHD,MAIK,IAAI,CAACA,KAAK,GAAG,IAAT,MAAmB,IAAvB,EAA6B;MAC9B;MACA,IAAIE,KAAK,GAAGP,KAAK,CAACb,MAAM,EAAP,CAAL,GAAkB,IAA9B;MACAgB,KAAK,CAACG,IAAN,CAAY,CAACD,KAAK,GAAG,IAAT,KAAkB,CAAnB,GAAwBE,KAAnC;IACH,CAJI,MAKA,IAAI,CAACF,KAAK,GAAG,IAAT,MAAmB,IAAvB,EAA6B;MAC9B;MACA,IAAIE,KAAK,GAAGP,KAAK,CAACb,MAAM,EAAP,CAAL,GAAkB,IAA9B;MACA,IAAIqB,KAAK,GAAGR,KAAK,CAACb,MAAM,EAAP,CAAL,GAAkB,IAA9B;MACAgB,KAAK,CAACG,IAAN,CAAY,CAACD,KAAK,GAAG,IAAT,KAAkB,EAAnB,GAA0BE,KAAK,IAAI,CAAnC,GAAwCC,KAAnD;IACH,CALI,MAMA,IAAI,CAACH,KAAK,GAAG,IAAT,MAAmB,IAAvB,EAA6B;MAC9B;MACA,IAAIE,KAAK,GAAGP,KAAK,CAACb,MAAM,EAAP,CAAL,GAAkB,IAA9B;MACA,IAAIqB,KAAK,GAAGR,KAAK,CAACb,MAAM,EAAP,CAAL,GAAkB,IAA9B;MACA,IAAIsB,KAAK,GAAGT,KAAK,CAACb,MAAM,EAAP,CAAL,GAAkB,IAA9B;MACA,IAAIuB,IAAI,GAAI,CAACL,KAAK,GAAG,IAAT,KAAkB,IAAnB,GAA4BE,KAAK,IAAI,IAArC,GAA8CC,KAAK,IAAI,IAAvD,GAA+DC,KAA1E;;MACA,IAAIC,IAAI,GAAG,MAAX,EAAmB;QACfA,IAAI,IAAI,OAAR;QACAP,KAAK,CAACG,IAAN,CAAaI,IAAI,KAAK,EAAV,GAAgB,KAAjB,GAA0B,MAArC;QACAA,IAAI,GAAG,SAAUA,IAAI,GAAG,KAAxB;MACH;;MACDP,KAAK,CAACG,IAAN,CAAWI,IAAX;IACH,CAZI,MAaA;MACDP,KAAK,CAACG,IAAN,CAAWD,KAAX;IACH;;IACD,IAAIF,KAAK,CAACzB,MAAN,IAAgBoB,UAApB,EAAgC;MAC5BM,MAAM,IAAIO,MAAM,CAACC,YAAP,CAAoBC,KAApB,CAA0BF,MAA1B,EAAkCR,KAAlC,CAAV;MACAA,KAAK,CAACzB,MAAN,GAAe,CAAf;IACH;EACJ;;EACD,IAAIyB,KAAK,CAACzB,MAAN,GAAe,CAAnB,EAAsB;IAClB0B,MAAM,IAAIO,MAAM,CAACC,YAAP,CAAoBC,KAApB,CAA0BF,MAA1B,EAAkCR,KAAlC,CAAV;EACH;;EACD,OAAOC,MAAP;AACH;AACD,IAAIU,iBAAiB,GAAG5C,uBAAuB,GAAG,IAAII,WAAJ,EAAH,GAAuB,IAAtE;AACA,OAAO,IAAIyC,sBAAsB,GAAG,CAAC7C,uBAAD,GAC9BD,UAD8B,GAE9B,OAAOE,OAAP,KAAmB,WAAnB,IAAkC,CAAC,CAACH,EAAE,GAAGG,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACC,GAAhE,MAAyE,IAAzE,IAAiFJ,EAAE,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,EAAE,CAAC,cAAD,CAA7G,MAAmI,OAArK,GACI,GADJ,GAEI,CAJH;AAKP,OAAO,SAASgD,YAAT,CAAsBhB,KAAtB,EAA6BC,WAA7B,EAA0CtB,UAA1C,EAAsD;EACzD,IAAIsC,WAAW,GAAGjB,KAAK,CAACJ,QAAN,CAAeK,WAAf,EAA4BA,WAAW,GAAGtB,UAA1C,CAAlB;EACA,OAAOmC,iBAAiB,CAACI,MAAlB,CAAyBD,WAAzB,CAAP;AACH"},"metadata":{},"sourceType":"module"}